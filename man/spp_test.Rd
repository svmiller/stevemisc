% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spp_test.R
\name{spp_test}
\alias{spp_test}
\title{Simulate a Phillips-Perron Test to Assess Unit Root in a Time Series}
\usage{
spp_test(x, lag_short = TRUE, n_sims = 1000, interpret = TRUE, pp_stat = "tau")
}
\arguments{
\item{x}{a vector}

\item{lag_short}{logical, defaults to \code{TRUE}. If \code{TRUE}, the
"short-term" lag is used for the Phillips-Perron test. If \code{FALSE}, the
"long-term" lag is used.}

\item{n_sims}{the number of simulations for calculating an interval or
distribution of test statistics of a white-noise time series. Defaults to
1,000.}

\item{interpret}{logical, defaults to \code{TRUE}. If \code{TRUE}, the user
gets a message summarizing the simulations and what they mean for assessing
non-stationarity or stationarity.}

\item{pp_stat}{what type of Phillip-Perron test statistic should be summarized
and returned to the user. Must be either "tau" or "rho".}
}
\value{
\code{spp_test()} returns a list of length 2 or 3. The first element
in the list is a matrix of rho statistics and tau statistics calculated by
the Phillips-Perron test. The second element is a data frame of the simulated
rho and tau statistics of a known, white-noise time series. If the user asks
for an interpretation of the results in the console, the message is also
added as the third element in the list for posterity.
}
\description{
\code{spp_test()} provides a simulation approach to assessing
unit root in a time series by way of the Phillips-Perron test. It takes a
vector and performs three Phillips-Perron tests (no drift, no trend; drift, no
trend; drift and trend) and calculates both rho and tau statistics as one
normally would. Rather than interpolate or approximate a \emph{p}-value, it
simulates some user-specified number of Phillips-Perron tests of a known,
white-noise time series matching the length of the time series the user
provides. This allows the user to make assessments of non-stationarity or
stationarity by way of simulation rather than approximation from received
critical values by way of books or these some years out of date.
}
\details{
Some knowledge of Augmented Dickey-Fuller and the Phillips-Perron
procedure is assumed here. Generally, the Phillips-Perron test purports to
build on the Augmented Dickey-Fuller procedure through two primary means. The
first is relaxing the need to specify or assume lag structures ad hoc or ex
ante. Only a short-term lag or long-term lag are necessary. The second is
that its robust to various forms of heteroskedasticity in the error term.

The short-term and long-term lags follow the convention introduced in the
Phillips-Perron test. The short-term lag uses the default number of
Newey-West lags, defined as the floor of 4*(n/100)^.25 where \code{n} is the length
of the time series. The long-term lag substitutes 4 for 12 in this equation.

This function specifies three different types of tests: 1) no drift, no trend,
2) drift, no trend, and 3) drift and trend. In the language of the \code{lm()}
function, the first is \code{lm(y ~ ly - 1)} where \code{y} is the value of \code{y} and
\code{ly} is its first-order lag. The second test is \code{lm(y ~ ly)}, intuitively
suggesting the \emph{y}-intercept in this equation is the "drift". The third would
be \code{lm(y ~ ly + t)} with \code{t} being a simple integer that increases by 1 for
each observation (i.e. a time-trend).

There are two types of statistics in the Phillips-Perron test: rho and tau.
Of the two, tau is the more intuitive statistic and compares favorably to its
corollary statistic in the Augmented Dickey-Fuller test. It's why you'll
typically see tau reported as the statistic of interest in other
implementations. rho has its utility for more advanced diagnostics, though.
Both are calculated in this function, though tau is the default statistic.
}
\examples{

a <- rnorm(25) # white noise
b <- cumsum(a) # random walk

spp_test(a, n_sims = 25, interpret = FALSE)
spp_test(b, n_sims = 25)
}
\author{
Steven V. Miller
}
