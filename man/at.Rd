% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/at.R
\name{diff_at}
\alias{diff_at}
\alias{r1sd_at}
\alias{r2sd_at}
\title{Scoped Helper Verbs}
\usage{
diff_at(data, x, l = 1)

r1sd_at(data, x, na = TRUE)

r2sd_at(data, x, na = TRUE)
}
\arguments{
\item{data}{a data frame}

\item{x}{a vector, likely in your data frame}

\item{l}{The order of lags for calculating differences in \code{diff_at}.
Applicable only to \code{diff_at}.}

\item{na}{what to do with NAs in the vector. Defaults to TRUE
(i.e. passes over the missing observations). Not applicable to \code{diff_at}.}
}
\value{
The function returns a numeric vector rescaled with a mean of 0 and a
standard deviation of .5.
}
\description{
Scoped helper verbs included in this R Documentation file
allow for targeted commands on specified columns. They also rename
the ensuing output to conform to my preferred style. The commands here
are multiple and explained in the details section below.
}
\details{
\code{r1sd_at} is a wrapper for \code{mutate_at} and \code{rename_at} from
\pkg{dplyr}. It both rescales the supplied vectors to new vectors and renames
the vectors to each have a prefix of \code{s_}. Note the rescaling here is
just by one standard deviation and not two.

\code{r2sd_at} is a wrapper for \code{mutate_at} and \code{rename_at} from
\pkg{dplyr}. It both rescales the supplied vectors to new vectors and renames
the vectors to each have a prefix of \code{z_}. Note the rescaling here is by
two standard deviations and not one.

By default, \code{na.rm} is set to TRUE. If you have missing data, the function will just pass
over them.

Gelman (2008) argues that rescaling by two standard deviations puts regression inputs
on roughly the same scale no matter their original scale. This allows for some honest, if preliminary,
assessment of relative effect sizes from the regression output. This does that, but
without requiring the \code{rescale} function from \pkg{arm}.
I'm trying to reduce the packages on which my workflow relies.

Importantly, I tend to rescale only the ordinal and interval inputs and leave the binary inputs as 0/1.
So, my \code{r2sd} function doesn't have any of the fancier if-else statements that Gelman's \code{rescale}
function has.
}
\examples{

data.frame(x = cumsum(rnorm(10)),
           y = cumsum(rnorm(10)),
           group = sample(c("A", "B"))) -> Example

# Note: this works in a group_by() context, which you should do in a case like this.
diff_at(Example, c("x", "y"))

r1sd_at(Example, c("x", "y"))

r2sd_at(Example, c("x", "y"))
}
\references{
Gelman, Andrew. 2008. "Scaling Regression Inputs by Dividing by Two Standard Deviations." \emph{Statistics in Medicine} 27: 2865--2873.
}
