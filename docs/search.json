[{"path":"http://svmiller.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steve Miller. Author, maintainer. Ben Bolker. Contributor. Dave Armstrong. Contributor. John Fox. Contributor. Winston Chang. Contributor. Brian Ripley. Contributor. Bill Venables. Contributor. Pascal van Kooten. Contributor. Gerko Vink. Contributor. Paul Williamson. Contributor. Andreas Beger. Contributor. Vincent Arel-Bundock. Contributor. Grant McDermott. Contributor. Hadley Wickham. Contributor.","code":""},{"path":"http://svmiller.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Miller S (2024). stevemisc: Steve's Miscellaneous Functions. R package version 1.7.9.","code":"@Manual{,   title = {stevemisc: Steve's Miscellaneous Functions},   author = {Steve Miller},   year = {2024},   note = {R package version 1.7.9}, }"},{"path":"http://svmiller.com/index.html","id":"steves-miscellaneous-functions","dir":"","previous_headings":"","what":"Steve's Miscellaneous Functions","title":"Steve's Miscellaneous Functions","text":"{stevemisc} R package includes various functions tools written years assist research, teaching, public presentations (.e. stuff put blog). offer public release 1) vain think want entire, eponymous ecosystem R programming language (.e. “steveverse”) 2) think tools broadly useful users ’m trying bundle things offer (prominently {steveproj}). Namely, {stevemisc} offers tools assist data organization, data presentation, data recoding, data simulation. usage section elaborate uses.","code":""},{"path":"http://svmiller.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Steve's Miscellaneous Functions","text":"can install CRAN. can install development version {stevemisc} Github via devtools package. suppose using remotes package work well.","code":"install.packages(\"stevemisc\") devtools::install_github(\"svmiller/stevemisc\")"},{"path":"http://svmiller.com/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Steve's Miscellaneous Functions","text":"documentation files include several “examples.” offer proofs concept. lots cool stuff {stevemisc} review . Instead, ’ll offer think important ones.","code":""},{"path":"http://svmiller.com/index.html","id":"carrec-a-port-of-carrecode","dir":"","previous_headings":"Usage","what":"carrec(): A Port of car::recode()","title":"Steve's Miscellaneous Functions","text":"carrec() (phonetically: “car-wreck”) simple port car::recode() put package various function clashes car package. cut teeth Stata, package offers Stata-like recoding features tough find R programming language. comes shortcut well, carr(). example, assume following vector variable interest 1-10 scale. want code variables 6 1 code variables 1-5 0. ’s .","code":"library(tidyverse) library(stevemisc) x <- seq(1, 10) x #>  [1]  1  2  3  4  5  6  7  8  9 10  carrec(x, \"1:5=0;6:10=1\") #>  [1] 0 0 0 0 0 1 1 1 1 1 carr(x, \"1:5=0;6:10=1\") #>  [1] 0 0 0 0 0 1 1 1 1 1"},{"path":"http://svmiller.com/index.html","id":"cor2data-simulate-variables-from-a-standard-normal-distribution-with-pre-specified-correlations","dir":"","previous_headings":"Usage","what":"cor2data(): Simulate Variables from a Standard Normal Distribution with Pre-Specified Correlations","title":"Steve's Miscellaneous Functions","text":"cor2data() great instructional purposes simulating data standard normal distribution ensuing data generated approximate pre-specified correlations. useful teaching statistical models supposed operate ideal circumstances. example, ’s used function teach instrumental variable models. Notice correlations devise satisfy assumptions exclusion, exogeneity, relevance.","code":"vars = c(\"control\", \"treat\", \"instr\", \"e\") Cor <- matrix(cbind(1, 0, 0, 0,                     0, 1, 0.85, -0.5,                     0, 0.85, 1, 0,                     0, -0.5, 0, 1),nrow=4) rownames(Cor) <- colnames(Cor) <- vars  Fake <- as_tibble(cor2data(Cor, 1000, 8675309)) # Jenny I got your number... Fake$y <- with(Fake, 5 + .5*control + .5*treat + e)  Fake #> # A tibble: 1,000 × 5 #>    control   treat   instr       e     y #>      <dbl>   <dbl>   <dbl>   <dbl> <dbl> #>  1 -0.997   0.722   0.288  -0.220   4.64 #>  2  1.07    0.987   0.854  -0.260   5.77 #>  3  0.572   0.904  -0.0482 -1.38    4.36 #>  4  0.150  -0.660  -1.08    0.148   4.89 #>  5 -0.442  -0.901  -0.845   0.0682  4.40 #>  6  1.99    0.0440 -0.176  -0.497   5.52 #>  7 -0.415   0.683   0.944   0.383   5.52 #>  8 -0.186   0.383   0.524   0.475   5.57 #>  9  1.57    0.589   0.176  -0.863   5.22 #> 10  0.0639 -0.313  -0.397  -0.0922  4.78 #> # … with 990 more rows"},{"path":"http://svmiller.com/index.html","id":"corvectors-create-multivariate-data-by-permutation","dir":"","previous_headings":"Usage","what":"corvectors(): Create Multivariate Data by Permutation","title":"Steve's Miscellaneous Functions","text":"corvectors() port correlate() {correlate} package. package longer CRAN, ’s wonderful creating multivariate data set correlations variables can number raw scales. used function create fake data mimic API data survey, make available fakeAPI stevedata package. smaller version .","code":"data(api, package=\"survey\") cormatrix <- cor(apipop %>%                    select(meals, col.grad, full) %>% na.omit)  nobs <- 1e3  corvectors(cbind(runif(nobs, 0, 100),                  rbnorm(nobs, 20.73, 14.14, 0, 100),                  rbnorm(nobs, 87.52, 12.93, 0, 100)), cormatrix) %>%    as.data.frame() %>% as_tibble() %>%   rename(meals = V1, colgrad = V2, fullqual = V3) #> # A tibble: 1,000 × 3 #>     meals colgrad fullqual #>     <dbl>   <dbl>    <dbl> #>  1 17.9     31.9      80.1 #>  2 10.5     52.1      96.9 #>  3 17.0     73.8      89.6 #>  4 75.5      9.86     79.4 #>  5 71.6     14.4      82.6 #>  6 72.0     14.3      91.6 #>  7 65.3      9.76     74.4 #>  8 95.2      3.07     66.7 #>  9  0.100   30.6      98.3 #> 10  9.58    58.6      98.8 #> # … with 990 more rows"},{"path":"http://svmiller.com/index.html","id":"db_lselect-lazily-select-variables-from-multiple-tables-in-a-relational-database","dir":"","previous_headings":"Usage","what":"db_lselect(): Lazily Select Variables From Multiple Tables in a Relational Database","title":"Steve's Miscellaneous Functions","text":"db_lselect() allows select variables multiple tables SQL database. returns lazy query combines variables together one data frame (tibble). user can choose run collect() query see fit. wrote website 2020 applies real-world problems. proof concept works.","code":"library(DBI) library(RSQLite) set.seed(8675309)  A <- data.frame(uid = c(1:10),                 a = rnorm(10),                 b = sample(letters, 10),                 c = rbinom(10, 1, .5))  B <- data.frame(uid = c(11:20),                 a = rnorm(10),                 b = sample(letters, 10),                 c = rbinom(10, 1, .5))  C <- data.frame(uid = c(21:30), a = rnorm(10),                 b = sample(letters, 10),                 c = rbinom(10, 1, .5),                 d = rnorm(10))  con <- dbConnect(SQLite(), \":memory:\")  copy_to(con, A, \"A\",         temporary=FALSE)  copy_to(con, B, \"B\",         temporary=FALSE)  copy_to(con, C, \"C\",         temporary=FALSE)  # This returns no warning because columns \"a\" and \"b\" are in all tables c(\"A\", \"B\", \"C\") %>% db_lselect(con, c(\"uid\", \"a\", \"b\")) #> # Source:   lazy query [?? x 3] #> # Database: sqlite 3.36.0 [:memory:] #>      uid       a b     #>    <int>   <dbl> <chr> #>  1     1 -0.997  f     #>  2     2  0.722  z     #>  3     3 -0.617  y     #>  4     4  2.03   x     #>  5     5  1.07   c     #>  6     6  0.987  p     #>  7     7  0.0275 e     #>  8     8  0.673  i     #>  9     9  0.572  o     #> 10    10  0.904  n     #> # … with more rows  # This returns two warnings because column \"d\" is not in 2 of 3 tables. # ^ this is by design. It'll inform the user about data availability. c(\"A\", \"B\", \"C\") %>% db_lselect(con, c(\"uid\", \"a\", \"b\", \"d\")) #> Warning: Unknown columns: `d`  #> Warning: Unknown columns: `d` #> # Source:   lazy query [?? x 4] #> # Database: sqlite 3.36.0 [:memory:] #>      uid       a b         d #>    <int>   <dbl> <chr> <dbl> #>  1     1 -0.997  f        NA #>  2     2  0.722  z        NA #>  3     3 -0.617  y        NA #>  4     4  2.03   x        NA #>  5     5  1.07   c        NA #>  6     6  0.987  p        NA #>  7     7  0.0275 e        NA #>  8     8  0.673  i        NA #>  9     9  0.572  o        NA #> 10    10  0.904  n        NA #> # … with more rows"},{"path":"http://svmiller.com/index.html","id":"get_sims-get-simulations-from-a-model-object-with-new-data","dir":"","previous_headings":"Usage","what":"get_sims(): Get Simulations from a Model Object (with New Data)","title":"Steve's Miscellaneous Functions","text":"get_sims() function simulate quantities interest way multivariate normal distribution “new data” regression model. coincides “informal Bayesian” approach estimating quantities interest importantly also provide user idea upper lower bounds around estimated quantity interest. ’s flexible linear models, generalized linear models, mixed model equivalents. note: simulations mixed models omit (alternatively: “consider”) random intercepts. travels, reviewers care quantities just want see quantities fixed effects model. ’d like comprehensive simulation approach parameters mixed model, recommend {merTools} mixed models estimated lme4. look like linear model.","code":"library(stevedata)  M1 <- lm(immigsent ~ agea + female + eduyrs + uempla + hinctnta + lrscale, data=ESS9GB)  broom::tidy(M1) #> # A tibble: 7 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept) 11.7        1.06      11.0   4.89e-27 #> 2 agea        -0.00185    0.0101    -0.183 8.55e- 1 #> 3 female      -0.248      0.338     -0.735 4.62e- 1 #> 4 eduyrs       0.488      0.0488    10.0   7.71e-23 #> 5 uempla      -1.10       1.20      -0.915 3.60e- 1 #> 6 hinctnta     0.338      0.0614     5.50  4.52e- 8 #> 7 lrscale     -0.583      0.0881    -6.61  5.37e-11  library(modelr) # Note: the DV must be in the \"new data\".  # It doesn't matter what value it is. # It just needs to be there as a column. ESS9GB %>%   data_grid(.model=M1, immigsent = 0,              lrscale = c(min(lrscale, na.rm=T),                         max(lrscale, na.rm=T))) -> newdat  Sims <- get_sims(M1, newdat, 1000, 8675309)  Sims #> # A tibble: 2,000 × 2 #>        y   sim #>    <dbl> <dbl> #>  1  19.4     1 #>  2  13.6     1 #>  3  19.0     2 #>  4  13.5     2 #>  5  19.6     3 #>  6  12.8     3 #>  7  19.5     4 #>  8  13.4     4 #>  9  19.8     5 #> 10  13.8     5 #> # … with 1,990 more rows"},{"path":"http://svmiller.com/index.html","id":"get_var_info-get-labelled-data-from-your-variables","dir":"","previous_headings":"Usage","what":"get_var_info(): Get Labelled Data from Your Variables","title":"Steve's Miscellaneous Functions","text":"get_var_info() allows like term “peeking” labelled data. codebook handy, know data labelled, get_var_info() (shortcut: gvi()) extract pertinent information . {stevemisc} comes toy data set—ess9_labelled—two labelled variables country internet consumption ninth round European Social Survey. can extract information package. note assumes pipe-based workflow. ’s ’re sit R session recode data without assistance dual-monitor setup physical codebook.","code":"ess9_labelled #> # A tibble: 109 × 4 #>    essround edition cntry                      netusoft #>       <dbl> <chr>   <chr+lbl>                 <dbl+lbl> #>  1        9 1.2     AT [Austria] 5 [Every day]          #>  2        9 1.2     AT [Austria] 1 [Never]              #>  3        9 1.2     AT [Austria] 4 [Most days]          #>  4        9 1.2     AT [Austria] 2 [Only occasionally]  #>  5        9 1.2     AT [Austria] 3 [A few times a week] #>  6        9 1.2     BE [Belgium] 5 [Every day]          #>  7        9 1.2     BE [Belgium] 2 [Only occasionally]  #>  8        9 1.2     BE [Belgium] 1 [Never]              #>  9        9 1.2     BE [Belgium] 4 [Most days]          #> 10        9 1.2     BE [Belgium] 3 [A few times a week] #> # … with 99 more rows  # alternatively, below: # ess9_labelled %>% gvi(netusoft) # we'll do it this way, though... ess9_labelled %>% get_var_info(netusoft) #>                       var code              label #> 1 Internet use, how often    1              Never #> 2 Internet use, how often    2  Only occasionally #> 3 Internet use, how often    3 A few times a week #> 4 Internet use, how often    4          Most days #> 5 Internet use, how often    5          Every day #> 6 Internet use, how often    7            Refusal #> 7 Internet use, how often    8         Don't know #> 8 Internet use, how often    9          No answer"},{"path":"http://svmiller.com/index.html","id":"jenny-set-the-only-reproducible-seed-that-matters-and-get-a-nice-message-for-it","dir":"","previous_headings":"Usage","what":"jenny(): Set the Only Reproducible Seed that Matters, and Get a Nice Message for It","title":"Steve's Miscellaneous Functions","text":"infinite reproducible seeds. one correct one. jenny() set reproducible seed 8675309 reward nice message. get catty try use jenny() set reproducible seed.","code":"jenny() # good, seed set for 8675309 #> Jenny, I got your number... jenny(12345) # bad, and no seed set. Use set.seed() instead, you goon. #> Why are you using this function with some other reproducible seed..."},{"path":"http://svmiller.com/index.html","id":"p_z-convert-the-p-value-you-want-to-the-z-value-it-is","dir":"","previous_headings":"Usage","what":"p_z(): Convert the p-value you want to the z-value it is","title":"Steve's Miscellaneous Functions","text":"loathe statistical instruction privileges obtaining magical p-value reference area underneath standard normal curve, botch actual z-value corresponding magical p-value. simple function converts p-value want (typically .05, thanks R.. Fisher) z-value actually kind claims typically make inferential statistics. ’re going inference wrong way, let’s least get z-value right.","code":"p_z(.05) #> [1] 1.959964 p_z(c(.001, .01, .05, .1)) #> [1] 3.290527 2.575829 1.959964 1.644854"},{"path":"http://svmiller.com/index.html","id":"print_refs-print-and-format-entries-as-references","dir":"","previous_headings":"Usage","what":"print_refs(): Print and Format Entries as References","title":"Steve's Miscellaneous Functions","text":"print_refs() takes .bib entry (entries) formats reference (set references). function useful want populate syllabus reading list agency ’s formatted. example, ’s list things read cite, along illustration defaults function works (American Political Science Association style, LaTeX). stevepubs, package, contains incomplete list publications. Remember: extremely Smokey Bear voice “can jack h-index infinity.”","code":"# Note, this function does spam with some messages/warnings. # You can disable that in a chunk, as I do here. library(bib2df) print_refs(capture.output(df2bib(stevepubs))) #> Curtis, K. Amber, and Steven V. Miller. 2021. \"A (Supra)nationalist #> Personality? The Big Five's Effects on Political-Territorial #> Identification.\" \\emph{European Union Politics} 22(2): 202--26. #>  #> Gibler, Douglas M., Marc L. Hutchison, and Steven V. Miller. 2012. #> \"Individual Identity Attachments and International Conflict: The #> Importance of Territorial Threat.\" \\emph{Comparative Political #> Studies} 45(12): 1655--83. #>  #> Gibler, Douglas M., and Steven V. Miller. 2012. \"Comparing the Foreign #> Aid Policies of Presidents Bush and Obama.\" \\emph{Social Science #> Quarterly} 93(5): 1202--17. #>  #> ---------. 2013. \"Quick Victories? Territory, Democracies, and Their #> Disputes.\" \\emph{Journal of Conflict Resolution} 57(2): 258--84. #>  #> ---------. 2014. \"External Territorial Threat, State Capacity, and #> Civil War.\" \\emph{Journal of Peace Research} 51(5): 634--46. #>  #> Gibler, Douglas M., Steven V. Miller, and Erin K. Little. 2016. \"An #> Analysis of the {M}ilitarized {I}nterstate {D}ispute {(MID)} Dataset, #> 1816-2001.\" \\emph{International Studies Quarterly} 60(4): 719--30. #>  #> ---------. 2020. \"The Importance of Correct Measurement.\" #> \\emph{International Studies Quarterly} 64(2): 476--79. #>  #> Miller, Steven V. 2013. \"Territorial Disputes and the Politics of #> Individual Well-Being.\" \\emph{Journal of Peace Research} 50(6): #> 677--90. #>  #> ---------. 2017a. \"Economic Threats or Societal Turmoil? Understanding #> Preferences for Authoritarian Political Systems.\" \\emph{Political #> Behavior} 39(2): 457--78. #>  #> ---------. 2017b. \"Individual-Level Expectations of Executive #> Authority Under Territorial Threat.\" \\emph{Conflict Management and #> Peace Science} 34(5): 526--45. #>  #> ---------. 2017c. \"The Effect of Terrorism on Judicial Confidence.\" #> \\emph{Political Research Quarterly} 70(4): 790--802. #>  #> ---------. 2018. \"External Territorial Threats and Tolerance of #> Corruption: A Private/Government Distinction.\" \\emph{Peace Economics, #> Peace Science and Public Policy} 24(1). #>  #> ---------. 2019. \"What Americans Think about Gun Control: Evidence #> from the General Social Survey, 1972-2016.\" \\emph{Social Science #> Quarterly} 100(1): 272--88. #>  #> ---------. \"Economic Anxiety or Ethnocentrism? An Evaluation of #> Attitudes Toward Immigration in the {U.S.} From 1992 to 2017.\" #> \\emph{The Social Science Journal}. #>  #> Miller, Steven V., and Nicholas T. Davis. 2021. \"The Effect of White #> Social Prejudice on Support for American Democracy.\" \\emph{Journal of #> Race, Ethnicity, and Politics} 6(2): 334--51. #>  #> Miller, Steven V., and Doublas M. Gibler. 2011. \"Democracies, #> Territory, and Negotiated Compromises.\" \\emph{Conflict Management and #> Peace Science} 28(3): 261--79. #>  #> Miller, Steven V., Jaroslav Tir, and John A. Vasquez. 2020. #> \"Geography, Territory, and Conflict.\" In \\emph{Oxford Research #> Encyclopedia of International Studies}, Oxford University Press."},{"path":"http://svmiller.com/index.html","id":"r1sd-and-r2sd-rescaling-data-by-one-or-two-standard-deviations","dir":"","previous_headings":"Usage","what":"r1sd() and r2sd(): Rescaling Data by One (or Two) Standard Deviations","title":"Steve's Miscellaneous Functions","text":"r1sd() r2sd() allow user rescale data one two standard deviations. functions intuitive function name. Generally, regression modelers center regression inputs everything meaningful center (y-intercept meaningful). regression coefficients emerge communicate something interesting well: magnitude effects. Gelman (2008) argues rescaling two standard deviations added advantage making binary inputs roughly comparable anything standardized.","code":"x <- rnorm(50) r1sd(x) #>  [1] -1.27867343  0.72017341 -0.83738692  2.24113309  1.11983879  1.02888100 #>  [7] -0.08751658  0.66323274  0.54597563  0.93170508 -1.92188701  1.07007924 #> [13]  0.05512550 -0.88711962 -1.27635480  2.17490887 -0.63335367 -1.16707024 #> [19] -0.29461480 -1.08245574  2.19045750 -0.06826436 -0.58971126 -0.66964185 #> [25] -0.60197245  0.67528569  0.68338955  0.50110576 -0.33592760  0.32599086 #> [31]  0.31812571  1.22233277  1.71247268  0.56512278 -0.83487019 -0.38571993 #> [37] -0.04510276 -0.48408289 -0.40850491 -0.29834520 -0.85838051 -0.12386445 #> [43] -0.06639135  0.67626020 -0.41262626 -0.29513863 -1.13716934 -2.41897849 #> [49]  0.15699842 -0.07747006 r2sd(x) #>  [1] -0.63933671  0.36008670 -0.41869346  1.12056655  0.55991940  0.51444050 #>  [7] -0.04375829  0.33161637  0.27298781  0.46585254 -0.96094351  0.53503962 #> [13]  0.02756275 -0.44355981 -0.63817740  1.08745443 -0.31667683 -0.58353512 #> [19] -0.14730740 -0.54122787  1.09522875 -0.03413218 -0.29485563 -0.33482092 #> [25] -0.30098622  0.33764285  0.34169477  0.25055288 -0.16796380  0.16299543 #> [31]  0.15906286  0.61116639  0.85623634  0.28256139 -0.41743510 -0.19285996 #> [37] -0.02255138 -0.24204144 -0.20425245 -0.14917260 -0.42919025 -0.06193223 #> [43] -0.03319568  0.33813010 -0.20631313 -0.14756932 -0.56858467 -1.20948924 #> [49]  0.07849921 -0.03873503"},{"path":"http://svmiller.com/index.html","id":"r2sd_at-rescale-multiple-columns-by-two-standard-deviations-and-rename","dir":"","previous_headings":"","what":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","title":"Steve's Miscellaneous Functions","text":"r2sd_at() wrapper mutate_at() rename_at() dplyr. rescales supplied vectors new vectors renames vectors prefix z_. preferred convention things.","code":"mtcars %>% tbl_df() %>%   select(mpg, disp, hp) %>%   r2sd_at(c(\"mpg\", \"hp\", \"disp\")) #> # A tibble: 32 × 6 #>      mpg  disp    hp   z_mpg   z_hp  z_disp #>    <dbl> <dbl> <dbl>   <dbl>  <dbl>   <dbl> #>  1  21    160    110  0.0754 -0.268 -0.285  #>  2  21    160    110  0.0754 -0.268 -0.285  #>  3  22.8  108     93  0.225  -0.392 -0.495  #>  4  21.4  258    110  0.109  -0.268  0.110  #>  5  18.7  360    175 -0.115   0.206  0.522  #>  6  18.1  225    105 -0.165  -0.304 -0.0231 #>  7  14.3  360    245 -0.480   0.717  0.522  #>  8  24.4  147.    62  0.358  -0.618 -0.339  #>  9  22.8  141.    95  0.225  -0.377 -0.363  #> 10  19.2  168.   123 -0.0739 -0.173 -0.255  #> # … with 22 more rows"},{"path":"http://svmiller.com/index.html","id":"ps_btscs-and-sbtscs-create-peace-years-or-spells-by-cross-sectional-unit","dir":"","previous_headings":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","what":"ps_btscs() and sbtscs(): Create “Peace Years” or “Spells” by Cross-Sectional Unit","title":"Steve's Miscellaneous Functions","text":"sbtscs() allows create spells (“peace years” international conflict context) observations event. allow researcher better model temporal dependence binary time-series cross-section (“BTSCS”) models. Much liberally copy-pasted Dave Armstrong’s {DAMisc} package. just added dplyr stuff underneath speed prevent choking lot cross-sectional units without “event” “spell.” explain blog post 2017. ’s incidentally first thing added {stevemisc}. offer, , usa_mids data frame militarized interstate disputes United States non-directed dyad-year form Gibler-Miller-Little (“GML”) data. ps_btscs() general version sbtscs() performs well NAs bracket event data. latter function features prominently {peacesciencer}.","code":"# ?usa_mids  ps_btscs(usa_mids, midongoing, year, dyad) #> Joining, by = c(\"dyad\", \"year\") #> # A tibble: 14,586 × 7 #>       dyad ccode1 ccode2  year midongoing midonset spell #>      <dbl>  <dbl>  <dbl> <dbl>      <dbl>    <dbl> <dbl> #>  1 1002020      2     20  1920          0        0     0 #>  2 1002020      2     20  1921          0        0     1 #>  3 1002020      2     20  1922          0        0     2 #>  4 1002020      2     20  1923          0        0     3 #>  5 1002020      2     20  1924          0        0     4 #>  6 1002020      2     20  1925          0        0     5 #>  7 1002020      2     20  1926          0        0     6 #>  8 1002020      2     20  1927          0        0     7 #>  9 1002020      2     20  1928          0        0     8 #> 10 1002020      2     20  1929          0        0     9 #> # … with 14,576 more rows  sbtscs(usa_mids, midongoing, year, dyad) #> # A tibble: 14,586 × 7 #>       dyad ccode1 ccode2  year midongoing midonset spell #>      <dbl>  <dbl>  <dbl> <dbl>      <dbl>    <dbl> <dbl> #>  1 1002020      2     20  1920          0        0     0 #>  2 1002020      2     20  1921          0        0     1 #>  3 1002020      2     20  1922          0        0     2 #>  4 1002020      2     20  1923          0        0     3 #>  5 1002020      2     20  1924          0        0     4 #>  6 1002020      2     20  1925          0        0     5 #>  7 1002020      2     20  1926          0        0     6 #>  8 1002020      2     20  1927          0        0     7 #>  9 1002020      2     20  1928          0        0     8 #> 10 1002020      2     20  1929          0        0     9 #> # … with 14,576 more rows"},{"path":"http://svmiller.com/index.html","id":"revcode-reverse-code-a-numeric-variable-ie-invert-the-scale","dir":"","previous_headings":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","what":"revcode(): Reverse Code a Numeric Variable (i.e. Invert the Scale)","title":"Steve's Miscellaneous Functions","text":"revcode() allows reverse code numeric variable. useful, say, Likert item ranges 1 (“strongly disagree”) 5 (“strongly agree”), wants 5s “strongly disagree” 1s “strongly agree.” function passes NAs may variable. assumes observed values include minimum maximum increments 1. usually case discrete ordered-categorical variable (like Likert item). Use function mind.","code":"tibble(x = c(1:10),        y = c(1:5, 1:5)) %>%   mutate(xrev = revcode(x),          yrev = revcode(y)) #> # A tibble: 10 × 4 #>        x     y  xrev  yrev #>    <int> <int> <dbl> <dbl> #>  1     1     1    10     5 #>  2     2     2     9     4 #>  3     3     3     8     3 #>  4     4     4     7     2 #>  5     5     5     6     1 #>  6     6     1     5     5 #>  7     7     2     4     4 #>  8     8     3     3     3 #>  9     9     4     2     2 #> 10    10     5     1     1"},{"path":"http://svmiller.com/index.html","id":"show_ranef-get-a-caterpillar-plot-of-the-random-effects-from-a-mixed-model","dir":"","previous_headings":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","what":"show_ranef(): Get a Caterpillar Plot of the Random Effects from a Mixed Model","title":"Steve's Miscellaneous Functions","text":"show_ranef() allows user estimating mixed model quickly plot random intercepts (conditional variances) given random effect mixed model. cases random slope intercept, function plots random slope another caterpillar plot (another facet). great quick visualization random intercepts.","code":"library(lme4) #> Loading required package: Matrix #>  #> Attaching package: 'Matrix' #> The following objects are masked from 'package:tidyr': #>  #>     expand, pack, unpack  M1 <- lmer(Reaction ~ Days + (Days | Subject), data=sleepstudy) show_ranef(M1, \"Subject\") show_ranef(M1, \"Subject\", reorder=FALSE)"},{"path":"http://svmiller.com/index.html","id":"smvrnorm-simulate-from-a-multivariate-normal-distribution","dir":"","previous_headings":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","what":"smvrnorm(): Simulate from a Multivariate Normal Distribution","title":"Steve's Miscellaneous Functions","text":"simple port rename mvrnorm() MASS package. MASS package conflicts lot things workflow. handy -called “informal Bayesian” approaches generating quantities interest regression model.","code":"M1 <- lm(immigsent ~ agea + female + eduyrs + uempla + hinctnta + lrscale, data=ESS9GB)  broom::tidy(M1) #> # A tibble: 7 × 5 #>   term        estimate std.error statistic  p.value #>   <chr>          <dbl>     <dbl>     <dbl>    <dbl> #> 1 (Intercept) 11.7        1.06      11.0   4.89e-27 #> 2 agea        -0.00185    0.0101    -0.183 8.55e- 1 #> 3 female      -0.248      0.338     -0.735 4.62e- 1 #> 4 eduyrs       0.488      0.0488    10.0   7.71e-23 #> 5 uempla      -1.10       1.20      -0.915 3.60e- 1 #> 6 hinctnta     0.338      0.0614     5.50  4.52e- 8 #> 7 lrscale     -0.583      0.0881    -6.61  5.37e-11  as_tibble(smvrnorm(1000, coef(M1), vcov(M1))) #> # A tibble: 1,000 × 7 #>    `(Intercept)`      agea  female eduyrs  uempla hinctnta lrscale #>            <dbl>     <dbl>   <dbl>  <dbl>   <dbl>    <dbl>   <dbl> #>  1          10.7  0.000949 -0.386   0.573 -1.76      0.302  -0.588 #>  2          12.8 -0.0118   -0.311   0.469 -0.693     0.203  -0.477 #>  3          10.3  0.000331 -0.408   0.547 -0.618     0.444  -0.676 #>  4          10.6  0.0109   -0.165   0.522  1.37      0.280  -0.505 #>  5          12.2  0.00781  -1.00    0.491 -1.11      0.348  -0.682 #>  6          10.7  0.0132    0.0609  0.454 -0.264     0.380  -0.539 #>  7          11.9  0.0103   -0.815   0.472 -0.0370    0.374  -0.728 #>  8          12.3 -0.00884   0.177   0.474 -1.80      0.216  -0.540 #>  9          12.9  0.00692   0.118   0.391 -1.94      0.380  -0.699 #> 10          12.1  0.00306  -0.512   0.465 -1.03      0.381  -0.660 #> # … with 990 more rows"},{"path":"http://svmiller.com/index.html","id":"theme_steve-theme_steve_web-theme_steve_ms-steves-preferred-ggplot2-themes","dir":"","previous_headings":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","what":"theme_steve(), theme_steve_web(), theme_steve_ms(): Steve’s Preferred {ggplot2} Themes","title":"Steve's Miscellaneous Functions","text":"theme_steve() preferred theme mine years ago. basically theme_bw() ggplot2 theme, tweaking things. ’ve since moved theme_steve_web() things now, prominently website. incorporates “Open Sans” “Titillium Web” fonts like much. post_bg() changing backgrounds plots better match website posts write. theme_steve_ms() new addition uses “Crimson Text” font match plots LaTeX manuscripts. unaware, “Crimson Text” basically cochineal .","code":"mtcars %>%   ggplot(.,aes(mpg, hp)) +   geom_point() +   theme_steve() +   labs(title = \"A Plot with Steve's Preferred {ggplot2} Theme\",        subtitle = \"It's basically `theme_bw()` with some minor tweaks.\") mtcars %>%   ggplot(.,aes(mpg, hp)) +   geom_point() +   theme_steve_web() +   labs(title = \"A Plot with Steve's Preferred {ggplot2} Theme\",        subtitle = \"I use `theme_steve_web()` for most things. It has nicer fonts.\") mtcars %>%   ggplot(.,aes(mpg, hp)) +   geom_point() +   theme_steve_ms() +   labs(title = \"A Plot with Steve's Preferred {ggplot2} Theme\",        subtitle = \"I use `theme_steve_ms()` will not look pretty in this application, but will in LaTeX.\") mtcars %>%   ggplot(.,aes(mpg, hp)) +   geom_point() +   theme_steve_font(font = \"Comic Sans MS\") +   labs(title = \"A Plot with Steve's Preferred {ggplot2} Theme\",        subtitle = \"I use `theme_steve_font()` for the occasional document that uses Palatino type fonts. Here: it's Comic Sans.\")"},{"path":"http://svmiller.com/index.html","id":"the-student-t-distribution-location-scale-version","dir":"","previous_headings":"r2sd_at(): Rescale Multiple Columns by Two Standard Deviations (and Rename)","what":"The Student-t Distribution (Location-Scale Version)","title":"Steve's Miscellaneous Functions","text":"Finally, added functions extending “standard” t-distribution R three-parameter “location-scale” version. generalizes Student-t useful getting acclimated general Student-t distributions, quite common Bayesian analyses. dst() (density), pst() (distribution function), qst() (quantile), rst() (random number generation) available. , example, using rst() simulate data one common Student-t distributions world Bayesian priors: one three degrees freedom, mean zero, standard deviation ten.","code":"dat <- tibble(x = rst(10000, 3, 0, 10))  dat %>%   ggplot(.,aes(x)) +   geom_density() +   theme_steve_web() +   labs(title = \"Simulated Data from a Student-t (3,0,10) Distribution\",        subtitle = \"This prior is common in the world of Bayesian priors and used to be a common default prior in {brms}.\")"},{"path":"http://svmiller.com/reference/at.html","id":null,"dir":"Reference","previous_headings":"","what":"Scoped Helper Verbs — center_at","title":"Scoped Helper Verbs — center_at","text":"Scoped helper verbs included R Documentation file allow targeted commands specified columns. also rename ensuing output conform preferred style. commands multiple explained details section .","code":""},{"path":"http://svmiller.com/reference/at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scoped Helper Verbs — center_at","text":"","code":"center_at(data, x, prefix = \"c\", na = TRUE, .by = NULL)  diff_at(data, x, o = 1, prefix = \"d\", .by = NULL)  group_mean_center_at(   data,   x,   mean_prefix = \"mean\",   prefix = \"b\",   na = TRUE,   .by )  lag_at(data, x, prefix = \"l\", o = 1, .by = NULL)  log_at(data, x, prefix = \"ln\", plus_1 = FALSE)  mean_at(data, x, prefix = \"mean\", na = TRUE, .by = NULL)  r1sd_at(data, x, prefix = \"s\", na = TRUE, .by = NULL)  r2sd_at(data, x, prefix = \"z\", na = TRUE, .by = NULL)"},{"path":"http://svmiller.com/reference/at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scoped Helper Verbs — center_at","text":"data data frame x vector, likely data frame prefix Allows user rename prefix new variables.  function defaults (see details section). na logical whether missing values ignored creation means re-scaled variables. Defaults TRUE (.e. pass /remove missing observations). applicable diff_at, lag_at, log_at. .selection columns group operation. Defaults NULL. eventually become standard feature functions operator moves beyond experimental dplyr. argument applicable log_at () optional functions except group_mean_center_at. group_mean_center_at must something specified grouped mean-centering. o order lags calculating differences lags diff_at lag_at. Applicable functions. mean_prefix Applicable group_mean_center_at. Specifies prefix (assumed) total population mean variables. Default \"mean\", though user can change see fit. plus_1 Applicable log_at. TRUE, adds 1 variables prior log transformation. FALSE, performs logarithmic transformation variables matter whether 0 occurs (.e. 0s come back -Inf). Defaults FALSE.","code":""},{"path":"http://svmiller.com/reference/at.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scoped Helper Verbs — center_at","text":"function returns set new vectors data frame performing relevant functions. new vectors distinct prefixes corresponding action performed .","code":""},{"path":"http://svmiller.com/reference/at.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scoped Helper Verbs — center_at","text":"center_at wrapper mutate_at rename_at dplyr. takes supplied vectors effectively centers mean. renames new variables prefix c_. default prefix (\"c\") can changed way argument function. diff_at wrapper mutate across dplyr. takes supplied vectors creates differences previous value recorded . renames new variables prefix d_ (case first difference), something like d2_ case second differences, d3_ case third differences (). exact prefix depends o argument, communicates order lags want. defaults 1. default prefix (\"d\") can changed way argument function, though naming convention omit numerical prefix first differences. group_mean_center_at wrapper mutate across dplyr. takes supplied vectors centers (assumed) group mean variables (assumed) total population mean variables provided . returns new variables prefix, whose default b_. prefix communicates, , kind \"\" variable panel model context, juxtaposition \"within\" variables panel model context. lag_at wrapper mutate across dplyr. takes supplied vector(s) creates lag variables . new variables prefix l[o]_ o corresponds order lag (specified argument function, defaults 1). default prefix (\"l\") can changed way another argument function. log_at wrapper mutate across dplyr. takes supplied vectors creates variable takes natural logarithmic transformation . renames new variables prefix ln_. default prefix (\"ln\") can changed way argument function. Users can optionally specify want add 1 vector taking natural logarithm, popular thing positive reals naturally occurring zeroes. mean_at wrapper mutate across dplyr. takes supplied vectors creates variable communicating mean variable. renames new variables prefix mean_. default prefix (\"mean\") can changed way argument function. r1sd_at wrapper mutate across dplyr. rescales supplied vectors new vectors renames vectors prefix s_. Note rescaling just one standard deviation two. default prefix (\"s\") can changed way argument function. r2sd_at wrapper mutate across dplyr. rescales supplied vectors new vectors renames vectors prefix z_. Note rescaling two standard deviations one. default prefix (\"z\") can changed way argument function. functions, except lag_at, fail absence character vector length one. intended work across multiple columns instead just one. wanting create one new variable, think using dplyr verb .","code":""},{"path":"http://svmiller.com/reference/at.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scoped Helper Verbs — center_at","text":"","code":"set.seed(8675309) Example <- data.frame(category = c(rep(\"A\", 5),                                    rep(\"B\", 5),                                    rep(\"C\", 5)),                       x = runif(15), y = runif(15),                       z = sample(1:20, 15, replace=TRUE))  my_vars <- c(\"x\", \"y\", \"z\") center_at(Example, my_vars) #>    category         x          y  z         c_x         c_y c_z #> 1         A 0.1594836 0.91822046  9 -0.45270578  0.38488743  -4 #> 2         A 0.4781883 0.71636154 19 -0.13400109  0.18302851   6 #> 3         A 0.7647987 0.20624914 15  0.15260928 -0.32708389   2 #> 4         A 0.7696877 0.81691683 20  0.15749826  0.28358381   7 #> 5         A 0.2685485 0.71585943 14 -0.34364092  0.18252640   1 #> 6         B 0.6730459 0.06062449 14  0.06085649 -0.47270853   1 #> 7         B 0.9787908 0.84710058 17  0.36660137  0.31376756   4 #> 8         B 0.8463270 0.84676044  8  0.23413755  0.31342741  -5 #> 9         B 0.8566562 0.33261085 16  0.24446673 -0.20072218   3 #> 10        B 0.4451601 0.55965050 16 -0.16702927  0.02631747   3 #> 11        C 0.8382325 0.66946933 12  0.22604312  0.13613631  -1 #> 12        C 0.5833169 0.25463848 18 -0.02887250 -0.27869455   5 #> 13        C 0.5109512 0.07917477  5 -0.10123826 -0.45415826  -8 #> 14        C 0.2601681 0.15996809  6 -0.35202128 -0.37336494  -7 #> 15        C 0.7494857 0.81639049  6  0.13729632  0.28305746  -7  diff_at(Example, my_vars) #>    category         x          y  z          d_x           d_y d_z #> 1         A 0.1594836 0.91822046  9           NA            NA  NA #> 2         A 0.4781883 0.71636154 19  0.318704692 -0.2018589161  10 #> 3         A 0.7647987 0.20624914 15  0.286610370 -0.5101124048  -4 #> 4         A 0.7696877 0.81691683 20  0.004888979  0.6106676969   5 #> 5         A 0.2685485 0.71585943 14 -0.501139179 -0.1010574063  -6 #> 6         B 0.6730459 0.06062449 14  0.404497413 -0.6552349348   0 #> 7         B 0.9787908 0.84710058 17  0.305744875  0.7864760908   3 #> 8         B 0.8463270 0.84676044  8 -0.132463813 -0.0003401469  -9 #> 9         B 0.8566562 0.33261085 16  0.010329181 -0.5141495881   8 #> 10        B 0.4451601 0.55965050 16 -0.411496004  0.2270396501   0 #> 11        C 0.8382325 0.66946933 12  0.393072386  0.1098188350  -4 #> 12        C 0.5833169 0.25463848 18 -0.254915616 -0.4148308551   6 #> 13        C 0.5109512 0.07917477  5 -0.072365765 -0.1754637090 -13 #> 14        C 0.2601681 0.15996809  6 -0.250783015  0.0807933176   1 #> 15        C 0.7494857 0.81639049  6  0.489317597  0.6564223976   0  diff_at(Example, my_vars, o=3) #>    category         x          y  z         d3_x          d3_y d3_z #> 1         A 0.1594836 0.91822046  9           NA            NA   NA #> 2         A 0.4781883 0.71636154 19           NA            NA   NA #> 3         A 0.7647987 0.20624914 15           NA            NA   NA #> 4         A 0.7696877 0.81691683 20  0.610204041 -0.1013036240   11 #> 5         A 0.2685485 0.71585943 14 -0.209639830 -0.0005021142   -5 #> 6         B 0.6730459 0.06062449 14 -0.091752786 -0.1456246441   -1 #> 7         B 0.9787908 0.84710058 17  0.209103110  0.0301837497   -3 #> 8         B 0.8463270 0.84676044  8  0.577778475  0.1309010091   -6 #> 9         B 0.8566562 0.33261085 16  0.183610243  0.2719863558    2 #> 10        B 0.4451601 0.55965050 16 -0.533630636 -0.2874500849   -1 #> 11        C 0.8382325 0.66946933 12 -0.008094437 -0.1772911029    4 #> 12        C 0.5833169 0.25463848 18 -0.273339234 -0.0779723700    2 #> 13        C 0.5109512 0.07917477  5  0.065791005 -0.4804757291  -11 #> 14        C 0.2601681 0.15996809  6 -0.578064396 -0.5095012465   -6 #> 15        C 0.7494857 0.81639049  6  0.166168816  0.5617520062  -12  lag_at(Example, my_vars) #>    category         x          y  z      l1_x       l1_y l1_z #> 1         A 0.1594836 0.91822046  9        NA         NA   NA #> 2         A 0.4781883 0.71636154 19 0.1594836 0.91822046    9 #> 3         A 0.7647987 0.20624914 15 0.4781883 0.71636154   19 #> 4         A 0.7696877 0.81691683 20 0.7647987 0.20624914   15 #> 5         A 0.2685485 0.71585943 14 0.7696877 0.81691683   20 #> 6         B 0.6730459 0.06062449 14 0.2685485 0.71585943   14 #> 7         B 0.9787908 0.84710058 17 0.6730459 0.06062449   14 #> 8         B 0.8463270 0.84676044  8 0.9787908 0.84710058   17 #> 9         B 0.8566562 0.33261085 16 0.8463270 0.84676044    8 #> 10        B 0.4451601 0.55965050 16 0.8566562 0.33261085   16 #> 11        C 0.8382325 0.66946933 12 0.4451601 0.55965050   16 #> 12        C 0.5833169 0.25463848 18 0.8382325 0.66946933   12 #> 13        C 0.5109512 0.07917477  5 0.5833169 0.25463848   18 #> 14        C 0.2601681 0.15996809  6 0.5109512 0.07917477    5 #> 15        C 0.7494857 0.81639049  6 0.2601681 0.15996809    6  lag_at(Example, my_vars, o=3) #>    category         x          y  z      l1_x      l2_x      l3_x       l1_y #> 1         A 0.1594836 0.91822046  9        NA        NA        NA         NA #> 2         A 0.4781883 0.71636154 19 0.1594836        NA        NA 0.91822046 #> 3         A 0.7647987 0.20624914 15 0.4781883 0.1594836        NA 0.71636154 #> 4         A 0.7696877 0.81691683 20 0.7647987 0.4781883 0.1594836 0.20624914 #> 5         A 0.2685485 0.71585943 14 0.7696877 0.7647987 0.4781883 0.81691683 #> 6         B 0.6730459 0.06062449 14 0.2685485 0.7696877 0.7647987 0.71585943 #> 7         B 0.9787908 0.84710058 17 0.6730459 0.2685485 0.7696877 0.06062449 #> 8         B 0.8463270 0.84676044  8 0.9787908 0.6730459 0.2685485 0.84710058 #> 9         B 0.8566562 0.33261085 16 0.8463270 0.9787908 0.6730459 0.84676044 #> 10        B 0.4451601 0.55965050 16 0.8566562 0.8463270 0.9787908 0.33261085 #> 11        C 0.8382325 0.66946933 12 0.4451601 0.8566562 0.8463270 0.55965050 #> 12        C 0.5833169 0.25463848 18 0.8382325 0.4451601 0.8566562 0.66946933 #> 13        C 0.5109512 0.07917477  5 0.5833169 0.8382325 0.4451601 0.25463848 #> 14        C 0.2601681 0.15996809  6 0.5109512 0.5833169 0.8382325 0.07917477 #> 15        C 0.7494857 0.81639049  6 0.2601681 0.5109512 0.5833169 0.15996809 #>          l2_y       l3_y l1_z l2_z l3_z #> 1          NA         NA   NA   NA   NA #> 2          NA         NA    9   NA   NA #> 3  0.91822046         NA   19    9   NA #> 4  0.71636154 0.91822046   15   19    9 #> 5  0.20624914 0.71636154   20   15   19 #> 6  0.81691683 0.20624914   14   20   15 #> 7  0.71585943 0.81691683   14   14   20 #> 8  0.06062449 0.71585943   17   14   14 #> 9  0.84710058 0.06062449    8   17   14 #> 10 0.84676044 0.84710058   16    8   17 #> 11 0.33261085 0.84676044   16   16    8 #> 12 0.55965050 0.33261085   12   16   16 #> 13 0.66946933 0.55965050   18   12   16 #> 14 0.25463848 0.66946933    5   18   12 #> 15 0.07917477 0.25463848    6    5   18  log_at(Example, my_vars) #>    category         x          y  z        ln_x        ln_y     ln_z #> 1         A 0.1594836 0.91822046  9 -1.83581396 -0.08531777 2.197225 #> 2         A 0.4781883 0.71636154 19 -0.73775063 -0.33357029 2.944439 #> 3         A 0.7647987 0.20624914 15 -0.26814262 -1.57867043 2.708050 #> 4         A 0.7696877 0.81691683 20 -0.26177046 -0.20221798 2.995732 #> 5         A 0.2685485 0.71585943 14 -1.31472376 -0.33427146 2.639057 #> 6         B 0.6730459 0.06062449 14 -0.39594173 -2.80305628 2.639057 #> 7         B 0.9787908 0.84710058 17 -0.02143736 -0.16593584 2.833213 #> 8         B 0.8463270 0.84676044  8 -0.16684950 -0.16633746 2.079442 #> 9         B 0.8566562 0.33261085 16 -0.15471866 -1.10078209 2.772589 #> 10        B 0.4451601 0.55965050 16 -0.80932117 -0.58044280 2.772589 #> 11        C 0.8382325 0.66946933 12 -0.17645973 -0.40126992 2.484907 #> 12        C 0.5833169 0.25463848 18 -0.53902464 -1.36791047 2.890372 #> 13        C 0.5109512 0.07917477  5 -0.67148128 -2.53609759 1.609438 #> 14        C 0.2601681 0.15996809  6 -1.34642717 -1.83278093 1.791759 #> 15        C 0.7494857 0.81639049  6 -0.28836799 -0.20286250 1.791759  log_at(Example, my_vars, plus_1 = TRUE) #>    category         x          y  z      ln_x       ln_y     ln_z #> 1         A 0.1594836 0.91822046  9 0.1479748 0.65139791 2.302585 #> 2         A 0.4781883 0.71636154 19 0.3908172 0.54020667 2.995732 #> 3         A 0.7647987 0.20624914 15 0.5680366 0.18751566 2.772589 #> 4         A 0.7696877 0.81691683 20 0.5708031 0.59714102 3.044522 #> 5         A 0.2685485 0.71585943 14 0.2378733 0.53991408 2.708050 #> 6         B 0.6730459 0.06062449 14 0.5146459 0.05885788 2.708050 #> 7         B 0.9787908 0.84710058 17 0.6824859 0.61361716 2.890372 #> 8         B 0.8463270 0.84676044  8 0.6131982 0.61343299 2.197225 #> 9         B 0.8566562 0.33261085 16 0.6187771 0.28714006 2.833213 #> 10        B 0.4451601 0.55965050 16 0.3682201 0.44446176 2.833213 #> 11        C 0.8382325 0.66946933 12 0.6088045 0.51250581 2.564949 #> 12        C 0.5833169 0.25463848 18 0.4595220 0.22684747 2.944439 #> 13        C 0.5109512 0.07917477  5 0.4127394 0.07619665 1.791759 #> 14        C 0.2601681 0.15996809  6 0.2312452 0.14839249 1.945910 #> 15        C 0.7494857 0.81639049  6 0.5593219 0.59685128 1.945910  mean_at(Example, my_vars) #>    category         x          y  z    mean_x   mean_y mean_z #> 1         A 0.1594836 0.91822046  9 0.6121894 0.533333     13 #> 2         A 0.4781883 0.71636154 19 0.6121894 0.533333     13 #> 3         A 0.7647987 0.20624914 15 0.6121894 0.533333     13 #> 4         A 0.7696877 0.81691683 20 0.6121894 0.533333     13 #> 5         A 0.2685485 0.71585943 14 0.6121894 0.533333     13 #> 6         B 0.6730459 0.06062449 14 0.6121894 0.533333     13 #> 7         B 0.9787908 0.84710058 17 0.6121894 0.533333     13 #> 8         B 0.8463270 0.84676044  8 0.6121894 0.533333     13 #> 9         B 0.8566562 0.33261085 16 0.6121894 0.533333     13 #> 10        B 0.4451601 0.55965050 16 0.6121894 0.533333     13 #> 11        C 0.8382325 0.66946933 12 0.6121894 0.533333     13 #> 12        C 0.5833169 0.25463848 18 0.6121894 0.533333     13 #> 13        C 0.5109512 0.07917477  5 0.6121894 0.533333     13 #> 14        C 0.2601681 0.15996809  6 0.6121894 0.533333     13 #> 15        C 0.7494857 0.81639049  6 0.6121894 0.533333     13  r1sd_at(Example, my_vars) #>    category         x          y  z        s_x         s_y        s_z #> 1         A 0.1594836 0.91822046  9 -1.8112227  1.22348833 -0.7954674 #> 2         A 0.4781883 0.71636154 19 -0.5361226  0.58181493  1.1932011 #> 3         A 0.7647987 0.20624914 15  0.6105718 -1.03974121  0.3977337 #> 4         A 0.7696877 0.81691683 20  0.6301320  0.90146222  1.3920679 #> 5         A 0.2685485 0.71585943 14 -1.3748670  0.58021879  0.1988668 #> 6         B 0.6730459 0.06062449 14  0.2434797 -1.50265592  0.1988668 #> 7         B 0.9787908 0.84710058 17  1.4667290  0.99741097  0.7954674 #> 8         B 0.8463270 0.84676044  8  0.9367569  0.99632970 -0.9943342 #> 9         B 0.8566562 0.33261085 16  0.9780827 -0.63805992  0.5966005 #> 10        B 0.4451601 0.55965050 16 -0.6682645  0.08365854  0.5966005 #> 11        C 0.8382325 0.66946933 12  0.9043720  0.43275298 -0.1988668 #> 12        C 0.5833169 0.25463848 18 -0.1155155 -0.88592015  0.9943342 #> 13        C 0.5109512 0.07917477  5 -0.4050424 -1.44368791 -1.5909348 #> 14        C 0.2601681 0.15996809  6 -1.4083958 -1.18686040 -1.3920679 #> 15        C 0.7494857 0.81639049  6  0.5493064  0.89978905 -1.3920679  r2sd_at(Example, my_vars) #>    category         x          y  z         z_x         z_y         z_z #> 1         A 0.1594836 0.91822046  9 -0.90561135  0.61174417 -0.39773369 #> 2         A 0.4781883 0.71636154 19 -0.26806132  0.29090746  0.59660054 #> 3         A 0.7647987 0.20624914 15  0.30528590 -0.51987061  0.19886685 #> 4         A 0.7696877 0.81691683 20  0.31506602  0.45073111  0.69603396 #> 5         A 0.2685485 0.71585943 14 -0.68743350  0.29010940  0.09943342 #> 6         B 0.6730459 0.06062449 14  0.12173984 -0.75132796  0.09943342 #> 7         B 0.9787908 0.84710058 17  0.73336452  0.49870548  0.39773369 #> 8         B 0.8463270 0.84676044  8  0.46837843  0.49816485 -0.49716712 #> 9         B 0.8566562 0.33261085 16  0.48904135 -0.31902996  0.29830027 #> 10        B 0.4451601 0.55965050 16 -0.33413225  0.04182927  0.29830027 #> 11        C 0.8382325 0.66946933 12  0.45218599  0.21637649 -0.09943342 #> 12        C 0.5833169 0.25463848 18 -0.05775774 -0.44296007  0.49716712 #> 13        C 0.5109512 0.07917477  5 -0.20252121 -0.72184395 -0.79546739 #> 14        C 0.2601681 0.15996809  6 -0.70419791 -0.59343020 -0.69603396 #> 15        C 0.7494857 0.81639049  6  0.27465322  0.44989453 -0.69603396"},{"path":"http://svmiller.com/reference/binred_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"binred_plot() provides diagnostic fit generalized linear model \"binning\" fitted residual values model showing may fall outside 95% error bounds.","code":""},{"path":"http://svmiller.com/reference/binred_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"","code":"binred_plot(model, nbins, plot = TRUE)"},{"path":"http://svmiller.com/reference/binred_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"model fitted GLM model, assuming link \"logit\" nbins number \"bins\" calculation. Defaults rounded square root number observations model absence user-specified override . plot logical, defaults TRUE. TRUE, function plots binned residuals. FALSE, function returns data frame binned residuals.","code":""},{"path":"http://svmiller.com/reference/binred_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"bindred_plot() returns plot ggplot2 object, default. y-axis mean residuals particular bin. x-axis mean fitted values bin. Error bounds 95%. LOESS smoother overlaid solid blue line. plot = FALSE, function returns data frame binned residuals summary whether residuals error bounds.","code":""},{"path":"http://svmiller.com/reference/binred_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"number bins user wants arbitrary. Gelman Hill (2007) say , larger data sets (n >= 100), number bins rounded-square root number observations model. models number observations 10 100, number bins 10. models fewer 10 observations, number bins rounded-number observations (divided 2). default rounded square root number observations model. smart want .","code":""},{"path":"http://svmiller.com/reference/binred_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/binred_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Binned-Residual Plot from a Fitted Generalized Linear Model — binred_plot","text":"","code":"M1 <- glm(vs ~ mpg + cyl + drat, data=mtcars, family=binomial(link=\"logit\"))  binred_plot(M1) #> 2 of 6 bins are inside the error bounds. That is approximately 33.33%. An ideal rate is 95%. An acceptable rate is 80%. Any lower than that typically indicates a questionable model fit. Inspect the returned plot for more. #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Chernobyl! trL>n 6 #> Warning: Chernobyl! trL>n 6 #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: no non-missing arguments to max; returning -Inf"},{"path":"http://svmiller.com/reference/carrec.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode a Variable — carrec","title":"Recode a Variable — carrec","text":"recodes numeric vector, character vector, factor according fairly simple recode specifications former Stata users appreciate. Yes, taken John Fox's recode() unction car package. going carrec() (.e. shorthand car::recode(), phonetically : \"car-wreck\") package, additional shorthand carr thing. goal minimize number function clashes multiple packages use workflow. example: car, dplyr, Hmisc recode() functions. rely car package just function, conflicts tidyverse functions vital workflow.","code":""},{"path":"http://svmiller.com/reference/carrec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode a Variable — carrec","text":"","code":"carrec(var, recodes, as_fac, as_num = TRUE, levels)  carr(...)"},{"path":"http://svmiller.com/reference/carrec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode a Variable — carrec","text":"var numeric vector, character vector, factor recodes character string recode specifications: see , former Stata users find stuff familiar as_fac return factor; default TRUE var factor,  FALSE otherwise as_num TRUE (default) .factor FALSE, result coerced numeric values result numeric. want 99% applications regression analysis. levels optional argument specifying order levels returned factor; default use sort order level names. ... optional, make shortcut (carr()) work","code":""},{"path":"http://svmiller.com/reference/carrec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode a Variable — carrec","text":"carrec() returns vector, recoded specifications user. carr() simple shortcut forcarrec().","code":""},{"path":"http://svmiller.com/reference/carrec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode a Variable — carrec","text":"Recode specifications appear character string, separated semicolons (see examples ), form input=output. input value satisfies one specification, first (left right) applies. specification satisfied, input value carried result. NA allowed input output.","code":""},{"path":"http://svmiller.com/reference/carrec.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Recode a Variable — carrec","text":"Fox, J. Weisberg, S. (2019). R Companion Applied Regression, Third Edition, Sage.","code":""},{"path":"http://svmiller.com/reference/carrec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recode a Variable — carrec","text":"John Fox","code":""},{"path":"http://svmiller.com/reference/carrec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode a Variable — carrec","text":"","code":"x <- seq(1,10) carrec(x,\"0=0;1:2=1;3:5=2;6:10=3\") #>  [1] 1 1 2 2 2 3 3 3 3 3"},{"path":"http://svmiller.com/reference/charitable_contributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Charitable Contributions Panel Data — charitable_contributions","title":"Charitable Contributions Panel Data — charitable_contributions","text":"toy panel data set charitable contributions across 10 years 47 taxpayers. useful illustrating estimation panel models.","code":""},{"path":"http://svmiller.com/reference/charitable_contributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Charitable Contributions Panel Data — charitable_contributions","text":"","code":"charitable_contributions"},{"path":"http://svmiller.com/reference/charitable_contributions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Charitable Contributions Panel Data — charitable_contributions","text":"data frame 470 observations following 8 variables. subject numeric identifier subject time numeric time identifier, simple integer 1 10 charity sum cash property contributions, excluding carry-overs previous years income adjusted gross income price 1 minus marginal income tax rate, defined income prior contributions age dummy variable equals 1 respondent 64, 0 otherwise ms dummy variable equals 1 respondent married, 0 otherwise deps number claimed dependents, integer","code":""},{"path":"http://svmiller.com/reference/charitable_contributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Charitable Contributions Panel Data — charitable_contributions","text":"Frees (2003) nominal source data, appear toy data sets use book. turn cites Banerjee Frees (1995), though citation may meant 1997 article Journal American Statistical Association. actual source data obtained Gujarati (2012). underlying source raw data supposedly 1979-1988 Statistics Income Panel Individual Tax Returns. Given opacity data, temporal limitations, data used illustration inference. charitable contributions variable income variables clearly log-transformed. Banerjee Price (1997) seem imply price variable well.","code":""},{"path":"http://svmiller.com/reference/cor2data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from Correlation Matrix — cor2data","title":"Simulate Data from Correlation Matrix — cor2data","text":"function simulate data correlation matrix. useful illustrating theoretical properties regressions population parameters known set advance.","code":""},{"path":"http://svmiller.com/reference/cor2data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from Correlation Matrix — cor2data","text":"","code":"cor2data(cor, n, seed)"},{"path":"http://svmiller.com/reference/cor2data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from Correlation Matrix — cor2data","text":"cor correlation matrix (class matrix) n number observations simulate seed optional parameter set seed. Omitting generates new simulations every time.","code":""},{"path":"http://svmiller.com/reference/cor2data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from Correlation Matrix — cor2data","text":"cor2data() returns data frame observations simulated standard normal distribution, pre-set correlations.","code":""},{"path":"http://svmiller.com/reference/cor2data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from Correlation Matrix — cor2data","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/cor2data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from Correlation Matrix — cor2data","text":"","code":"vars <- c(\"control\", \"treat\", \"instr\", \"e\") Correlations <- matrix(cbind(1, 0.001, 0.001, 0.001,                              0.001, 1, 0.85, -0.5,                             0.001, 0.85, 1, 0.001,                            0.001, -0.5, 0.001, 1),nrow=4)  rownames(Correlations) <- colnames(Correlations) <- vars  cor2data(Correlations, 1000, 8675309) #>            control         treat        instr             e #> 1    -0.9965823534  0.7208272032  0.287418622 -0.2321504442 #> 2     1.0654160534  0.9882846616  0.854663879 -0.2618288603 #> 3     0.5720665025  0.9042493136 -0.047579748 -1.3874597782 #> 4     0.1500831690 -0.6598135468 -1.084751166  0.1370684857 #> 5    -0.4418016435 -0.9010785615 -0.845310165  0.0715451179 #> 6     1.9858258232  0.0459908373 -0.173578835 -0.4935294263 #> 7    -0.4148232405  0.6828190627  0.943919855  0.3814435259 #> 8    -0.1861047636  0.3827595299  0.523484928  0.4700195250 #> 9     1.5749027754  0.5901018972  0.177827618 -0.8610024992 #> 10    0.0639170359 -0.3134096367 -0.397293735 -0.0918152377 #> 11   -0.6352569781 -0.0044295617  0.020168913  0.2501361307 #> 12   -0.2520425211 -0.1512905007 -0.589533425 -1.2448928940 #> 13    0.2376632053  0.0363285505  0.101976860  0.1277191406 #> 14   -0.8255891282 -2.1360607862 -1.702933848  0.9465364294 #> 15   -0.6516404496  0.7280512605  1.171750633  0.5155311475 #> 16    1.5969914054  0.5656807418  0.399226237 -0.7703476721 #> 17   -0.1421471777  0.9006403891  0.954204281 -0.4455227784 #> 18   -1.3220235033  0.2264778728  0.009064416  0.0065538113 #> 19   -0.2246474073 -2.5970891486 -2.693111816  1.0079821345 #> 20   -0.9394608113 -0.8518025099  0.150778171  1.3469793319 #> 21    0.0860048804  1.2516636414  1.385327986 -0.1259933303 #> 22    0.7225398120 -1.1077042306 -0.535931502  1.4957405636 #> 23    0.0729270191 -1.3144007994 -1.014642021  0.9981142810 #> 24   -0.9260292594 -0.7883291769 -0.361114780  1.0344957861 #> 25    1.0869857446  0.1321047285 -0.094669783  0.2438068996 #> 26    0.7445376777 -1.3458827971 -0.969975143  0.9370971713 #> 27   -0.4636759603  0.2044783119  0.418151000  0.0377759209 #> 28   -1.0655403666 -0.2639171355 -1.106705577 -1.1383977098 #> 29   -0.5287039864  1.1551101158  1.358809253  0.1315152717 #> 30   -0.2198145126  1.6884225118  1.376292202 -1.2509852977 #> 31    1.4954756842 -0.6883876150  0.141941256  1.1002280342 #> 32    0.3025106599  0.4001815241  0.337654874  0.1698237556 #> 33    0.5959807404 -0.4945399548 -0.073658970  1.0189431924 #> 34   -0.7104127738 -0.7060516974 -0.143037533  0.9064538362 #> 35   -0.0514446168  0.0376181078 -0.004882204 -0.2263715972 #> 36   -0.6982394936 -1.6994442420 -0.922406514  1.3535014727 #> 37   -0.5044070188 -0.1559585619  0.483247583  1.1880071951 #> 38    1.3183341418  0.2652751179  0.057576689 -0.1052884727 #> 39    1.4227405795 -1.0976779308 -1.251364754 -0.3184538038 #> 40   -2.0903851451 -0.9361926111 -0.640157926  0.5808296039 #> 41    0.9157140623  0.7301538554  0.389022933 -0.8004601103 #> 42   -2.5986449276 -1.2471576837 -1.605230246 -0.0884306389 #> 43   -1.0827933118  1.0084724666 -0.255951690 -2.0251737305 #> 44    0.7107506137  0.2133284164  0.967608811  1.2282214916 #> 45   -0.5455656264  0.4292847814 -0.115005861 -1.2679471874 #> 46    1.9146288126  1.4422300806  1.313794767 -1.0812488577 #> 47   -0.0677403499  0.0014178806 -1.310050717 -2.2700781341 #> 48   -1.9030759641  0.9880112464  0.965876945 -0.8509524730 #> 49    0.1457032985  0.4464379034  0.691172211  0.5672443530 #> 50    0.8362996636  0.4565637332  0.684055018  0.6873292995 #> 51   -0.0883647604  0.0810519541  0.800131749  1.0746550525 #> 52    0.9875926895 -0.1437086878 -0.439892046 -0.4734800696 #> 53    0.8726287585 -1.2015007831 -0.912452889  0.6801547630 #> 54    2.8694916820 -1.2024765360 -1.235091185  0.3560542533 #> 55    2.1171789017 -0.2789195895  0.103711855 -0.0173371770 #> 56    0.3871995746  1.0305680297  1.148117138 -0.0667032728 #> 57   -0.0726821124 -0.0138292124 -1.446099596 -2.0674425463 #> 58    1.2316246793  1.5915372558  1.084209644 -0.7922543166 #> 59   -0.8905042661 -1.5542798939 -0.598894451  1.6960736036 #> 60    0.0548748434 -1.1205033546 -0.204322826  2.0539886074 #> 61    0.4856123438 -0.0738361454 -0.447533352 -0.2342989632 #> 62   -1.6609907926 -0.9196301146 -1.504469271 -0.3646811626 #> 63   -0.7475356712 -1.0299982665 -1.050883913  0.1909882843 #> 64   -0.1874381301  1.1561341740  0.488461352 -1.1746531529 #> 65   -0.1280866986 -1.8264393518 -1.271893286  1.3563195366 #> 66    1.0161407701  0.2732879917  0.759082747  1.1700572167 #> 67   -0.0295302106 -0.3974142596 -0.388279281 -0.1360664977 #> 68    0.6139023858  0.0600806651 -0.832884040 -1.2413581354 #> 69   -1.8605476217  0.8611896280  0.208222326 -1.3874016015 #> 70    0.5176822404 -0.3542435118 -0.402401985  0.6143337740 #> 71    1.8119469018  0.3284199945  0.263171240 -0.0842571110 #> 72   -0.7192566870 -0.1676594684 -1.401654429 -2.0711198450 #> 73   -0.4689301875  0.2178897637 -0.070228936  0.0174193448 #> 74   -0.1271406030 -1.0523956093 -0.511933181  0.8729266243 #> 75   -1.1372336125  1.0122075493  0.749032578 -0.7273827565 #> 76    0.2649755539  1.0364260330  0.603182721 -0.9363068185 #> 77    0.2215458135  1.0018328125  1.532088895  0.8469385896 #> 78   -0.2418763513 -0.0026224299  0.317268293  0.6142776491 #> 79    0.1914502549 -0.2086116513  0.181531556  0.5119477399 #> 80    1.8800048735 -0.3239213317 -0.820185321 -1.0391501073 #> 81    0.0082917758 -0.0432110486 -0.306725231 -0.6065549685 #> 82    0.6667589254 -2.4044473421 -1.667889940  1.6771065500 #> 83    0.9175493351  0.7405620424  0.847903202  0.0814382458 #> 84   -0.6274929339 -1.0379196426 -0.937744507  0.5679629185 #> 85   -2.3842849277 -1.0758225239 -1.593280834 -0.5959578697 #> 86   -2.1428924005 -0.4764390312 -1.056403131 -0.5356201190 #> 87    0.2287578980 -0.2345622485 -0.422246655 -0.3665414560 #> 88    0.0536125533  0.0995781237  0.625111473  0.6583542295 #> 89    1.2267928812  0.5508514231  0.679968304 -0.0940431842 #> 90    0.4780816209  0.3275146299 -0.371817907 -1.5343363202 #> 91    0.3390401636 -1.2040982561 -2.397138525 -0.9272155705 #> 92   -0.0076861861 -0.5841703177  0.185066391  1.0579120807 #> 93    1.5291182883  0.8415548048  0.415501082 -0.8642873881 #> 94    0.4121599446  0.4340511225  0.092346062 -0.5901927536 #> 95   -0.8235687345 -0.8165891495 -0.567970387 -0.4023676516 #> 96    0.4954646491 -0.0002349125  0.387900028  1.0438416893 #> 97    0.1266491400 -0.6790643671  0.043058380  1.3790941535 #> 98   -0.5742761291  1.5984695389  0.704856808 -2.3542412644 #> 99    1.0010295847  0.2412304459 -0.384928717 -1.5592964356 #> 100  -1.1497760224 -1.2753716389 -1.142056448  0.2193758575 #> 101   0.1492778982 -0.1878344589  0.278414430  0.4367586205 #> 102   1.3997262697  0.4133508578 -0.051626586 -0.5362754147 #> 103  -1.0861982967  0.0700424135 -0.106325586 -0.2547302592 #> 104  -1.7474647786 -0.1227033807 -0.012243466  0.1094999363 #> 105   1.4272417329 -0.7406452097 -0.581810418  0.4674830928 #> 106  -0.9862928998 -0.1929405800  1.167368135  1.6394755966 #> 107   1.2863867167 -0.9951159830 -1.012189573  0.4951382816 #> 108  -0.4154368119  0.2572890197 -0.014111532 -1.0238290290 #> 109   0.2383302354  2.0102969808  2.239901452 -0.3614790130 #> 110  -0.7402096283 -1.2716446692 -1.510427813 -0.4514989512 #> 111   2.0466815674 -0.4928636163 -0.604210230  0.3055909873 #> 112  -2.0885948386 -0.3708611734 -0.373955669 -0.0174903503 #> 113  -0.5253580619  0.4811786721  0.948507514  0.4269440303 #> 114  -1.3154965328 -0.3952516303 -0.278402001  0.0192981349 #> 115  -0.0303048245  0.2226108103  0.034709658 -0.4323617290 #> 116   0.5124912363 -0.5625252783 -1.492788514 -1.2750845973 #> 117   1.4027150278 -1.8468250323 -2.699885004 -1.3446254759 #> 118  -0.6843599054 -1.0991092799 -1.641203736  0.1529525415 #> 119   1.8252950496 -1.4469577484 -0.496995199  1.9405547298 #> 120  -0.0510802981  3.4127416222  2.966804373 -1.7116465498 #> 121  -0.7758053871 -0.2263915757  0.022063956  0.6432251810 #> 122  -0.0005582601  0.3585390693  0.634236312  0.7141508302 #> 123   0.9439207858 -0.7058713840 -0.629653884  0.4224257279 #> 124  -0.3935517312 -1.4327522470 -1.563415818 -0.1711132676 #> 125   1.1514813248 -0.2884294070  0.857540507  1.0142849980 #> 126  -0.3912258906  2.2123300336  1.057275663 -2.6091010052 #> 127  -0.5547058433  1.4099466118  0.940140437 -1.0799053201 #> 128   0.3878424248 -0.9867081529 -2.302795191 -1.5966073234 #> 129   1.7572682273 -0.4069311421 -0.322776824  0.6044065326 #> 130   0.2621760480  2.1378381939  2.485834233 -0.1112496036 #> 131   1.5285383011  0.4537084767  1.280318580  1.4632770031 #> 132   1.0636595441  0.7214983716  1.792670070  1.5226734410 #> 133   0.2661299867  0.3060146691 -1.180210087 -2.5028086036 #> 134   0.3898872330 -1.0414902417 -1.504870734  0.5376234616 #> 135   0.2823965234  0.4257273140  1.026864538  0.7606334073 #> 136  -1.0757606536 -1.4961322802 -1.450717577  0.6128116223 #> 137  -0.4716045915 -1.3673918777 -1.395710451  0.4436689822 #> 138  -0.4424640222  1.6483200693  2.212215349  0.5527104635 #> 139  -1.0262684941 -0.6913329273 -1.090292090 -0.9713300623 #> 140   0.7781756063 -0.0582186721  0.322760231  0.5025193014 #> 141  -0.8269995163 -0.1629937838 -0.131652145  0.4391648907 #> 142   0.7248825578  0.3828298091  0.234452233 -0.6325338227 #> 143   0.4571013558 -0.5978666319 -1.335766528 -0.7418804781 #> 144  -0.0802096753 -0.5319872317 -0.731627000  0.3842356647 #> 145  -2.2309976562  0.3083798619 -0.388946280 -1.2305794313 #> 146   0.9363910393  0.5448630454  0.922837506  0.1709309695 #> 147  -1.6663139173  0.8273801456  0.234860508 -0.9234716121 #> 148  -0.3158055757 -0.4872280447  0.136331022  1.1068604597 #> 149   1.1365227782 -1.0124328991 -1.187312042 -0.4356236313 #> 150  -0.6525849499 -0.3927670669  0.115626843  0.8535295583 #> 151  -0.9528813410  0.7777425800  0.580039919 -0.5775641155 #> 152   0.1131788577 -0.5663035470  0.864162929  2.1379974913 #> 153   0.3533720065 -1.3588584424 -1.158939547 -0.0021350440 #> 154  -0.5102808937 -1.7623467969 -1.483675925  0.8149103795 #> 155  -1.1867309068  0.1023429468  0.558628161  0.1671132169 #> 156   0.3666060039 -0.5590729597 -1.215733242 -0.9240624420 #> 157   2.4966007633  0.9940866361  0.252677123 -1.1833951997 #> 158  -0.9915848454  0.5353980635 -0.490589215 -1.7897328622 #> 159  -1.8849580713  1.6450591620  0.674987814 -2.3225385919 #> 160   0.1687427678  0.5417204857  0.257332509 -0.7896209422 #> 161   0.2091340054 -0.2354308223 -0.798440022 -0.6502562592 #> 162   0.5175410155 -0.0267999731  0.620030078  1.0501397413 #> 163   0.0909253216 -1.1861863609 -0.923506257  0.5622934454 #> 164  -2.2255201755 -0.1455957333 -0.639005185 -0.8918414268 #> 165   1.2820031223  0.8039236999  0.913827074 -0.0737098914 #> 166  -0.4358379868  1.0734230168  1.273311743 -0.2100532587 #> 167   1.2532314902 -0.5291994279  0.534139063  2.1869417346 #> 168   1.0223172006  0.5687467504  0.903411187  0.6261027703 #> 169  -0.5756838860  0.5964307130  1.015942880  0.4251927752 #> 170  -1.0986413625 -0.5056961803 -0.661587863 -0.0538951952 #> 171  -1.3897765802 -0.0626112008  0.160780005  0.3167848300 #> 172   0.0746746899 -1.2073097185 -1.459447439 -0.3336329100 #> 173   1.2060502336  0.1292531669 -0.382794857 -0.9884968772 #> 174   1.7170201266  0.3877822582  0.857906381 -0.1455073027 #> 175   0.9365307877  1.7577995665  2.390797144  0.3068649257 #> 176  -2.0417007436 -0.0261505651 -0.282652293  0.1079130368 #> 177  -0.2249723988 -0.9723234811 -1.488516843 -0.3782198015 #> 178  -1.2326383202  0.8761481986  1.156920639  0.5704553731 #> 179   0.4374933990 -0.6448234862  0.104012080  1.6918202360 #> 180  -0.8353385222 -0.3594569680 -0.678154444  0.2805590170 #> 181  -2.4682653911  0.4529616387  1.447409424  1.6059427309 #> 182  -0.8782746883 -0.9263071546 -0.568454195  0.5820833909 #> 183   2.0642082674  0.3918494391  0.608336379  0.6974516233 #> 184  -0.3623272868  0.5337175388 -0.241122803 -0.7156792161 #> 185   1.1992259260  0.5712763986 -0.018610264 -0.8216855895 #> 186   1.1566529876  2.3059498265  2.204193445 -0.6905793552 #> 187  -0.9467408667  0.8379282653  1.074336481  0.3709542444 #> 188   0.4216108419 -0.0775368945  0.004224884  0.5130498202 #> 189  -0.0213208768  0.3631307413 -0.533567742 -1.1107489581 #> 190   0.3691331549 -0.4352823774 -0.859039979 -0.6691177792 #> 191   0.7333818988  0.2156083596 -0.805457083 -1.6371378522 #> 192  -0.8328036383  0.6845159841 -0.253614857 -1.2719939835 #> 193   1.0290869320  0.4934103112 -0.381879147 -1.4001220145 #> 194  -0.0182059685  1.6461686776  0.770662096 -1.7830646353 #> 195   0.4414848629  0.1905353362  0.345400964  0.2168995830 #> 196  -1.0306940473  0.9846023302  0.954199845 -0.6928303889 #> 197  -1.0337461899  0.1133996422 -0.496983518 -1.2554102559 #> 198  -1.0482805159  0.9973878149 -0.159234931 -2.3523600989 #> 199  -0.5617622806 -1.7970369104 -0.648694172  2.3977650898 #> 200  -0.4923549495  0.3514079443 -0.098047038 -0.7165782768 #> 201   1.3438289133 -0.9305745716 -1.003301724 -0.0390457188 #> 202   2.1347890594  0.3716704697  0.220537935 -0.7268333842 #> 203   0.5029592102  0.2448305583  0.229626686 -0.2575460846 #> 204  -0.9016388060 -1.5795719936 -0.717380246  1.9531262993 #> 205  -0.4263660697  0.6307585589 -0.046904405 -0.8417062628 #> 206   0.3115565821 -1.2866067342 -1.023282417  0.8695940757 #> 207   0.2988763148 -0.9745552518 -1.383254275 -0.5947413117 #> 208   1.2361565709  1.4150352851  1.031871616 -0.8904936580 #> 209   0.3725077679  0.7942484751  0.132774271 -0.7838227572 #> 210  -1.1750773417  0.5637584562  0.851171556  0.3130932654 #> 211   0.4965627441  0.2859975820 -0.293047763 -0.5899249310 #> 212   0.9325149534  1.4457924185  1.743031573  0.5754142256 #> 213  -0.7193845744 -1.1378050408 -0.577649370  0.9627493326 #> 214  -0.6920256098 -1.4194196331 -1.203043268  1.2643590826 #> 215  -2.0708013532 -0.6500758304 -0.023345928  1.2083537898 #> 216  -1.1885767601 -0.5017115532 -0.271143675 -0.5812068578 #> 217   1.0196957278 -0.8610112878 -0.551093910  0.1291345517 #> 218  -0.9801600387 -0.2082992619  0.389801964  0.8730471608 #> 219  -0.3048293564  0.7502682700  1.029307885  0.5022445041 #> 220   0.3891123079 -1.4515286003 -0.341255446  2.0239422442 #> 221   0.0480109920  0.1224140864  0.892263451  1.4284697193 #> 222  -0.7807094420  0.8781411585  0.973867116 -0.5928480434 #> 223   0.3739462760 -0.8071012499 -0.693135292  0.3111877553 #> 224  -0.5206896437 -1.7094542626 -0.948415367  2.3886446295 #> 225   1.3589583509 -0.9365137448 -0.368246157  1.5254623275 #> 226  -0.1902957880  0.5583270618  0.944778218  0.8145860387 #> 227   0.8426863822  1.2789201420  0.648705397 -1.4287494782 #> 228   0.7486460396  0.3554323220 -0.028549604 -0.8517924820 #> 229   0.3735456722  1.4573323841  1.318270463 -0.3206674503 #> 230  -0.7044303714 -0.4210005692 -0.122780414  0.6560503234 #> 231  -0.3151017812 -2.5245049596 -3.216464771 -0.2625191561 #> 232  -0.1678472734 -0.1113213979 -0.690901705 -1.1625406938 #> 233  -0.4443966995  0.6058941835 -0.166939722 -1.1096497136 #> 234  -1.4453786361 -0.7761605000 -1.031998488 -0.9941266056 #> 235   0.0107456987  0.2661966717 -0.391321737 -1.0043260461 #> 236   2.3317732785 -0.0823524628  0.021934832  0.2577879525 #> 237   0.1533153891  1.8133084612  1.852670561 -0.6178718603 #> 238  -1.7078257765  0.5809316555  1.379390135  0.2923790416 #> 239   0.0255381778  0.0126695856 -0.641503092 -1.1074941365 #> 240  -0.8791096861  0.6689311324 -0.388580194 -1.9334251873 #> 241   0.9540100928 -0.2360637047 -0.993013280 -1.3823952457 #> 242  -0.0180071628 -0.4643724382 -0.619287402 -0.2720526855 #> 243  -0.0712532550 -0.1695863082 -0.040577592  0.6303829396 #> 244   0.4990261682  0.1983377790  0.985607987  1.2279198734 #> 245  -0.3182756389 -0.9861697977 -0.871669247  0.5164891305 #> 246   0.3689123669  2.2379268380  2.038814831 -1.0210297753 #> 247  -0.7540141567  0.0360802881  0.876243245  1.1994393013 #> 248  -1.7738158349 -0.3962555216 -0.931874283 -1.2129961044 #> 249   0.9244368621 -1.3796205570 -0.629627354  1.7208066084 #> 250   1.1331602020  0.2442510501 -0.336933015 -1.1373761986 #> 251  -0.2674132575 -1.2634592822 -1.690355198 -0.0975583499 #> 252   1.6318222029 -0.2327109961  0.144170269  0.9408143231 #> 253   0.1051333094  0.1612631385  0.464902466  0.3053051776 #> 254  -1.3313872948  0.4060363766 -0.073564495 -0.7883624695 #> 255  -0.1029043378  0.5271073142  0.464145277 -0.0168736887 #> 256  -1.0501151829  1.4205127409  1.587905671  0.3326375027 #> 257   1.5842152883 -0.9701860555 -1.143126556  0.6259898261 #> 258   1.2641116408 -0.5373803362 -0.306766416  0.6633805100 #> 259  -1.1991583710  0.9388782635  1.165766248  0.1458027912 #> 260  -0.5839066312 -1.6538989171 -1.011080747  1.1684412153 #> 261   1.5844734828  0.4286997540 -0.238708420 -0.8713216856 #> 262  -2.6945196593 -0.4815923633 -0.535670337 -0.0017371586 #> 263   0.5454795327  0.0418462623 -0.549961196 -0.5534608490 #> 264  -0.9506309332  0.1965712386  0.443794509  0.1765411871 #> 265   0.7514034416  0.2406764140  0.579317408  0.5815578804 #> 266   0.6142840582  0.8469276132  0.394999941 -0.6755548287 #> 267  -0.4919001423 -1.1048747964 -0.679254326  0.3342529144 #> 268   1.0143629916 -0.6647525413 -1.182006730 -0.7184851595 #> 269  -0.3153580379 -0.2381459381 -0.705346260 -0.6934713197 #> 270   0.6325127572  0.6132209060  0.030091989 -1.0159158140 #> 271   0.8749485655  1.7581064136  1.456690652 -0.7531915512 #> 272  -0.8460066431  0.8281121824  1.068446301 -0.3335038297 #> 273   0.5448628782  0.9754610260  0.658936208 -1.2118555876 #> 274   0.4665643847 -0.8202513758  0.175764319  1.5790956599 #> 275  -1.5169966854 -0.8295641193 -0.313422978  0.6962046037 #> 276   0.9876591908 -0.8968688473 -1.777296315 -1.1713239772 #> 277   0.1293742393  1.1218232146  1.565713286  0.6381700248 #> 278   0.3752447946  0.4804923916 -0.274679522 -0.9758553360 #> 279  -0.0238203074  0.1374159843  0.378496456  0.4855705315 #> 280  -1.6291997286  0.2742964141  0.244684310 -0.7070943938 #> 281  -1.6699517714  1.1292589485  0.933862913 -0.6966269628 #> 282   0.3636184086  0.7519561838  1.212753893  0.1175917910 #> 283   2.1158338281 -0.1591687702  0.573899370  0.8984556679 #> 284   0.4324093988 -1.8064270319 -0.991296215  2.2448631295 #> 285  -0.3625831851 -0.7226585150 -0.745151834  0.5812348801 #> 286  -0.6285519008  0.5434036571  0.451718361 -0.2651429282 #> 287   0.9612526587  1.0020570444  1.307535982 -0.1084146433 #> 288   0.7018444191  0.5197885720  0.374029934 -0.1622017582 #> 289  -0.1901001582 -0.5561041378 -0.806349033  0.5274962196 #> 290   0.1829207990 -0.3390565172 -0.181038984  0.2496733341 #> 291   0.9286072852  0.3951947465  0.147856177 -0.8698139627 #> 292   0.2494420210  0.2550107506 -0.188711569 -0.4452841919 #> 293  -0.2398222790  0.5349858279  0.707468393  0.7915199311 #> 294  -1.6477069868  0.6508774297  0.615926241 -0.3869756141 #> 295  -1.1604467232 -0.0360506117  1.220157923  2.3192568643 #> 296   1.6752822367  0.2648159369 -0.056379112 -0.5357413910 #> 297   1.3916675385  0.5873993404  0.048830227 -1.8262191834 #> 298  -0.1026699377 -2.5441943458 -1.123517310  2.6627810984 #> 299  -0.9011659158 -0.5907666882 -0.712635239 -0.4363938110 #> 300   0.1009469272 -0.2512645456 -0.428644169 -0.2196907328 #> 301   0.5701397198  0.6229924238 -0.411861891 -1.4752699656 #> 302  -0.4913474370  2.5589252171  2.109169293 -1.5118205257 #> 303  -0.2740915671  1.6067836304  1.320835189 -0.8019768852 #> 304  -0.1493990078 -1.1940669112 -0.601723162  1.0104986959 #> 305   0.1806294429  0.3618992058 -0.426356061 -1.2284893588 #> 306   0.9203113540  0.8471292841  0.976520145 -0.0505772592 #> 307   0.6363767277 -1.1198105112 -1.651323126 -0.5850667997 #> 308  -0.0717002434 -1.4458888461 -1.432950866  0.9059859784 #> 309   0.1417651321 -0.9765072644 -1.717407807 -0.3215750427 #> 310   0.0765428275  0.3714029420  0.454733385 -0.3511896609 #> 311  -0.5125867486  0.9225335720  1.071650268 -0.0639684412 #> 312   0.4592486300 -1.9371112036 -0.947501824  2.9330613046 #> 313   0.7145027507 -0.0743239280 -0.277175214 -0.4048250364 #> 314  -1.5428035777 -0.2163269309 -0.251079553 -0.2636734044 #> 315   0.2061877846  0.6356931922  0.261243813 -0.7846487128 #> 316  -1.1616292189 -0.0515683838  0.029608557 -0.1323032707 #> 317  -1.7157991732  0.6936224222  0.131115662 -1.3314650774 #> 318   1.0519574733  1.9078787312  2.073076887 -0.1455859829 #> 319   1.0116796542 -0.6329067385 -0.671120203  0.1189316110 #> 320   0.1847126789  0.4380002345 -0.875706407 -1.6711166980 #> 321   1.6767425787  0.5010694130 -0.456372462 -2.0617870776 #> 322  -0.4534593889  1.5767933183  1.083570461 -1.6729442999 #> 323   0.7883146965  1.4165491436  0.809588321 -1.5257566939 #> 324  -1.0750273253  0.2460655546  0.101374746 -0.1026141631 #> 325  -1.4312032525  1.7954515293  1.594907950 -0.4779589391 #> 326  -1.4320176152  0.6985054259 -0.035443174 -1.5690386149 #> 327   0.7132062860 -0.4226373411 -0.640128070 -0.1751268305 #> 328  -0.4070435818  2.0118748925  1.187285069 -1.7067452023 #> 329   0.8955826542  0.6570106790  0.616039350 -0.2185563354 #> 330   1.0609209825  0.4140871392 -0.151646120 -0.8269233665 #> 331  -0.1283071285 -0.2056209458 -0.527976391 -0.2152962214 #> 332  -0.3534121427 -0.1714811880 -0.595512425 -0.6705048718 #> 333   0.3905649031  1.9834950801  2.331166768 -0.1366979754 #> 334  -1.4406009960  0.4863349765  0.359713075 -0.0636714628 #> 335   0.2101222473 -0.0369538087  0.003392888  0.3434410124 #> 336  -0.1960052650  0.8302718114  1.305331937  0.3763809018 #> 337   1.6459129661  2.4942973841  2.961324135  0.0324389514 #> 338   0.7417086124 -0.5328064896  0.440451601  1.5282767958 #> 339   1.4171752132  0.3031856504  1.159765491  1.7817615015 #> 340   0.1618826881 -1.5363450575 -0.667576964  1.3800910026 #> 341   1.0530199137 -0.7880203428 -0.354450239  1.2466205734 #> 342  -0.8629300826 -0.6170369925 -0.567648774  0.4307236522 #> 343  -0.9876900868  0.2142686499 -0.486533035 -1.2589039968 #> 344  -0.1765111396  0.7279805859 -0.049142366 -1.5647595850 #> 345   1.4989045992 -1.8134003480 -1.709435893  0.1217705949 #> 346  -0.3872961187 -1.1599387007 -1.036779106  0.6755510838 #> 347  -0.2844547099  0.3509265127 -0.520787961 -1.2609036056 #> 348   0.7319427364 -0.5004616837  0.284351916  1.7849449723 #> 349  -0.1916819763 -0.4810719573 -0.733740352 -0.0415153921 #> 350   0.8569219797  0.0347175230  0.122578553  0.3911469185 #> 351  -0.6528180628  0.6176099289  1.522255162  1.4603993223 #> 352   0.8444521334  1.5665165850  1.768368897  0.3728710132 #> 353   0.1937976228 -0.3287726153 -0.500388400  0.2252237539 #> 354   3.5047769131 -0.8626272391 -0.048541472  1.6422252584 #> 355   1.2304051311 -0.7528533563 -0.615962290  0.2766748568 #> 356   1.2874595865  0.4893891858  0.113566248 -0.1678104008 #> 357  -1.6676795461 -0.7063969362 -0.091373772  1.2031327289 #> 358  -0.0730305844 -1.5461599430 -1.814237778  0.5295763521 #> 359   0.3660375713 -0.7516096867  0.818604647  2.3462634762 #> 360  -0.4034299422 -1.4190953257 -1.661267452  0.0624119982 #> 361  -0.6209244841  0.3658087704  0.659931242  0.3250339496 #> 362  -0.4087582719 -0.3829469582  0.173965738  1.0231314989 #> 363  -0.6853750355 -0.4838779967 -1.037893590 -0.5621468821 #> 364  -1.1746949951 -0.6560346275 -0.765654875 -0.2937199527 #> 365   0.0243395012 -0.1221776746 -0.318842198 -0.6656854212 #> 366   1.7476997203  0.8977599137  0.531026617 -0.3695171302 #> 367  -0.9797732090  0.2838708503 -0.665431677 -2.0005838538 #> 368  -0.1552940467 -0.2155429835 -0.209894612 -0.1556285159 #> 369   0.7056420115  0.3581111943  0.794260947  0.5860510366 #> 370  -0.8719316004  1.5856655382  2.001702058  0.1163616723 #> 371   1.8819858033  0.0694265719 -0.984684377 -1.2980457299 #> 372   2.7639737951  0.5580330448  1.263781206  0.9627958471 #> 373   0.1525976701  0.3864863275  0.023111239 -0.7168214841 #> 374   0.4356820263  0.9880301825  1.099954318 -0.2082770965 #> 375  -0.6491587611 -1.3918886630 -1.713625527 -0.4386774295 #> 376   0.6821681711  0.7439039785  1.031912434 -0.1573269000 #> 377  -1.0079860200 -1.9077195878 -1.131081010  2.3369610917 #> 378  -0.5158933810 -1.1859040237 -2.021058030 -0.8421650458 #> 379   0.1399412287  0.1941451493 -0.675330140 -1.6568894745 #> 380   0.5022471741  0.0512675518  0.497222646  0.3764745375 #> 381   0.3455305280  0.2720032247  1.096770120  1.7558703391 #> 382  -1.2599196267  1.9275649222  0.790693848 -1.8365292004 #> 383   2.0546519667 -0.8649065014 -0.019558686  1.5142767611 #> 384  -1.3087259840  0.8783222501  0.680309390 -0.4148925084 #> 385   1.2606879261  1.8677012482  1.035748203 -1.7954234500 #> 386  -0.7347787143 -0.4010886457 -0.803652529 -0.7055352059 #> 387  -0.8432939071 -0.6918389552 -0.341437331  0.5208920877 #> 388   0.3567822204  0.5441837150  0.214405678 -0.8707356167 #> 389   0.2995354832 -0.6686016983 -0.776746060 -0.1017740490 #> 390  -0.9658036496  0.0780165771  0.601682103  1.0329565320 #> 391   0.1072444616  0.0337390463  0.559038450  0.9212212674 #> 392  -0.8176100869 -1.7965263695 -1.549527885  0.5502598651 #> 393  -0.3508041173  1.6793515928  1.201625854 -1.0342441839 #> 394   0.7157549184  0.9789819107  0.287374468 -1.6216453265 #> 395  -1.7987508315  1.1070478197  1.020053987 -0.1828728483 #> 396   0.6221782252 -0.6611676555 -0.331243850  0.4988969582 #> 397   0.1174344264  3.3352403176  2.666975376 -1.6115548384 #> 398   1.5395038369 -2.3561705634 -1.139170219  1.7928743752 #> 399  -2.2636579988  0.0323317977 -0.473795529 -0.4402924935 #> 400   0.5412221902 -0.1134194763  0.020237679  0.8065687922 #> 401  -0.3883670265  0.2066031424 -0.013513493 -0.6038911526 #> 402   1.1805162024 -1.9626380877 -1.769164440  0.7463525440 #> 403  -1.2090300199 -1.0515255127 -1.880900508 -0.8593334869 #> 404   0.0751682157 -0.4169381547 -0.858112025 -0.6402859630 #> 405  -0.7306621351  1.0826530380  1.616268694  0.4389279579 #> 406   1.2617190562 -1.4385945367 -0.554434874  1.5789736000 #> 407  -0.9157153728  0.6563302076  0.529551129  0.1258161329 #> 408  -1.0938949178 -1.4318848990 -1.386201461  0.7953393148 #> 409  -0.2091014900 -0.2585955465 -0.837508710 -0.5112342547 #> 410   0.6991478407 -1.9312236820 -2.071420127  0.7139383502 #> 411   1.8323377590 -0.3377152571 -0.511234582 -0.5473310492 #> 412   1.1989168116  1.7912426612  2.427893021 -0.1472047951 #> 413   0.1132024951  0.2783492412  0.127021569 -0.1659268428 #> 414  -1.6113347125  0.5693820410 -0.208477322 -1.5175355325 #> 415   0.3939993845 -0.1246163708 -0.390615445 -0.5688216603 #> 416  -0.1497863962  2.4769721725  2.042417579 -1.1125542657 #> 417  -1.8690536497 -1.9470285568 -1.937182029  0.6132399410 #> 418  -1.0673105099 -0.6330693498 -0.164061919  0.8946473126 #> 419  -0.0210945084 -0.6511790266  0.110684473  1.0962611272 #> 420  -0.1371906850 -0.6563974548 -1.091420044 -0.6866680373 #> 421   1.6004581583  1.6354727668  1.481626336 -0.5908770201 #> 422  -0.2406808938  0.1501999293  0.027759089 -0.0840291248 #> 423  -0.1673739516  0.9753319019  1.460596125  0.1860894328 #> 424  -1.9605639591 -1.4554562550 -1.963552655 -0.5324245422 #> 425  -1.8590150046  0.1295363724  0.619646214  0.4816644727 #> 426  -0.4903491998 -1.3143105886 -0.415370462  2.1002882642 #> 427   1.2959768232  0.8198351128  0.959415808 -0.8609090413 #> 428   0.3227093984 -1.1299253801 -1.487175634  0.2031890243 #> 429  -0.5781547884  1.6876257599  2.174394740  0.1301641235 #> 430   1.3035753661  0.6790823388  1.969242879  1.5984857543 #> 431   1.1240110132 -0.6406744664 -0.783901680 -0.3486267810 #> 432  -0.5612869711  0.7083478457  1.094187526 -0.0173927132 #> 433   1.1457205744 -0.0179219044 -0.367075450 -0.3710182244 #> 434  -0.0832116148  1.1683055303  1.748909023  0.4106167657 #> 435   0.4639267373  0.0176269782 -0.323739283 -0.0249793922 #> 436   0.3153427643  0.1968412538  0.297764793 -0.3039828524 #> 437   1.3323659610  1.1833202295  0.117299682 -1.8719901694 #> 438  -0.3193678977 -0.8370973446 -0.377563344  0.9184755016 #> 439  -0.6204523338 -0.0718608214 -0.049270240 -0.2355571408 #> 440   1.7140663681 -0.1027218539 -0.364470275 -0.6822101098 #> 441  -0.6592895406 -3.8238870922 -3.445265650  1.3482752127 #> 442   1.9091456991  0.1094721277  0.107554720  0.2468237048 #> 443   0.0755031232  1.7269960070  2.030227355  0.0305703663 #> 444  -0.5390916016  0.9069451004  1.392550606  0.3156307953 #> 445  -0.0763500983  0.5008019028  0.740670340 -0.1193795189 #> 446  -0.0947008661 -0.7775112333 -0.378722644  0.6294095672 #> 447  -0.7092386416  2.3810561905  2.610861357 -0.8251043546 #> 448   0.0274547172 -0.6351171188 -0.559090018  0.4447649613 #> 449  -3.4938710319  0.4791489283  0.277657381 -0.7860268320 #> 450   0.8844889488  2.8696593495  2.213195425 -1.6852967546 #> 451   1.2534049120 -1.4836162482 -1.312330705  0.6662054083 #> 452   0.6691205893 -1.5159561341 -1.176182025  0.5750321208 #> 453   1.5184719107  0.1221472327  0.481478338  0.5287590025 #> 454  -1.0373180160  0.6236212271  1.535989664  0.5620585874 #> 455  -0.7714622880 -0.2072375811  0.348001712  0.4293597846 #> 456  -0.1169579173 -0.5251265707 -0.352018275  0.0789271415 #> 457  -0.5614108264  1.3869330708  0.296752396 -1.8669780140 #> 458  -1.4658804728  2.9201744873  2.538855205 -1.6840984555 #> 459  -1.1359181676 -0.7193724932 -0.360821125  0.6975076820 #> 460  -0.4276828785 -0.8993423663 -0.254382448  1.0392666944 #> 461  -0.7735442977  0.2024807164 -0.603161818 -1.4166034403 #> 462   0.4163032319  0.3597513314  0.773153500  0.8779510637 #> 463   1.5326106370  1.8134772650  0.893983360 -2.1019119205 #> 464  -0.7167785697  0.5306633894  1.033484965  0.9572808828 #> 465  -0.8154305649 -0.5904980754 -0.858174446  0.0202221193 #> 466  -1.0144247681  0.9329584132  0.404129107 -0.5607129809 #> 467  -0.7318181844 -1.1962825605 -0.100223826  2.5070383757 #> 468  -1.8453004250 -0.9009120323 -0.403344746  1.2176879731 #> 469   1.3870885854 -0.7012518980 -0.960796822 -0.1518644253 #> 470  -1.7467760961 -0.2343899389 -0.021119812  0.2596499921 #> 471  -1.2970987911 -1.2152250863 -1.589095516 -0.8417944691 #> 472  -0.6623913430 -1.2052222597 -0.767787239  0.9356664583 #> 473   1.0996540984 -0.5710242949 -0.367498394  0.3670024870 #> 474  -1.0948033239 -0.7663466524 -0.865196910  0.6727049909 #> 475   0.3566826989 -1.7709173698 -2.113397069  0.1006528806 #> 476   0.6492101058  0.8592629997  0.720058663  0.1889318799 #> 477   0.9689532264  0.7495438495  0.635040039 -0.8923396041 #> 478   1.7007627843  0.3314883613  0.655509542  0.9933737873 #> 479   1.1993005619  1.3029769033  0.693490794 -1.3237515340 #> 480  -0.1500743042  0.6328349666  0.499738198 -0.6900237450 #> 481   0.5979976053 -1.0153624730 -1.061801848  0.0168207668 #> 482  -0.9928389088  1.4986734233  2.222078795  0.2732860747 #> 483   0.6354194133  0.0449804106  0.450477444  0.4548369987 #> 484   0.5975407876 -0.3824700559  0.312395743  1.3283006949 #> 485   0.2404603292 -0.6435384591  0.010159232  1.3547963990 #> 486  -0.9290082873  0.6115281446  0.979411524  0.8089188105 #> 487  -0.5105971387 -0.0727964314 -0.997812258 -1.2806916032 #> 488  -0.2311911458 -0.4545535930 -0.019298367  0.9492647282 #> 489  -0.7237933526 -0.3616559314 -1.059738831 -0.9812868488 #> 490  -2.4105663041  1.4126962127  1.973259654  0.0035498854 #> 491  -1.1583324765 -0.7107568467 -0.406755691  0.8037657044 #> 492   1.9852747606  0.0828622798  0.609941850  0.5856199895 #> 493  -0.8408902318 -0.1243277115 -0.328863381 -0.2184652939 #> 494   0.1579296250 -0.2329566633 -0.014279813  0.6690834390 #> 495  -0.0613177540  0.9456869080  0.987397606 -0.3159404009 #> 496  -0.7841736993  0.5377045450  0.433629649 -0.3861994868 #> 497  -0.9096832833 -0.3474134275  0.106037915  0.7553339890 #> 498   0.2468158566 -0.9061444538 -1.168358492 -0.3849403759 #> 499   0.1750499771  0.7238555700  0.009476823 -1.5959764452 #> 500  -0.2841790773 -1.8918450577 -1.740480605  1.0731143517 #> 501   1.3044256709  1.4741584346  1.887350836 -0.3694761355 #> 502   0.7948228638 -1.0285468613 -1.017446315  0.4212327561 #> 503   1.1886186729 -2.0256381001 -1.787939649  0.6246191072 #> 504  -0.4912705952 -1.0827762837  0.180941733  1.3508941412 #> 505  -0.8124736469 -0.8530918356 -0.178065382  0.5778358567 #> 506   0.3693651313  0.0476089453  0.132283708  0.0872234498 #> 507  -0.9215013884 -1.8451862908 -0.514346598  2.1009528733 #> 508   0.5096286003 -0.0975276551  0.316117671  0.6955295280 #> 509   1.2594178723  1.9401694143  1.722740945 -1.4014851259 #> 510  -2.1010216479 -0.3432872937 -0.760484485 -0.1893832663 #> 511   1.5395901955 -0.4750771419 -1.085109748 -0.3909975626 #> 512   0.2183582808  0.9583743730  0.041738039 -2.3306842516 #> 513   1.7552000237 -0.1925857383 -0.506577415 -0.4068469877 #> 514  -0.7753387302  0.0596751475 -1.083517682 -1.5427498280 #> 515  -1.6245955956  1.4151686262  1.937086769  0.2015833558 #> 516  -1.0025285823 -2.0293041900 -2.945392134 -1.1527377591 #> 517  -2.1453336875  0.6574007512  0.434307088  0.1266418181 #> 518  -0.0922502622 -1.1643416151 -1.145531760  0.2277435434 #> 519   0.0025403809  1.5096024166  2.083169312  0.6040794429 #> 520   1.6110085847  0.4540982199  1.474742208  1.6646537598 #> 521   0.9968168118  0.3893105520  0.567220345  0.0981453711 #> 522   0.2627224346 -0.6511599231  0.233953444  1.3436786042 #> 523  -0.6995011987  0.3678536370  0.358466596  0.0807081165 #> 524   1.8441719823 -1.4410218386 -0.531263727  1.5183015015 #> 525   1.3297458484 -1.0979522025 -0.469124381  1.2610213259 #> 526   0.6789518102  0.7481040128  0.886099625  0.4325220184 #> 527  -1.2274096192  0.4772752028  1.310976368  0.9034869503 #> 528  -0.3734748332  1.9396931125  2.360986577  0.0495707540 #> 529  -0.5911746899  0.6832511272  1.196287406  0.9863760671 #> 530   0.6107274366 -0.2444192174 -0.377007071  0.1561519039 #> 531  -0.3724498642  0.4459706057  1.049556137  1.0911240751 #> 532   0.1566416633 -1.6502878054 -1.536898828  0.5441093646 #> 533  -0.3364111759 -1.4237459239 -1.021588234  1.2255158216 #> 534   0.3260204547  1.0178046475  1.502469702  1.0754718171 #> 535   1.1598297661  0.4756513689  0.920276708  0.8247597402 #> 536   0.6554945729 -0.3729172644 -0.463539207 -0.1547347582 #> 537   1.0429722566  0.5797611106  1.137885637  0.7676123393 #> 538  -0.3007149967 -0.8743458812 -0.769593369  0.4327040299 #> 539  -0.6470825287 -1.8160434383 -1.594156463  0.4766732382 #> 540  -1.3042977710 -0.4696564375 -0.053524779  0.9636035711 #> 541  -0.5040035511  1.3504208065  2.009321096  0.9079172148 #> 542  -0.6854980593 -1.9831829626 -1.372403740  1.3913191676 #> 543   0.6400849904 -0.1105197075  0.146678756  0.3654752357 #> 544   1.1545063746  1.9001920065  1.088932545 -1.4844124026 #> 545  -0.5536701674 -0.0451630009 -0.388878423 -0.1491018689 #> 546   0.2448451932 -1.0648436827 -1.195746084  0.0153615060 #> 547  -0.4913264427 -1.0420877053 -0.227543846  1.5903748172 #> 548   0.9089644049 -0.1770320379 -0.710944597 -0.8591128912 #> 549  -1.4480886049  0.4730045494  1.718534884  1.2888682151 #> 550   1.1290782321  0.1367610712  0.464622596  0.2568278032 #> 551   1.1592133181  0.2630603038  0.743203022  0.8852096757 #> 552  -0.4417653023  0.2765783374 -0.598622595 -1.5280363965 #> 553   0.8421254078 -0.6173575282 -0.240395892  0.9044368833 #> 554   0.2193056555  1.5048842364  1.253244569 -0.9775184146 #> 555   0.2230189795 -1.0376108478 -0.805230549  0.7326335803 #> 556   0.2218885393  1.1586871948  0.207964974 -1.4397610958 #> 557   0.4118867959  1.6318253055  0.980655721 -1.2914290881 #> 558  -1.4991407534 -0.7200037362  0.381143042  1.4909826860 #> 559   0.3373152269 -0.9130749806 -1.369939542  0.0496168734 #> 560   1.6264893201 -0.2471882375  0.118611293  0.6202511068 #> 561  -0.7127661082  0.5691360371  0.208407489 -1.2477273909 #> 562  -0.7147363088 -1.3377610171 -0.771861723  1.0100582351 #> 563  -0.1864531023  0.3745124236  0.081363392 -0.5113616930 #> 564   1.2703105629  0.6329692899  0.937485544  0.2066546330 #> 565   0.6715115868 -1.4026014371 -0.530886203  1.8757254748 #> 566  -0.2935353680  1.4030908311  0.827795196 -1.1142051299 #> 567   0.7157704192 -0.1667592920  0.202055324  0.6641135071 #> 568  -0.0777541743 -0.5284464406 -0.667341663 -0.2572392735 #> 569  -0.9287632275  0.8260561942  0.070102632 -1.2430548917 #> 570  -0.3854772316 -0.0754859197 -0.324002801 -0.3335127044 #> 571   1.1006506323  0.6405915387  0.999909004  0.2944852796 #> 572   0.2680982866 -1.8411781186 -2.013433327 -0.1432620442 #> 573  -0.6783623211 -0.5343196411 -0.332660869 -0.0985449689 #> 574   1.2509244301 -2.1688132978 -1.510598843  1.8536389799 #> 575  -1.2131812235  1.2807124620  0.725632733 -0.8930670837 #> 576   1.0160959012  0.4281976364  0.339545456 -0.6305178197 #> 577  -0.5054480299 -1.4065961300 -1.369956588  0.0643886395 #> 578  -0.6950899022  0.5589463602  0.687815848 -0.0813452606 #> 579  -0.8740647739 -0.6874977354 -0.722830460 -0.1358448282 #> 580   0.5647821482  0.1284506568 -0.779091747 -0.8775250073 #> 581  -0.5599329697  1.1509443637  0.865275448 -0.3248129126 #> 582   1.0685176674  0.8042340665  0.772010795 -0.7248837972 #> 583   1.0578666390  0.9839777411  0.797985013 -0.5382368418 #> 584  -1.3180109144  0.6000965847  0.932220883  0.1983195302 #> 585  -2.0589108575 -0.3678046329 -1.074369988 -0.7923278064 #> 586   0.4032351738  0.1527296615 -0.312658916 -0.6284244236 #> 587  -2.1233863948 -0.1244076262  0.002743405 -0.1860135623 #> 588   0.5578353624 -0.9737917906 -0.347662099  0.7259950026 #> 589   0.4961458538 -0.2345845940  0.606748859  1.3908139548 #> 590   0.3164937916  0.1095979736  0.874649305  1.3544397157 #> 591   0.3380497008 -0.8024833497  0.261773133  1.9617006561 #> 592   1.0665751542 -0.0775564886  0.049889589  0.8019540157 #> 593  -0.5374398433 -0.7934627379  0.664968629  2.1177225395 #> 594  -0.6314629514 -0.0756081177 -0.082993659  0.7454231006 #> 595  -1.0560442250  0.5405547198  1.068572641  1.0120329497 #> 596  -0.5326743862 -0.2900671751 -0.811500487 -0.5712436457 #> 597   1.2863228674  0.5145789536  0.670557638 -0.2672647506 #> 598   0.0451731991  0.5359798380 -0.913268041 -2.0143420187 #> 599  -0.6952671335  0.9167701569  1.296589519  0.0969991237 #> 600  -2.7363006285  0.8750903881  1.341544384 -0.0889496301 #> 601  -0.8758952247  0.7624869355  1.868896989  1.4319349426 #> 602   0.5856062243 -0.7874949460  0.341749096  1.9132939272 #> 603  -0.9627503743  0.5122745815  0.267183382 -0.1321589636 #> 604  -0.4004473246 -0.5201327942 -0.569102764 -0.1176197285 #> 605  -0.9512244044 -0.7586787053  0.498967067  2.3052886341 #> 606  -0.4967838039  0.6304347512 -0.151588104 -1.1962975988 #> 607  -0.1693381631 -1.1538830384 -1.046646379  0.0999659471 #> 608   1.0366938162  2.0621762793  2.303472620 -0.5211401944 #> 609   0.7002720048 -1.2636568923 -1.632009761  0.4224003105 #> 610  -0.1266833485  0.4818373479  0.996164369  0.7321988059 #> 611  -2.0142889482 -0.5995118269  0.908322890  2.0221320575 #> 612  -1.5493455344 -0.5780376546 -0.530444702 -0.1611701799 #> 613   0.3923936965  0.5347873253  0.404909135 -0.4883024285 #> 614   0.8386451785  1.7248576839  1.713506421 -0.3519541475 #> 615  -0.6352838502 -1.5343419429 -1.271865187  0.5115024002 #> 616   0.6385819103  0.0941732392  0.282074129  0.1818724395 #> 617   0.2390371330 -0.4993828955 -1.178027552 -0.8780417978 #> 618  -0.6906692610  0.2680308484  1.174965724  1.2094065570 #> 619  -0.0420338677  1.9270788558  1.636393812 -1.1422986270 #> 620   0.2438808618 -1.7167411081 -1.684191471  1.2505777297 #> 621   1.3403313458 -0.6375432763 -1.495083628 -1.2495368455 #> 622   0.5933776897 -0.6417354929 -1.383198124 -0.5424497287 #> 623  -0.9054844650 -1.5823517743 -1.916929018  0.6338039583 #> 624  -0.8363539920  0.7292392503 -0.459239036 -2.2470600140 #> 625   1.0435909186 -0.6326780265 -0.986488214 -0.2389315239 #> 626  -1.6888842705  0.0906626829  1.138325376  1.4454500460 #> 627  -1.2103858466 -2.1717818435 -1.656641172  1.2892885841 #> 628  -0.2161294458 -0.4529931514 -1.202511724 -1.4088157346 #> 629   1.5501080042  0.9428268138  0.624794239 -0.6831640499 #> 630  -0.5092518713 -0.9818011534 -0.468948783  1.4566801204 #> 631  -0.2538721942 -1.1363627552 -1.223901623  0.3351313578 #> 632  -0.7363730604  0.6591487022  0.065980147 -1.0978451286 #> 633   0.6196165736  0.0688217354  0.337886694  0.5631528890 #> 634  -1.2576689270 -0.3227084778  0.275945726  0.7394384420 #> 635   1.1438301679 -0.2607950489 -0.489690886 -0.1797010911 #> 636   0.6665801522  0.2752522039 -0.575208101 -0.8628676103 #> 637  -0.7779399411 -0.2957134073 -0.676270888 -0.1543121439 #> 638  -0.3174705628 -0.2876014994 -0.195753221 -0.0147844657 #> 639   0.0864920385 -0.1114925948  0.064005245  0.4322262735 #> 640   0.6248883181 -0.1252694088 -1.130721335 -1.7468014202 #> 641   0.5787570894 -0.3241654155 -1.438406227 -0.9848176167 #> 642  -0.0594945663  0.4681470721  0.254021136 -0.0988252739 #> 643  -0.4978049328 -0.1814643368  0.676679999  1.4778311711 #> 644   1.5987086390  0.9752029619  1.301187825 -0.2199095282 #> 645   0.7507220816  0.9141130936  0.974713443 -0.4262853793 #> 646  -1.9242827544  0.6372644734  1.385255851  0.3576828180 #> 647  -0.7556012249 -0.6707785611 -1.314285794 -1.0033586091 #> 648   0.6574948316 -1.4837559485 -1.198395666  1.4890065415 #> 649  -0.9284846394 -1.1943612132 -0.192686110  2.0598346952 #> 650   0.6881453583 -0.9472139562 -1.164422747 -0.0064190080 #> 651  -0.0737933303  1.3200024913  0.492163370 -1.4247363837 #> 652  -0.6375413001 -0.0117008853  0.705823144  1.2069505603 #> 653  -0.0072406190 -1.1453500912 -0.899155278  0.1120799746 #> 654   0.3579303035 -0.5713767399 -0.765019674  0.2104561359 #> 655   0.9975946589  0.0635987036 -0.741743976 -1.6419483739 #> 656  -1.4545079032  1.7352662912  1.927148459  0.2858529641 #> 657   0.4672351818 -0.5172862222 -0.536265374 -0.1625385985 #> 658  -1.2059303701  0.7636857751  0.841590751  0.4475778366 #> 659  -2.2392674216  0.1426994592  0.109498801  0.1611965206 #> 660   0.0761683182 -2.1800811254 -1.605700160  2.6222409273 #> 661  -0.7320082355  1.1865119188  1.803049669  0.3801084141 #> 662  -1.2613655111  1.5137301076  1.879506082 -0.0961759653 #> 663   0.4737278786 -0.1713876468 -0.471088131 -0.3741098931 #> 664  -0.4055584280  0.1204510495  1.102389391  1.0057796996 #> 665  -0.1096022712  1.8190858470  2.078385193  0.0490648166 #> 666   0.5912071964  0.1397610528 -0.088196608 -0.2876619846 #> 667   1.1641364546 -0.0757056626  0.159043797  0.2794683046 #> 668  -1.0857452902  0.7766007912  0.932163585 -0.1217333823 #> 669   1.9171136144  0.3087094123 -0.745446199 -1.6397749473 #> 670   0.0170002664 -1.6255035948 -1.085908303  1.6770147049 #> 671  -0.1679750862  0.2188835215 -0.725215446 -1.8860166588 #> 672  -0.0004898524 -0.9507636818  0.030599124  1.2803563216 #> 673   0.8560495538 -0.5626965983 -0.531928418  0.1590499599 #> 674   0.5039646392 -1.2135577566 -1.188876360  0.1476039136 #> 675  -2.2131237848 -0.3804082015 -0.494096219  0.0157931646 #> 676   0.0908022944  0.3255100808  1.088526216  0.8613148382 #> 677  -0.0901713832 -1.4184309801 -1.349146691  0.7339305209 #> 678   0.2559094371 -0.6603128583 -0.688647120  0.6402630094 #> 679  -0.1540698886 -1.4214172334 -1.050288731  0.9220425830 #> 680   1.5290031321 -0.1950978921 -0.206804667  0.0366715348 #> 681  -0.4022421474 -0.0050045210  0.639909589  0.6613532981 #> 682  -0.5542071076  0.9275224175  0.005314208 -1.5498301457 #> 683   0.5748780270 -0.5386533707 -0.452243249  0.1848732614 #> 684  -1.2624707495 -2.8106352440 -2.658669605  1.3234982252 #> 685   0.3633090782  0.6153150646 -0.086036227 -1.7243890623 #> 686  -0.4040273435 -0.4371513441 -0.673780076 -0.3948567500 #> 687   1.9498044688 -1.9841562894 -1.777805084  1.1746266622 #> 688  -0.6932043386  1.4678731670  1.348024719 -0.0625178832 #> 689  -0.7801379943  0.1922283623  0.010336005 -0.4056508624 #> 690   1.3452618806 -0.0408907299  0.378443518  0.2249384303 #> 691  -0.2943885488 -0.2383488361  0.188819961  0.8542047196 #> 692  -1.5717567614  0.9402004493  1.332366830  0.0305555848 #> 693  -2.1004821015 -1.2843292428 -1.472686158 -0.1106693781 #> 694  -0.8784274832 -0.7233297661 -0.434060198  0.8479727118 #> 695  -1.5129183778 -0.0405561668 -0.148710075  0.2020458706 #> 696  -1.1778306588  1.1600092724  0.853135724 -0.2167217853 #> 697  -0.8587384852 -1.9091341931 -1.566507222  0.9264831784 #> 698  -0.6340944306  0.7051015394  0.536705108 -0.3628398703 #> 699  -0.5538425324  0.6090848315 -0.143648880 -1.9533402716 #> 700  -0.3652173107  1.7243308216  1.399882950 -0.8847730330 #> 701   0.9380645706 -0.6681644882 -0.944637839 -0.4521769889 #> 702  -0.3886544525 -1.2359756154 -0.701395919  0.6828929636 #> 703   0.3122813603  0.6117717749  0.387678688 -0.5416466344 #> 704  -2.8786319712  1.5605366986  1.281749304 -0.8939656552 #> 705  -0.2115104500 -0.4446517237  0.194670403  1.5176599013 #> 706  -0.2715415174 -2.1365342190 -1.474615634  2.0679749134 #> 707   1.8209351661 -0.3440435296 -1.244210938 -0.7863259752 #> 708  -1.2155194238 -0.6786410592 -1.299201207 -0.8524052448 #> 709   1.0158802244  0.9132581515  0.774353026 -1.0777305053 #> 710   1.2420296448  0.0940418482 -0.183688685 -0.7128086666 #> 711  -1.4237357212  0.5896739735 -0.174977586 -1.1038959233 #> 712   1.6838773758 -0.6097834941  0.412420023  1.7219590383 #> 713  -0.6150120746  0.6032192875  0.551636787 -0.2861403953 #> 714   0.0345827061 -1.0395276531 -1.098235680  0.4486927611 #> 715  -0.2832630001  1.4049611140  1.268026140 -0.3914370025 #> 716   0.1545002475  0.2002355762  0.211822034  0.3048403977 #> 717  -1.0708844925  1.7471167559  1.010392562 -1.5973520043 #> 718  -0.6694954477  0.9363904231  1.221383798  0.0432159008 #> 719  -0.7457406705  1.6353906920  1.512354224 -0.8705524509 #> 720  -0.3943234952  1.1926616578  1.723850645  0.1862201853 #> 721  -1.0836001293  0.2551578604  1.731725264  1.9840885024 #> 722   1.5303626234  0.1650436006  1.094437083  1.1185693914 #> 723  -1.4271946678 -0.6275573210 -0.084302121  0.9110334145 #> 724  -0.9348800870 -0.4075511101 -0.238537516  0.2632035337 #> 725  -1.4210540159 -0.5525190422 -0.368755730  0.2104393511 #> 726  -1.4750597194  0.0740258369  0.377555626 -0.0518100604 #> 727   0.6015020275 -0.6952396229  0.205403034  1.4191190092 #> 728   0.3452907530 -0.1729181277  0.473108676  1.3076180945 #> 729  -0.3147620932 -0.2438576067  0.207279201  0.7527979105 #> 730  -0.6559068994 -1.3696012365 -0.436324210  1.4805027033 #> 731   0.1574756847  0.1305336600 -0.402340136 -1.1620121401 #> 732   0.4732917401  1.1876962205  1.388473689  0.0444150971 #> 733   0.7245961516 -1.5605547019 -1.447815104  0.4266102052 #> 734   0.7327227408 -1.3441438774 -1.135295476  0.5245190050 #> 735   1.1736736647  0.3374315004  0.047029596 -0.4261295135 #> 736   0.1405083868  0.4968418840  1.209248567  1.1283526792 #> 737  -2.5383954227  0.0614587021  0.072391778  0.4571298713 #> 738  -1.1738044838 -0.5128260873 -0.212904404  0.4893807088 #> 739  -1.7466658946  1.2176639125  1.101415169 -0.1077513421 #> 740   0.0983341298 -0.6159515894 -1.290189525 -0.6592716178 #> 741  -1.3684820029 -0.3180995386  0.175467609  0.7607304204 #> 742   1.6643770424  0.6733818362  0.294005626 -1.1656835664 #> 743   1.7382941087  0.3557662018  0.528786009  0.3937590286 #> 744   0.6128476306 -0.1121162100 -0.911360169 -1.3476938996 #> 745  -1.3703182602 -0.3019742783 -1.382649766 -1.1815596867 #> 746  -0.4590141175  0.2979306539  0.269864002 -0.4919737107 #> 747  -0.9368951523 -1.6650059076 -0.596317753  1.6599359653 #> 748  -0.5618429801 -0.9541205404 -0.795756235  0.5547828745 #> 749  -1.3186748349  1.4930732510  1.535849730 -0.5782595810 #> 750  -0.5910729029 -1.0607126586 -0.349196081  1.4349338392 #> 751   0.8772163560  0.6422399667  0.028027431 -1.4548577113 #> 752   1.9414024711  2.0489002445  1.800250402 -1.1808979936 #> 753  -0.2252302817  0.0702681641  0.645210798  1.2543749153 #> 754  -0.1988164646  0.5486887607  0.444806045 -0.0908102542 #> 755  -2.2347950031  0.3385869469 -0.211156719 -1.0388754295 #> 756  -0.4419874235  1.1413519376  0.762348427 -0.7869199465 #> 757  -0.9300438139  0.0799854609 -0.230864934 -0.4518375999 #> 758   1.5427556172  1.0619417078  0.715928407 -1.1323897776 #> 759   0.8141802414  0.3885047425  1.246753501  1.3405466314 #> 760  -0.4850482031 -2.5092919869 -2.613137098  0.4286810221 #> 761  -1.7911321464 -1.3757647841 -1.403690704 -0.1158081964 #> 762   0.2552024791 -0.6170574435 -0.940809538 -0.3130405144 #> 763  -2.0301790965  0.0723832204  0.267741855 -0.3048146667 #> 764   1.7792536970 -0.7763482923 -0.044160373  1.2583076860 #> 765   1.7536000605 -1.0131957490 -0.357635770  1.5622384207 #> 766   0.5932820209 -0.8846594588 -0.559528638  0.9299626396 #> 767   1.0750088042 -0.0795076836 -0.591101412 -0.3845543714 #> 768   1.0266259614 -0.1665758940 -0.237733589  0.3359773395 #> 769   1.8838743666  0.5969922946  0.711060822  0.3523694155 #> 770  -1.1929078766  0.6742725587 -0.587503819 -2.4587582359 #> 771   0.1732576741 -0.5168705078 -0.753063904 -0.5101097308 #> 772  -1.9013221756 -0.1755818258 -0.407408877 -0.5927905910 #> 773  -0.4490646136 -0.4058911142  0.126903798  1.2596924689 #> 774   0.0449848225  0.4470448722 -0.071841376 -1.3047358838 #> 775   1.5480093198  0.1648328848  0.229152426 -0.1178934138 #> 776   0.4533917260 -0.3311256703 -0.566735447 -0.6227409419 #> 777  -0.7664692649 -0.5767755906 -0.562657412  0.0623121260 #> 778  -0.0097612207  0.1411269815  0.483088120  0.6899912062 #> 779  -0.4556498995 -0.8367992472 -0.668926255  0.3989580327 #> 780  -0.7176960976 -0.1567775988 -0.325636629 -0.4023945104 #> 781  -0.9082690526 -0.1501156508  0.283500046  0.6950326997 #> 782   1.3621695818  2.4616947658  2.044579163 -0.7207314114 #> 783   0.6613768337  0.5510749737  1.234486041  0.9465005888 #> 784  -0.5189683829 -0.6123261485 -0.275076919  0.6932369584 #> 785  -1.4259202467 -1.6630024274 -1.738985134 -0.0938968856 #> 786  -1.1513141263 -0.7170150432 -0.912500204 -0.2061299796 #> 787   2.1121673244 -0.9219781412 -0.790497068  0.7961278523 #> 788  -0.6389747397 -0.6677667513 -1.587622046 -1.4320268444 #> 789  -0.6917576180 -1.3078628192 -1.755805533 -0.5159557415 #> 790   0.7055479276 -1.2679117775 -0.648310275  1.1583485023 #> 791   0.7296099146  1.0009617957  0.697399678 -0.8626039748 #> 792  -0.2807591606 -0.1715994390 -0.474466607 -1.0114773826 #> 793   0.5208296262 -0.2012131572 -0.230770942  0.2899214498 #> 794   0.2984108629 -0.6484486229 -0.688540956  0.6120314610 #> 795   1.0419865121 -1.8474004685 -1.675974156  0.5564894681 #> 796  -1.3908030830  0.8035005041  0.286180252 -1.7340490575 #> 797   0.4195653155 -1.5458376590 -1.531649386  0.8146693973 #> 798   1.4284384294  0.7394024048 -0.263897236 -1.5664717965 #> 799   0.6243304040 -0.2305038316  0.554058330  1.6699897267 #> 800   0.4946065489  2.3445544521  1.870087946 -1.1967339897 #> 801  -0.2824653374 -0.7366760203 -0.318097300  0.7652781478 #> 802   0.1313703439 -0.8621065364 -0.519424016  0.4721759154 #> 803  -0.3273622739 -2.3174256700 -1.957967721  1.2337201257 #> 804  -0.7480279864 -1.2412483335 -0.279471901  1.5963747945 #> 805  -0.9272512850  1.0786583086  0.761496444 -0.7252813910 #> 806   0.7084775046 -2.4548442508 -3.628313100 -0.7454158655 #> 807   0.4439906679  0.9909901115  1.012125448 -0.2695933269 #> 808   0.3972109201 -0.0417435169 -0.325020715 -0.6278572727 #> 809   1.1010864990  1.6755809265  1.372531635 -1.1357838675 #> 810   1.5495821209 -1.1358316257 -0.810165079  0.4424896119 #> 811  -1.0185613030 -1.0144391009 -0.759725728  0.7043249735 #> 812   0.4416434813  1.7736246291  0.749401592 -2.4286608179 #> 813   0.5038520562  0.0788402858  0.600572433  0.5154254609 #> 814  -0.8825714892  0.8589226302  0.325846790 -1.4037060630 #> 815  -0.3179779669  0.5531742042  0.704613210  0.2092886342 #> 816  -1.4997620707  1.3205270707  0.671195636 -1.2144674113 #> 817   0.7964842432  0.8354260126  0.182167192 -1.1059150703 #> 818  -1.3291084191  2.7570257861  2.702697678 -0.3506612548 #> 819   1.4866019618 -0.7563113191 -0.859906243  0.1927489685 #> 820   0.5820567072 -1.0499269653 -0.239170025  1.4993575153 #> 821  -0.7061669535  0.0865956414  0.200690590  0.3420561735 #> 822   1.5735533431  1.2606061690  0.972263674 -0.5290902000 #> 823  -1.6038536585  0.9062336500  0.448471640 -0.5063419930 #> 824   0.8494854303 -1.0558514524 -1.348198749 -0.1856978959 #> 825   1.2463696637 -0.0996032204 -0.836291364 -1.6193047126 #> 826   0.3244265031 -2.1858317298 -1.229468726  2.2056510444 #> 827   1.3728210268  0.7152008431  0.009959350 -1.0752309665 #> 828  -1.5916222753  1.0469488287  1.391879926 -0.1932908952 #> 829   1.7360131061  0.2448835577 -0.649019210 -1.7408968212 #> 830  -0.0060375295 -0.1848613300  0.183672525  0.4172360029 #> 831  -1.4563188435 -1.5108957550 -2.194099855 -1.1740927542 #> 832  -0.0420660207  0.2537061766 -0.407922534 -0.9505314871 #> 833   0.9628787738 -0.8937053937 -0.484679152  0.8282125233 #> 834  -0.6548214043  1.8206252470  1.515583414 -0.6111362964 #> 835  -0.2300650596 -1.0441826251 -0.911280789  0.2881066394 #> 836  -0.5137799601 -0.9779747797 -0.726227764  0.2750370703 #> 837   0.5302170356  0.6320324782  0.031084272 -0.9335748166 #> 838   2.2130514427  1.7424035860  1.309458225 -1.3979211388 #> 839  -0.7015524598 -1.4507402517 -1.520473564  0.4244247419 #> 840   1.2693293416  0.6392141181  1.336446257  0.7898404988 #> 841  -0.4831102690  0.7446660430  1.288373819  0.1796532118 #> 842   0.2887953308 -0.7710383350 -0.924091244  0.4007222659 #> 843  -1.6835705400  0.7919072952  1.047587066 -0.2503956257 #> 844  -1.1936059622 -1.0358134455 -1.006124067  0.2227655879 #> 845   1.0394144247 -0.9762313292 -0.858704669  0.6983826136 #> 846   0.2884344093 -0.6252740325  0.346877263  1.8229745025 #> 847   0.4072897555 -0.1171133850  0.451473714  0.6034868006 #> 848   0.4286372186 -0.8283062627 -0.887288241  0.0108428832 #> 849  -2.2061380527  0.0313344034  0.423583538  0.9884434226 #> 850  -0.7926383090 -1.2841961954 -0.615988436  0.8239554969 #> 851   0.8507887064 -0.5460128730 -1.476084147 -1.6387697879 #> 852   0.8808798516  0.9630566397  1.092435173  0.1218794873 #> 853  -0.3128484540  0.7785429286  0.612289072 -0.4735490723 #> 854   0.2686795324  0.3146427576  0.468891299  0.3298819834 #> 855  -0.6163263202 -0.7551812721 -0.167303398  1.5104659520 #> 856   2.1797557099 -1.1282012324 -0.863036222  0.7244408110 #> 857  -0.2730971962  2.1030337915  1.600279653 -1.7222169503 #> 858  -0.2263926228 -0.3693750422  0.679805577  1.5903476996 #> 859  -0.7633529632 -1.4666474093 -1.346359966  0.3483337597 #> 860  -1.3688573668 -0.7161702306 -0.395538306  0.8160923023 #> 861  -0.1288171773  0.1996713073  0.767091896  0.6646674252 #> 862  -0.3083049975 -1.0616047886 -1.772572135 -0.0443515046 #> 863  -0.1016505588 -1.5265829061 -1.324467466  1.0585615601 #> 864  -0.1620229996 -1.1548553672 -1.243338312  0.5463070649 #> 865  -0.4707424886 -2.5690630034 -2.469974880  0.7838326916 #> 866   0.8661921528  0.3961274681  0.679270493  0.3029985638 #> 867   0.3028708896 -0.0094293454  0.118892568  0.1746146559 #> 868  -0.8111268971  0.9684982891  0.111346330 -1.0379809937 #> 869   0.2851594402  1.4498009044  0.867231043 -1.4297744700 #> 870  -0.2251104022  2.7578751077  2.181331359 -1.8913893379 #> 871   0.1368509725  3.0693999644  1.936068677 -2.2138115625 #> 872   0.4985284119 -0.0719259483  0.609127607  1.4429568117 #> 873  -2.0106137323  1.1712080092  1.643143296  1.0533661269 #> 874  -0.1829939793 -2.0836991515 -2.062435291  0.3976284881 #> 875   0.4124240196 -0.0935285905 -0.010163707  0.1029853685 #> 876  -0.9335673396  0.2874848806 -0.721668978 -1.9596475755 #> 877  -0.2092973704 -0.7775340297 -0.622405469  0.5827398665 #> 878  -0.0267124000  0.5805054737  0.597145121  0.3269908977 #> 879  -1.8352046585  1.1539049328  1.760503855  1.1623150623 #> 880  -0.0456786470 -0.8569683150 -1.048150555 -0.2295626443 #> 881  -1.2060442957 -0.6979701377 -1.070950053 -0.6153376535 #> 882   0.9789629182  1.5620044030  1.049713701 -1.1520624067 #> 883   0.1010927119  0.7296496270  1.236504864  0.4627969810 #> 884  -0.1793136345  0.8798665483  0.876778375  0.0761608563 #> 885   0.3112573440 -0.5946462142 -1.051424527 -0.4873484607 #> 886   0.5437623223  0.2983138616  0.377306008  0.5938705772 #> 887  -2.0398248523 -0.1690534778 -1.253473923 -1.2669718763 #> 888   0.1631469085  1.0393516766  2.099425192  1.2687901252 #> 889   0.5996762529  0.4564583027 -0.966419850 -2.5151274499 #> 890   0.4407786448 -0.3083160055  0.134900472  0.3608898227 #> 891   0.1837076561 -1.0553439477 -0.585816897  1.3945187859 #> 892  -2.1923669386  0.5159484295  0.403855111 -0.3979677923 #> 893   0.6073626851 -1.5219919644 -1.664031058  0.6972003463 #> 894  -1.3194838376 -1.5963982717 -1.056968012  1.4982818932 #> 895  -0.6656003989  0.9811794915 -0.327045817 -2.4489032260 #> 896   1.2892205466 -0.0270730880  0.283903898  0.1872387106 #> 897   0.4389043238 -1.2490850331 -0.354510036  2.0011448732 #> 898   1.8108836996  0.4963849558  0.166791512 -1.1747283936 #> 899  -0.4311966657  0.1019209507 -0.071849951 -0.4337880369 #> 900   0.4708149510 -0.1385399887 -0.304215015 -0.3230860979 #> 901   0.5573213793 -1.0489214811 -0.734034926  0.2004882163 #> 902   0.1855787789  0.4909039493  2.002255975  2.7573648256 #> 903   0.9018878242 -0.4215955600 -0.764166292 -0.2712003376 #> 904  -0.2130973883 -0.9185198717 -0.737543323  0.5473558157 #> 905  -0.0474423429 -0.1434392857 -0.104374862 -0.3134263383 #> 906  -1.2946449292  0.5140625698  0.919450811  0.9352097011 #> 907  -1.9924701889  0.1005192336  0.212437284  0.4029697848 #> 908  -0.8873021182  0.4736888266 -0.067848813 -1.4028619661 #> 909  -1.2745557355  1.4149802806  1.487309021 -0.0774356636 #> 910  -1.3683707437  1.9522230980  1.350987610 -1.7320542997 #> 911  -0.1967469250 -0.0056673718 -0.111794048 -0.0841171955 #> 912   0.5517750618  0.9022387504  0.723668436 -0.5354535754 #> 913   0.0782811899  0.6606829694  0.195393643 -0.2530835851 #> 914  -0.7508076748  0.5284569297  0.772694665 -0.4506761376 #> 915  -0.3396081941 -0.0981753841 -0.198752924  0.3614229608 #> 916   0.2609764110  1.2849329712  1.142301189 -0.6414186638 #> 917   0.2524393073 -0.9671571750 -0.704052197  0.6298719151 #> 918   0.0630523056  0.0042374056  0.100350166  0.0640418343 #> 919   0.6678230148 -1.0407229306 -0.683698164  0.6521823892 #> 920   0.2433243279  0.4493970172  0.483234134 -0.1217209646 #> 921  -1.6970964549 -2.5575885885 -2.713300120  0.5700121170 #> 922   0.3441936961  1.2156798605  0.701546511 -1.1476598902 #> 923   0.6455136434  0.6300481445  0.115451338 -0.2524077901 #> 924  -0.7089728864 -0.3736422768 -0.012939102  0.2212622616 #> 925  -0.4841715206 -1.6788117326 -1.035312799  1.7081416116 #> 926  -1.2635203716  0.9556309214  1.213375825  0.1190602660 #> 927  -0.7213123189 -0.0527329796  0.413122635  0.5015636087 #> 928  -1.4294247702  0.4427589803  0.323869075 -0.2619797587 #> 929   0.9822535394 -0.6434358983 -1.115309830 -1.1209537650 #> 930  -1.6579670226  1.3713889518  1.400622005 -0.2174936721 #> 931  -1.4205875904 -0.3087522107  0.102247784  0.4273958770 #> 932   0.4310844605 -0.7607476069 -0.789561338  0.6681964789 #> 933   0.7762627740 -0.0486183912 -0.590502739 -1.0326233077 #> 934   0.9666903035  0.2790414969  0.171449744 -0.1562848425 #> 935  -1.2634211792 -1.0517956415 -0.551255788  1.0536575436 #> 936   0.0973634539 -1.1582368045 -0.956025035  0.8588950576 #> 937  -1.0858533575 -0.6844814443 -0.007352250  1.2403270766 #> 938   1.0227450297  0.7303251580  0.701861787 -0.4109947417 #> 939  -0.2352751770 -0.3585984685  0.034527568  1.0306089414 #> 940   0.4258553370  1.4705095719  1.644539372 -0.2400348882 #> 941  -0.0557223973  0.0333765437  0.346276446  0.8844330078 #> 942   0.1401301413 -0.4758220528 -0.302618019  0.2300095821 #> 943   0.0465151576 -2.0098283303 -1.535085260  1.1564979653 #> 944  -0.1891369786  0.0040558621 -0.957295024 -1.8457170669 #> 945   1.4929759134  1.0331332306  0.213463458 -1.3803621307 #> 946  -0.6304366043  0.7287388844  0.473908404 -0.2323081500 #> 947   0.8768511704 -0.7559963745  0.586279159  2.2840924999 #> 948  -1.3085993802  0.7004715444  0.564710074 -0.1349677926 #> 949  -0.1109679775  0.5358508097  1.087650284  1.3880163565 #> 950   0.6204873652  1.5928530207  1.896645677 -0.2941840516 #> 951  -0.4601902603 -0.4330332317  0.128301454  0.4213490900 #> 952  -0.3915820370  0.0338751543 -0.728645801 -0.8319587388 #> 953  -1.0408651683  0.1707294872 -0.213702489 -0.9693475273 #> 954  -0.0367321540 -1.0286598793 -1.889471299 -0.9507735576 #> 955   0.4346744743  2.4295851919  2.790949126  0.2900830442 #> 956  -0.7876451846  0.5218989013  0.618789753  0.0206063413 #> 957   0.3384012758  1.3221983709  1.069794857 -0.6626404882 #> 958  -1.3831608621 -0.5426091838 -1.045239345 -0.7939578030 #> 959  -0.2749337495 -2.7681164127 -2.513734334  1.5236256459 #> 960   0.6579269250  0.2974833000  0.101918446 -0.4342141292 #> 961  -0.6771577902  0.2543842901  0.493471278  0.1401768508 #> 962   0.9007992072  1.3917072717  0.342982123 -1.9895021932 #> 963   0.4458374094  0.1018223777  0.017999544 -0.2570169573 #> 964  -0.1693277702  1.4433207655  2.081982558  0.4934128210 #> 965  -0.7352733505 -0.2625306165 -0.138356828  0.7671370027 #> 966   0.9351357739  1.8758047902  1.208696263 -1.7178642320 #> 967  -1.0515867373  0.8191829437  1.175206265  0.1421878663 #> 968  -0.9541786695  0.0290683759  0.460697730  0.6895890374 #> 969   1.2742100302  0.7234406338 -0.163889281 -1.7197893491 #> 970  -1.1532097322  0.4497584586  0.435971450 -0.2672792190 #> 971   1.2856473038  0.0842571579 -0.248254038 -0.9375633407 #> 972   0.1367775527  1.5500171163  0.756371746 -1.6851122123 #> 973  -1.4722725972 -1.1749441859 -1.765852547 -0.4805081685 #> 974   0.8613533736 -0.3570904526 -1.252350408 -0.9302867854 #> 975  -0.0899002219 -0.3006434466 -0.119820214  0.4990886155 #> 976   0.1296033005  0.7132651022  0.593727036 -0.3523063514 #> 977  -0.3851816270 -0.2791414087  0.261212304  0.9912653998 #> 978  -1.5026312506  1.0374722481  0.629147414 -0.4988912716 #> 979  -0.5336793021 -0.1596112805 -0.222750332  0.3315287052 #> 980   2.0509146991  0.3799065213  0.519045354  0.5244240378 #> 981   0.9393312575 -1.8652101656 -1.743940546  0.7258215156 #> 982   1.0424927447 -1.6018147985 -1.630369745  0.3861080698 #> 983  -0.2937500560 -1.5110521403 -1.619767144 -0.2090171634 #> 984  -0.4271312040  0.7398844848  0.135389180 -1.4893692036 #> 985  -0.9575948113  1.7025196105  0.967290422 -2.1670858811 #> 986   1.0613645759  0.7478613689  1.206752528  0.4456106606 #> 987  -0.8173118759 -0.1079795094  0.197474110  0.6242578430 #> 988  -0.3990432618 -0.1733378125  0.193949862  0.7589317976 #> 989  -0.7261482843 -0.1671368174 -0.017705953  0.3927015008 #> 990  -0.7101145456  0.3014745648 -0.230666864 -0.7806266277 #> 991   0.7997868118  1.1995363904  1.507301299 -0.0789141760 #> 992   0.3212550843 -0.0636215169  0.063647318  0.9408785566 #> 993  -0.5356825003  0.3206007781  1.166512790  1.7034893053 #> 994   0.6859275918  0.2471914430  0.123476848 -0.5304519446 #> 995   0.1962488287 -0.1216908057 -0.198403881  0.0002219803 #> 996   2.4831838168 -0.0782187395  1.473723808  1.8571316049 #> 997   0.5747718967 -2.8189659519 -2.905952605  0.4046344439 #> 998  -1.0648583323  0.1998847209 -0.517541832 -0.9332636902 #> 999  -0.2312225216 -0.2999658454 -0.204561509 -0.1774115591 #> 1000  0.5015486388  0.7851524817  0.724885412 -0.2499866497"},{"path":"http://svmiller.com/reference/corvectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Create multivariate data by permutation — corvectors","title":"Create multivariate data by permutation — corvectors","text":"corvectors() function obtain multivariate dataset specifying relation specified variables.","code":""},{"path":"http://svmiller.com/reference/corvectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create multivariate data by permutation — corvectors","text":"","code":"corvectors(   data,   corm,   tol = 0.005,   conv = 10000,   cores = 2,   splitsize = 1000,   verbose = FALSE,   seed )"},{"path":"http://svmiller.com/reference/corvectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create multivariate data by permutation — corvectors","text":"data data matrix containing data corm value containing desired correlation vector data matrix containing desired correlations tol single value vector tolerances length ncol(data) - 1. default 0.005 conv maximum iterations allowed. Defaults 1000. cores number cores used parallel computing splitsize size use splitting data verbose Logical statement. Default FALSE seed optional seed set","code":""},{"path":"http://svmiller.com/reference/corvectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create multivariate data by permutation — corvectors","text":"corvectors() returns matrix given specified multivariate relation.","code":""},{"path":"http://svmiller.com/reference/corvectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create multivariate data by permutation — corvectors","text":"liberally copy-pasted van Kooten Vink's wonderful---longer-supported correlate package. call correlate() package, opt corvectors() .","code":""},{"path":"http://svmiller.com/reference/corvectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create multivariate data by permutation — corvectors","text":"Pascal van Kooten Gerko Vink","code":""},{"path":"http://svmiller.com/reference/corvectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create multivariate data by permutation — corvectors","text":"","code":"if (FALSE) { set.seed(8675309) library(tibble) # bivariate example, start with zero correlation as_tibble(data.frame(corvectors(replicate(2, rnorm(100)), .5)))  # multivariate example as_tibble(data.frame(corvectors(replicate(4, rnorm(100)), c(.5, .6, .7))))  }"},{"path":"http://svmiller.com/reference/db_lselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Lazily select variables from multiple tables in a relational database — db_lselect","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":"db_lselect() allows select variables multiple tables SQL database. returns lazy query combines variables together one data frame (tibble). user can choose run collect() query see fit.","code":""},{"path":"http://svmiller.com/reference/db_lselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":"","code":"db_lselect(.data, connection, vars)"},{"path":"http://svmiller.com/reference/db_lselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":".data character vector tables relational database connection name connection object vars variables (entered class \"character\") select tables database","code":""},{"path":"http://svmiller.com/reference/db_lselect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":"Assuming particular structure database, function returns combined table including requested variables tables listed data character vector. returned table attributes inherited dplyr interfaces SQL, allowing user extract information query (e.g. show_query()).","code":""},{"path":"http://svmiller.com/reference/db_lselect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":"wrapper function purrr dplyr heavy lifting. tables database declared character (character vector). variables select also declared character (character vector), wrapped one_of() function within select() dplyr.","code":""},{"path":"http://svmiller.com/reference/db_lselect.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":"Miller, Steven V. 2020. \"Clever Uses Relational (SQL) Databases Store Wider Data (Assistance dplyr purrr)\" http://svmiller.com/blog/2020/11/smarter-ways--store--wide-data--sql-magic-purrr/","code":""},{"path":"http://svmiller.com/reference/db_lselect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lazily select variables from multiple tables in a relational database — db_lselect","text":"","code":"# \\donttest{ library(DBI) library(RSQLite) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following object is masked from ‘package:stevemisc’: #>  #>     tbl_df #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(dbplyr) #>  #> Attaching package: ‘dbplyr’ #> The following objects are masked from ‘package:dplyr’: #>  #>     ident, sql set.seed(8675309)  A <- data.frame(uid = c(1:10),                 a = rnorm(10),                 b = sample(letters, 10),                 c = rbinom(10, 1, .5))  B <- data.frame(uid = c(11:20),                 a = rnorm(10),                 b = sample(letters, 10),                 c = rbinom(10, 1, .5))  C <- data.frame(uid = c(21:30), a = rnorm(10),                 b = sample(letters, 10),                 c = rbinom(10, 1, .5),                 d = rnorm(10))  con <- dbConnect(SQLite(), \":memory:\")  copy_to(con, A, \"A\",         temporary=FALSE)  copy_to(con, B, \"B\",         temporary=FALSE)  copy_to(con, C, \"C\",         temporary=FALSE)  # This returns no warning because columns \"a\" and \"b\" are in all tables c(\"A\", \"B\", \"C\") %>% db_lselect(con, c(\"uid\", \"a\", \"b\")) #> # Source:   SQL [?? x 3] #> # Database: sqlite 3.40.1 [:memory:] #>      uid       a b     #>    <int>   <dbl> <chr> #>  1     1 -0.997  f     #>  2     2  0.722  z     #>  3     3 -0.617  y     #>  4     4  2.03   x     #>  5     5  1.07   c     #>  6     6  0.987  p     #>  7     7  0.0275 e     #>  8     8  0.673  i     #>  9     9  0.572  o     #> 10    10  0.904  n     #> # ℹ more rows  # This returns two warnings because column \"d\" is not in 2 of 3 tables. # ^ this is by design. It'll inform the user about data availability. c(\"A\", \"B\", \"C\") %>% db_lselect(con, c(\"uid\", \"a\", \"b\", \"d\")) #> Warning: Unknown columns: `d` #> Warning: Unknown columns: `d` #> # Source:   SQL [?? x 4] #> # Database: sqlite 3.40.1 [:memory:] #>      uid       a b         d #>    <int>   <dbl> <chr> <dbl> #>  1     1 -0.997  f        NA #>  2     2  0.722  z        NA #>  3     3 -0.617  y        NA #>  4     4  2.03   x        NA #>  5     5  1.07   c        NA #>  6     6  0.987  p        NA #>  7     7  0.0275 e        NA #>  8     8  0.673  i        NA #>  9     9  0.572  o        NA #> 10    10  0.904  n        NA #> # ℹ more rows dbDisconnect(con) # }"},{"path":"http://svmiller.com/reference/ess9_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Some Labeled Data in the European Social Survey (Round 9) — ess9_labelled","title":"Some Labeled Data in the European Social Survey (Round 9) — ess9_labelled","text":"data illustrate labeled data process get_var_info() package.","code":""},{"path":"http://svmiller.com/reference/ess9_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some Labeled Data in the European Social Survey (Round 9) — ess9_labelled","text":"","code":"ess9_labelled"},{"path":"http://svmiller.com/reference/ess9_labelled.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some Labeled Data in the European Social Survey (Round 9) — ess9_labelled","text":"data frame 109 observations following 4 variables. essround numeric constant edition another numeric constant cntry character vector (label) country data netusoft numeric vector (label) self-reported internet consumption respondent","code":""},{"path":"http://svmiller.com/reference/ess9_labelled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Some Labeled Data in the European Social Survey (Round 9) — ess9_labelled","text":"Data condensed summaries raw data. amount every unique combination country self-reported internet consumption. data illustrate get_var_info() function package.","code":""},{"path":"http://svmiller.com/reference/fct_reorg.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorganize a factor after ","title":"Reorganize a factor after ","text":"fct_reorg() forcats hack reorganizes factor re-leveling . situationally useful coefficient plots years.","code":""},{"path":"http://svmiller.com/reference/fct_reorg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorganize a factor after ","text":"","code":"fct_reorg(fac, ...)"},{"path":"http://svmiller.com/reference/fct_reorg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorganize a factor after ","text":"fac character factor vector ... optional parameters supplied forcats functions.","code":""},{"path":"http://svmiller.com/reference/fct_reorg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorganize a factor after ","text":"function takes character factor vector first re-levels re-coding certain values. end result factor.","code":""},{"path":"http://svmiller.com/reference/fct_reorg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reorganize a factor after ","text":"Solution comes way issue Github: https://github.com/tidyverse/forcats/issues/45","code":""},{"path":"http://svmiller.com/reference/fct_reorg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorganize a factor after ","text":"","code":"x<-factor(c(\"a\",\"b\",\"c\")) fct_reorg(x, B=\"b\", C=\"c\") #> [1] a B C #> Levels: B C a"},{"path":"http://svmiller.com/reference/filter_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","title":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","text":"filter_refs() convenience function wrote filtering data frame citations returning entries valid .bib entry (character vector). wrote easily passing citations print_refs() function also included package.","code":""},{"path":"http://svmiller.com/reference/filter_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","text":"","code":"filter_refs(bibdat, criteria, type = \"bibtexkey\")"},{"path":"http://svmiller.com/reference/filter_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","text":"bibdat data frame citations, like one created bib2df package criteria criteria, specified character vector, filter data frame citations type particular type citation entry filter. Defaults \"bibtexkey\" (filters based column unique citation keys). type == \"year\", function filters character vector years.","code":""},{"path":"http://svmiller.com/reference/filter_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","text":"filter_refs() takes data frame citations, like one created bib2df package, returns character vector (amounting valid .bib entry) citations user wants. can easily passed print_refs() function also included package.","code":""},{"path":"http://svmiller.com/reference/filter_refs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","text":"filter_refs() assumes familiarity BibTeX, .bib entries, depends bib2df package.","code":""},{"path":"http://svmiller.com/reference/filter_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter a Data Frame of Citations and Return the Entries as a Character — filter_refs","text":"","code":"# Based on `stevepubs` configuration, filter on `BIBTEXKEY` where # the citation key matches one of these. filter_refs(stevepubs, c(\"miller2017etst\", \"miller2017etjc\", \"miller2013tdpi\")) #> @ARTICLE{miller2013tdpi, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Journal of Peace Research}, #>   NUMBER = {6}, #>   PAGES = {677--690}, #>   TITLE = {Territorial Disputes and the Politics of Individual Well-Being}, #>   VOLUME = {50}, #>   YEAR = {2013}}  #>  #> @ARTICLE{miller2017etjc, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Political Research Quarterly}, #>   NUMBER = {4}, #>   PAGES = {790--802}, #>   TITLE = {The Effect of Terrorism on Judicial Confidence}, #>   VOLUME = {70}, #>   YEAR = {2017}}  #>  #> @ARTICLE{miller2017etst, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Political Behavior}, #>   NUMBER = {2}, #>   PAGES = {457--478}, #>   TITLE = {Economic Threats or Societal Turmoil? Understanding Preferences for Authoritarian Political Systems}, #>   VOLUME = {39}, #>   YEAR = {2017}}  #>   # Based on `stevepubs` configuration, filter on `YEAR` where # the publication year is 2017, 2018, 2019, 2020, or 2021. filter_refs(stevepubs, c(2017:2021), type = \"year\") #> @ARTICLE{curtismiller2021snp, #>   AUTHOR = {K. Amber Curtis and Steven V. Miller}, #>   JOURNAL = {European Union Politics}, #>   NUMBER = {2}, #>   PAGES = {202--26}, #>   TITLE = {A (Supra)Nationalist Personality? The Big Five's Effects on Political-Territorial Identification}, #>   VOLUME = {22}, #>   YEAR = {2021}}  #>  #> @ARTICLE{gibleretal2020icm, #>   AUTHOR = {Douglas M. Gibler and Steven V. Miller and Erin K. Little}, #>   JOURNAL = {International Studies Quarterly}, #>   NUMBER = {2}, #>   PAGES = {476--479}, #>   TITLE = {The Importance of Correct Measurement}, #>   VOLUME = {64}, #>   YEAR = {2020}}  #>  #> @ARTICLE{miller2017etjc, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Political Research Quarterly}, #>   NUMBER = {4}, #>   PAGES = {790--802}, #>   TITLE = {The Effect of Terrorism on Judicial Confidence}, #>   VOLUME = {70}, #>   YEAR = {2017}}  #>  #> @ARTICLE{miller2017etst, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Political Behavior}, #>   NUMBER = {2}, #>   PAGES = {457--478}, #>   TITLE = {Economic Threats or Societal Turmoil? Understanding Preferences for Authoritarian Political Systems}, #>   VOLUME = {39}, #>   YEAR = {2017}}  #>  #> @ARTICLE{miller2017ieea, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Conflict Management and Peace Science}, #>   NUMBER = {5}, #>   PAGES = {526--545}, #>   TITLE = {Individual-Level Expectations of Executive Authority under Territorial Threat}, #>   VOLUME = {34}, #>   YEAR = {2017}}  #>  #> @ARTICLE{miller2018etttc, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Peace Economics, Peace Science and Public Policy}, #>   NUMBER = {1}, #>   TITLE = {External Territorial Threats and Tolerance of Corruption: A Private/Government Distinction}, #>   VOLUME = {24}, #>   YEAR = {2018}, #>   DOI = {10.1515/peps-2017-0043}}  #>  #> @ARTICLE{miller2019wata, #>   AUTHOR = {Steven V. Miller}, #>   JOURNAL = {Social Science Quarterly}, #>   NUMBER = {1}, #>   PAGES = {272--288}, #>   TITLE = {What Americans Think About Gun Control: Evidence from the General Social Survey, 1972-2016}, #>   VOLUME = {100}, #>   YEAR = {2019}}  #>  #> @ARTICLE{millerdavis2020ewsp, #>   AUTHOR = {Steven V. Miller and Nicholas T. Davis}, #>   JOURNAL = {Journal of Race, Ethnicity, and Politics}, #>   NUMBER = {2}, #>   PAGES = {334--351}, #>   TITLE = {The Effect of White Social Prejudice on Support for American Democracy}, #>   VOLUME = {6}, #>   YEAR = {2021}}  #>  #> @INCOLLECTION{milleretal2020gtc, #>   AUTHOR = {Steven V. Miller and Jaroslav Tir and John A. Vasquez}, #>   BOOKTITLE = {Oxford Research Encyclopedia of International Studies}, #>   PUBLISHER = {Oxford University Press}, #>   TITLE = {Geography, Territory, and Conflict}, #>   YEAR = {2020}, #>   DOI = {10.1093/acrefore/9780190846626.013.320}}  #>"},{"path":"http://svmiller.com/reference/fra_leaderyears.html","id":null,"dir":"Reference","previous_headings":"","what":"French Leader-Years, 1874-2015 — fra_leaderyears","title":"French Leader-Years, 1874-2015 — fra_leaderyears","text":"data generated peacesciencer French leader-years 1874 2015. going use data stress-testing calculation -called \"peace spells\" data decidedly imbalanced, .","code":""},{"path":"http://svmiller.com/reference/fra_leaderyears.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"French Leader-Years, 1874-2015 — fra_leaderyears","text":"","code":"fra_leaderyears"},{"path":"http://svmiller.com/reference/fra_leaderyears.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"French Leader-Years, 1874-2015 — fra_leaderyears","text":"data frame 255 observations following 10 variables. obsid unique observation ID Archigos data ccode Correlates War state code France (220) leader name---typically last name---leader year observation year leader startdate start date leader's period office enddate end date leader's period office gmlmidongoing ongoing inter-state dispute leader? gmlmidonset new inter-state dispute onset leader? gmlmidongoing_init ongoing inter-state dispute leader leader initiated? gmlmidonset_init new inter-state dispute onset leader leader initiated?","code":""},{"path":"http://svmiller.com/reference/fra_leaderyears.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"French Leader-Years, 1874-2015 — fra_leaderyears","text":"Data generated development version (scheduled release v. 0.7) peacesciencer. Conflict data come GML MID data (v. 2.2.1). Leader data come Archigos (v. 4.1).","code":""},{"path":"http://svmiller.com/reference/fra_leaderyears.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"French Leader-Years, 1874-2015 — fra_leaderyears","text":"Goemans, Henk E., Kristian Skrede Gleditsch, Giacomo Chiozza. 2009. \"Introducing Archigos: Dataset Political Leaders\" Journal Peace Research 46(2): 269--83. Gibler, Douglas M., Steven V. Miller, Erin K. Little. 2016. “Analysis Militarized Interstate Dispute (MID) Dataset, 1816-2001.” International Studies Quarterly 60(4): 719-730.","code":""},{"path":"http://svmiller.com/reference/get_sims.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Simulations from a Model Object (with New Data) — get_sims","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"get_sims() function simulate quantities interest multivariate normal distribution \"new data\" regression model.","code":""},{"path":"http://svmiller.com/reference/get_sims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"","code":"get_sims(model, newdata, nsim, seed)"},{"path":"http://svmiller.com/reference/get_sims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"model model object newdata data frame quantities interest simulated nsim Number simulations run seed optional seed set","code":""},{"path":"http://svmiller.com/reference/get_sims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"get_sims() returns data frame (tibble) quantities interest identifying information particular simulation number.","code":""},{"path":"http://svmiller.com/reference/get_sims.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"() flexible function takes merMod object (estimated lme4, blme, etc.) lm glm object generates quantities interest paired new data observations interest. note: really tested function linear models, generalized linear models, mixed model equivalents. mixed models, approach offer support incorporation random effects random slopes. just fixed effects, typically people want anyway. Users want better incorporate random intercepts slope find support merTools package.","code":""},{"path":"http://svmiller.com/reference/get_sims.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/get_sims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Simulations from a Model Object (with New Data) — get_sims","text":"","code":"if (FALSE) { # Note: these models are dumb, but they illustrate how it works.  M1 <- lm(mpg ~ hp, mtcars) # Note: this function requires the DV to appear somewhere, anywhere in the \"new data\" newdat <- data.frame(mpg = 0,                      hp = c(mean(mtcars$hp) - sd(mtcars$hp),                             mean(mtcars$hp),                             mean(mtcars$hp) + sd(mtcars$hp)))  get_sims(M1, newdat, 100, 8675309)  # Note: this is likely a dumb model, but illustrates how it works. mtcars$mpgd <- ifelse(mtcars$mpg > 25, 1, 0)  M2 <- glm(mpgd ~ hp, mtcars, family=binomial(link=\"logit\"))  # Again: this function requires the DV to be somewhere, anywhere in the \"new data\" newdat$mpgd <- 0  # Note: the simulations are returned on their original \"link\". Here, that's a \"logit\" # You can adjust that accordingly. `plogis(y)` will convert those to probabilities. get_sims(M2, newdat, 100, 8675309)  library(lme4) M3 <- lmer(mpg ~ hp + (1 | cyl), mtcars)  # Random effects are not required here since we're passing over them. get_sims(M3, newdat, 100, 8675309) }"},{"path":"http://svmiller.com/reference/get_var_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a small data frame of the variable label and values. — get_var_info","title":"Get a small data frame of the variable label and values. — get_var_info","text":"get_var_info() allows peek labelled data, extracting given column's variable labels. intended use mostly \"peeking\" purpose recoding column's absence codebook form documentation. gvi() shortcut function.","code":""},{"path":"http://svmiller.com/reference/get_var_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a small data frame of the variable label and values. — get_var_info","text":"","code":"get_var_info(.data, x)  gvi(...)"},{"path":"http://svmiller.com/reference/get_var_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a small data frame of the variable label and values. — get_var_info","text":".data data frame x column within data frame ... optional, make shortcut (gvi) work","code":""},{"path":"http://svmiller.com/reference/get_var_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a small data frame of the variable label and values. — get_var_info","text":"column data frame labelled, function returns message communicating absence labels. column data frame labelled, function returns small data frame communicating var_label() output (var), (often always) numeric \"code\" coinciding label (code), \"label\" attached (label).","code":""},{"path":"http://svmiller.com/reference/get_var_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a small data frame of the variable label and values. — get_var_info","text":"function leans var_label() val_label() labelled package, dependency package. function designed used \"pipe.\"","code":""},{"path":"http://svmiller.com/reference/get_var_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a small data frame of the variable label and values. — get_var_info","text":"","code":"library(tibble) library(dplyr) library(magrittr)  ess9_labelled %>% get_var_info(netusoft) # works, as intended #>                       var code              label #> 1 Internet use, how often    1              Never #> 2 Internet use, how often    2  Only occasionally #> 3 Internet use, how often    3 A few times a week #> 4 Internet use, how often    4          Most days #> 5 Internet use, how often    5          Every day #> 6 Internet use, how often    7            Refusal #> 7 Internet use, how often    8         Don't know #> 8 Internet use, how often    9          No answer ess9_labelled %>% get_var_info(cntry) # works, as intended #>        var code          label #> 1  Country   GB United Kingdom #> 2  Country   BE        Belgium #> 3  Country   DE        Germany #> 4  Country   EE        Estonia #> 5  Country   IE        Ireland #> 6  Country   BG       Bulgaria #> 7  Country   CH    Switzerland #> 8  Country   FI        Finland #> 9  Country   SI       Slovenia #> 10 Country   NL    Netherlands #> 11 Country   PL         Poland #> 12 Country   NO         Norway #> 13 Country   FR         France #> 14 Country   RS         Serbia #> 15 Country   AT        Austria #> 16 Country   IT          Italy #> 17 Country   HU        Hungary #> 18 Country   CY         Cyprus #> 19 Country   CZ        Czechia ess9_labelled %>% get_var_info(ess9round) # barks at you; data are not labelled #> get_var_info() requires a labelled column. Otherwise, you get this message."},{"path":"http://svmiller.com/reference/ggplot-themes.html","id":null,"dir":"Reference","previous_headings":"","what":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","title":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","text":"theme_steve(), now stevethemes, preferred theme mine years ago. basically theme_bw() ggplot2 theme, tweaking things. moved theme_steve_web() things now, prominently website. theme incorporates \"Open Sans\" \"Titillium Web\" fonts like much. post_bg() legacy function changing backgrounds plots better match background color website. theme_steve_ms() LaTeX manuscripts use cochineal font package. theme_steve_font() purpose, allowing supply font.","code":""},{"path":"http://svmiller.com/reference/ggplot-themes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","text":"","code":"theme_steve_web(...)  post_bg(...)  theme_steve_ms(axis_face = \"italic\", caption_face = \"italic\", ...)  theme_steve_font(axis_face = \"italic\", caption_face = \"italic\", font, ...)"},{"path":"http://svmiller.com/reference/ggplot-themes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","text":"... optional stuff, put anything . need . axis_face font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). Optional, defaults \"italic\". Applicable theme_steve_ms(). caption_face font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). Optional, defaults \"italic\". Applicable theme_steve_ms(). font font family plot. Applicable theme_steve_font().","code":""},{"path":"http://svmiller.com/reference/ggplot-themes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","text":"post_bg() takes ggplot2 plot changes background color \"#fdfdfd\". theme_steve_web() extends theme_steve() add custom fonts, notably \"Open Sans\" \"Titillium Web\". cases, functions take ggplot2 plot return another ggplot2 plot, cosmetic changes. theme_steve_ms() takes ggplot2 plot overlays \"Crimson Pro\" fonts, basis cochineal font package LaTeX. theme_steve_font() takes ggplot2 plot overlays font choosing.","code":""},{"path":"http://svmiller.com/reference/ggplot-themes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","text":"theme_steve_web() theme_steve_ms() explicitly depend fonts installed end. ultimately optional use functions imply . functions remain understood \"legacy\" functions longer maintained updated. stevethemes package ggplot2 elements going forward.","code":""},{"path":[]},{"path":"http://svmiller.com/reference/ggplot-themes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legacy functions for Steve's Preferred ggplot2 Themes and Assorted Stuff — theme_steve_web","text":"","code":"if (FALSE) { library(ggplot2)   ggplot(mtcars, aes(x = mpg, y = hp)) +   geom_point() + theme_steve_web() +   labs(title = \"A ggplot2 Plot from the Motor Trend Car Road Tests Data\",   subtitle = \"Notice the prettier fonts, if you have them.\",   caption = \"Data: ?mtcars in {datasets} in base R.\")  ggplot(mtcars, aes(x = mpg, y = hp)) +   geom_point() + theme_steve_web() +   post_bg() +   labs(title = \"A ggplot2 Plot from the Motor Trend Car Road Tests Data\",   subtitle = \"Notice the slight change in background color\",   caption = \"Data: ?mtcars in {datasets} in base R.\")  ggplot(mtcars, aes(x = mpg, y = hp)) +   geom_point() + theme_steve_ms() +   labs(title = \"A ggplot2 Plot from the Motor Trend Car Road Tests Data\",   subtitle = \"Notice the fonts will match the 'cochineal' font package in LaTeX.\",   caption = \"Data: ?mtcars in {datasets} in base R.\")  ggplot(mtcars, aes(x = mpg, y = hp)) +   geom_point() + theme_steve_font(font = \"Comic Sans MS\") +   labs(title = \"A ggplot2 Plot from the Motor Trend Car Road Tests Data\",   subtitle = \"Notice that this will look ridiculous\",   caption = \"Data: ?mtcars in {datasets} in base R.\") }"},{"path":"http://svmiller.com/reference/gmy_dyadyears.html","id":null,"dir":"Reference","previous_headings":"","what":"German Dyad-Years, 1816-2020 — gmy_dyadyears","title":"German Dyad-Years, 1816-2020 — gmy_dyadyears","text":"data generated peacesciencer German (Prussian) dyad-years 1816 2020. going useful stress-testing \"peace spell\" calculations may look like huge gap years. Correlates War context, Germany disappears international system 1945 1990. 'll also serve nice test making sure spell calculations misbehave context missing data. application, data disputes 2011 2020, dyad-years include 2011 2020.","code":""},{"path":"http://svmiller.com/reference/gmy_dyadyears.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Dyad-Years, 1816-2020 — gmy_dyadyears","text":"","code":"gmy_dyadyears"},{"path":"http://svmiller.com/reference/gmy_dyadyears.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Dyad-Years, 1816-2020 — gmy_dyadyears","text":"data frame 11174 observations following 6 variables. dyad unique identifier dyad ccode1 Correlates War state code Germany (255) ccode2 Correlates War state code state dyad year observation year dyad gmlmidongoing ongoing inter-state dispute dyad-year? gmlmidonset new inter-state dispute onset dyad-year","code":""},{"path":"http://svmiller.com/reference/gmy_dyadyears.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"German Dyad-Years, 1816-2020 — gmy_dyadyears","text":"Data generated development version (scheduled release v. 0.7) peacesciencer. Conflict data come GML MID data (v. 2.2.1).","code":""},{"path":"http://svmiller.com/reference/gmy_dyadyears.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"German Dyad-Years, 1816-2020 — gmy_dyadyears","text":"Gibler, Douglas M., Steven V. Miller, Erin K. Little. 2016. “Analysis Militarized Interstate Dispute (MID) Dataset, 1816-2001.” International Studies Quarterly 60(4): 719-730.","code":""},{"path":"http://svmiller.com/reference/jenny.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Only Reproducible Seed That Matters — jenny","title":"Set the Only Reproducible Seed That Matters — jenny","text":"jenny() sets reproducible seed 8675309. reproducible seed use.","code":""},{"path":"http://svmiller.com/reference/jenny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Only Reproducible Seed That Matters — jenny","text":"","code":"jenny(x = 8675309)"},{"path":"http://svmiller.com/reference/jenny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Only Reproducible Seed That Matters — jenny","text":"x vector","code":""},{"path":"http://svmiller.com/reference/jenny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Only Reproducible Seed That Matters — jenny","text":"x specified 8675309, function sets reproducible seed 8675309 returns nice message congratulating . x 8675309, function sets reproducible seed gently admonishes wasting time.","code":""},{"path":"http://svmiller.com/reference/jenny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the Only Reproducible Seed That Matters — jenny","text":"jenny() comes additional perks emo package installed. package optional.","code":""},{"path":"http://svmiller.com/reference/jenny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the Only Reproducible Seed That Matters — jenny","text":"","code":"jenny() # will work and reward you for it #> Jenny, I got your number... jenny(12345) # will not work and will result in a stern message #> Why are you using this function with some other reproducible seed..."},{"path":"http://svmiller.com/reference/linloess_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"linloess_plot() provides visual diagnostic linearity assumption OLS model. Provided OLS model fit lm() base R, function extracts model frame creates faceted scatterplot. facet, linear smoother LOESS smoother estimated points. Users run function can assess just much linear smoother LOESS smoother diverge. diverge, user can determine much OLS model good fit specified. plot also point potential outliers may need consideration.","code":""},{"path":"http://svmiller.com/reference/linloess_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"","code":"linloess_plot(mod, resid = FALSE, se = TRUE, ...)"},{"path":"http://svmiller.com/reference/linloess_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"mod fitted OLS model resid logical, defaults FALSE. FALSE, y-axis plots raw values dependent variable. TRUE, y-axis model's residuals. Either work well matter hand, provided treat output illustrative suggestive. se logical, defaults TRUE. TRUE, gives standard error estimates assorted smoothers. ... optional parameters, passed scatterplot (geom_point()) component function. Useful want make smoothers legible points.","code":""},{"path":"http://svmiller.com/reference/linloess_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"linloess_plot() returns faceted scatterplot ggplot2 object. linear smoother solid blue (blue standard error bands) LOESS smoother dashed black line (gray/default standard error bands). can add cosmetic features fact. function may spit warnings related LOESS smoother, depending data. think fine extent really just visual aid informal diagnostic linearity assumption.","code":""},{"path":"http://svmiller.com/reference/linloess_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"function makes implicit assumption variable regression formula name \".y\" \".resid\". may interest (sake rudimentary diagnostic checks) disable standard error bands particularly ill-fitting linear models.","code":""},{"path":"http://svmiller.com/reference/linloess_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/linloess_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Linear Smoother to LOESS Smoother for Your OLS Model — linloess_plot","text":"","code":"M1 <- lm(mpg ~ ., data=mtcars)  linloess_plot(M1) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at 4 #> Warning: neighborhood radius 2 #> Warning: reciprocal condition number  1.8444e-17 #> Warning: pseudoinverse used at 4 #> Warning: neighborhood radius 2 #> Warning: reciprocal condition number  1.8444e-17 #> Warning: pseudoinverse used at 3.98 #> Warning: neighborhood radius 4.02 #> Warning: reciprocal condition number  6.1406e-17 #> Warning: There are other near singularities as well. 16.16 #> Warning: pseudoinverse used at 3.98 #> Warning: neighborhood radius 4.02 #> Warning: reciprocal condition number  6.1406e-17 #> Warning: There are other near singularities as well. 16.16 #> Warning: pseudoinverse used at 2.99 #> Warning: neighborhood radius 1.01 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 4.0401 #> Warning: pseudoinverse used at 2.99 #> Warning: neighborhood radius 1.01 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 4.0401 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01  linloess_plot(M1, color=\"black\", pch=21) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at 4 #> Warning: neighborhood radius 2 #> Warning: reciprocal condition number  1.8444e-17 #> Warning: pseudoinverse used at 4 #> Warning: neighborhood radius 2 #> Warning: reciprocal condition number  1.8444e-17 #> Warning: pseudoinverse used at 3.98 #> Warning: neighborhood radius 4.02 #> Warning: reciprocal condition number  6.1406e-17 #> Warning: There are other near singularities as well. 16.16 #> Warning: pseudoinverse used at 3.98 #> Warning: neighborhood radius 4.02 #> Warning: reciprocal condition number  6.1406e-17 #> Warning: There are other near singularities as well. 16.16 #> Warning: pseudoinverse used at 2.99 #> Warning: neighborhood radius 1.01 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 4.0401 #> Warning: pseudoinverse used at 2.99 #> Warning: neighborhood radius 1.01 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 4.0401 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01 #> Warning: pseudoinverse used at -0.005 #> Warning: neighborhood radius 1.005 #> Warning: reciprocal condition number  0 #> Warning: There are other near singularities as well. 1.01"},{"path":"http://svmiller.com/reference/make_perclab.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","title":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","text":"make_perclab() takes proportion, multiplies 100, optionally rounds , pastes percentage sign next .","code":""},{"path":"http://svmiller.com/reference/make_perclab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","text":"","code":"make_perclab(x, d = 2)"},{"path":"http://svmiller.com/reference/make_perclab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","text":"x numeric vector d digits round. Defaults 2.","code":""},{"path":"http://svmiller.com/reference/make_perclab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","text":"function takes proportion, multiplies 100, (optionally) rounds set decimal point, pastes percentage sign next .","code":""},{"path":"http://svmiller.com/reference/make_perclab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","text":"function useful modeling proportions something like bar chart (proportions flexible) want label bar percentage. function mostly cosmetic.","code":""},{"path":"http://svmiller.com/reference/make_perclab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Percentage Label for Proportion and Add Percentage Sign — make_perclab","text":"","code":"x <- runif(100) make_perclab(x) #>   [1] \"15.95%\" \"47.82%\" \"76.48%\" \"76.97%\" \"26.85%\" \"67.3%\"  \"97.88%\" \"84.63%\" #>   [9] \"85.67%\" \"44.52%\" \"83.82%\" \"58.33%\" \"51.1%\"  \"26.02%\" \"74.95%\" \"91.82%\" #>  [17] \"71.64%\" \"20.62%\" \"81.69%\" \"71.59%\" \"6.06%\"  \"84.71%\" \"84.68%\" \"33.26%\" #>  [25] \"55.97%\" \"66.95%\" \"25.46%\" \"7.92%\"  \"16%\"    \"81.64%\" \"97.57%\" \"84.21%\" #>  [33] \"32.93%\" \"59.26%\" \"18.39%\" \"45.15%\" \"44.02%\" \"35.81%\" \"20.39%\" \"72.15%\" #>  [41] \"97.65%\" \"94.42%\" \"51.75%\" \"84.29%\" \"34.3%\"  \"3.89%\"  \"31.81%\" \"13.59%\" #>  [49] \"33.91%\" \"76.23%\" \"75.28%\" \"43.36%\" \"75.5%\"  \"40.68%\" \"70.32%\" \"31.16%\" #>  [57] \"42.62%\" \"22.76%\" \"64.91%\" \"14.96%\" \"64.66%\" \"27.46%\" \"87.57%\" \"79.56%\" #>  [65] \"94.24%\" \"78.67%\" \"72.19%\" \"86.53%\" \"26.93%\" \"0.19%\"  \"40.95%\" \"74.39%\" #>  [73] \"52.55%\" \"86.38%\" \"37.7%\"  \"82.4%\"  \"40.19%\" \"37.85%\" \"43.89%\" \"43.71%\" #>  [81] \"26.26%\" \"44.05%\" \"49.85%\" \"85.97%\" \"51.82%\" \"11.51%\" \"75.3%\"  \"16.19%\" #>  [89] \"40.05%\" \"18.23%\" \"44%\"    \"74.73%\" \"19.08%\" \"95.5%\"  \"2.4%\"   \"23.09%\" #>  [97] \"59.39%\" \"23.55%\" \"51.44%\" \"64.3%\""},{"path":"http://svmiller.com/reference/make_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","title":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","text":"make_scale() rescale vector user-defined minimum maximum.","code":""},{"path":"http://svmiller.com/reference/make_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","text":"","code":"make_scale(x, minim, maxim)"},{"path":"http://svmiller.com/reference/make_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","text":"x numeric vector minim desired numeric minimum maxim desired numeric maximum","code":""},{"path":"http://svmiller.com/reference/make_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","text":"function takes numeric vector returns rescaled version observed (desired) minimum, observed (desired) maximum, rescaled values extremes.","code":""},{"path":"http://svmiller.com/reference/make_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","text":"function useful wanted kind minimum-maximum rescaling variable given scale, prominently rescaling minimum 0 maximum 1 (thinking ahead regression). function flexible enough minimum maximum.","code":""},{"path":"http://svmiller.com/reference/make_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rescale Vector to Arbitrary Minimum and Maximum — make_scale","text":"","code":"x <- runif(100, 1, 100) make_scale(x, 2, 5) # works #>   [1] 3.691435 2.107502 3.670319 2.808087 2.615673 2.354313 2.035948 3.128916 #>   [9] 3.787428 2.048508 2.514866 3.244003 2.778355 4.685685 4.348520 3.125769 #>  [17] 4.614064 3.065012 3.651240 4.612916 4.896847 2.237435 4.184424 3.979520 #>  [25] 3.335907 2.936188 2.354956 2.975470 3.351972 4.891430 4.500238 3.191101 #>  [33] 3.957162 4.667745 2.537577 2.117305 2.272307 4.773745 3.803732 4.907440 #>  [41] 3.106993 2.655200 4.768845 3.331101 3.252278 4.399584 2.000000 2.862249 #>  [49] 2.534993 4.341187 4.848127 2.970642 2.520859 2.757290 2.593809 3.852103 #>  [57] 4.917708 2.434919 2.254518 2.785304 3.631706 2.729471 4.742084 4.935707 #>  [65] 4.232052 3.276069 3.551173 3.827683 4.342697 4.850768 2.397893 2.485624 #>  [73] 4.386657 4.911031 4.597821 2.292243 3.615681 4.947668 2.276199 2.769858 #>  [81] 3.763996 4.694063 4.213002 4.505863 2.531546 4.016657 2.649579 3.645823 #>  [89] 4.208062 2.575016 4.158535 4.681841 4.639911 3.903428 3.686708 2.344965 #>  [97] 3.054974 3.248985 5.000000 4.889466 make_scale(x, 5, 2) # results in message #> The desired minimum should not be greater than or equal to the desired maximum. Try again. make_scale(x, 0, 1) # probably why you're using this. #>   [1] 0.56381179 0.03583408 0.55677310 0.26936218 0.20522434 0.11810428 #>   [7] 0.01198278 0.37630528 0.59580925 0.01616923 0.17162203 0.41466759 #>  [13] 0.25945173 0.89522844 0.78283997 0.37525631 0.87135473 0.35500402 #>  [19] 0.55041347 0.87097216 0.96561569 0.07914503 0.72814125 0.65983986 #>  [25] 0.44530222 0.31206271 0.11831883 0.32515659 0.45065717 0.96380997 #>  [31] 0.83341280 0.39703383 0.65238741 0.88924841 0.17919234 0.03910175 #>  [37] 0.09076887 0.92458181 0.60124387 0.96914665 0.36899770 0.21839989 #>  [43] 0.92294842 0.44370037 0.41742612 0.79986144 0.00000000 0.28741634 #>  [49] 0.17833088 0.78039566 0.94937583 0.32354748 0.17361974 0.25243013 #>  [55] 0.19793622 0.61736765 0.97256942 0.14497303 0.08483947 0.26176803 #>  [61] 0.54390194 0.24315704 0.91402786 0.97856894 0.74401739 0.42535642 #>  [67] 0.51705782 0.60922758 0.78089907 0.95025615 0.13263085 0.16187452 #>  [73] 0.79555246 0.97034368 0.86594029 0.09741447 0.53856031 0.98255591 #>  [79] 0.09206622 0.25661945 0.58799873 0.89802115 0.73766743 0.83528771 #>  [85] 0.17718193 0.67221891 0.21652650 0.54860782 0.73602058 0.19167198 #>  [91] 0.71951174 0.89394686 0.87997035 0.63447593 0.56223588 0.11498833 #>  [97] 0.35165797 0.41632849 1.00000000 0.96315523"},{"path":"http://svmiller.com/reference/map_quiz.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Quiz Wrong Guesses Across Five Intro to IR Courses — map_quiz","title":"Map Quiz Wrong Guesses Across Five Intro to IR Courses — map_quiz","text":"simple data set records every wrong guess map quiz assignments gave intro IR class Clemson University across five semesters.","code":""},{"path":"http://svmiller.com/reference/map_quiz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Quiz Wrong Guesses Across Five Intro to IR Courses — map_quiz","text":"","code":"map_quiz"},{"path":"http://svmiller.com/reference/map_quiz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Map Quiz Wrong Guesses Across Five Intro to IR Courses — map_quiz","text":"data frame 1772 observations following 8 variables. class ordered factor semester wrong guess recorded student. Levels include \"Spring 2018\", \"Fall 2018\", \"Spring 2019\", \"Fall 2019\", \"Spring 2020.\" students number students class taking map quiz. region region map country located. Values include \"Europe\", \"Africa\", \"Asia\", \"Latin America\", \"MENA.\" \"MENA\" short \"Middle East North Africa.\" country country asked student correctly identify guess country actual state incorrectly guessed student ccode1 Correlates War state code state wanted student identify country. ccode2 Correlates War state code state wrong guess state guess mindist minimum distance (kilometers) country guess","code":""},{"path":"http://svmiller.com/reference/map_quiz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map Quiz Wrong Guesses Across Five Intro to IR Courses — map_quiz","text":"Students can always make guess wrong, explains NAs data. Students given five separate numbered maps prompted identify 10 countries . maps never changed across five semesters, prompts. Use data see fit. Obviously, FERPA considerations mean share anything else potential value .","code":""},{"path":"http://svmiller.com/reference/mround.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply a Number by 100 and Round It (By Default: 2) — mround","title":"Multiply a Number by 100 and Round It (By Default: 2) — mround","text":"mround() convenience function wrote annotating bar charts make. Assuming proportion variable, mround() multiply value 100 round presentation. default, rounds two. user can adjust .","code":""},{"path":"http://svmiller.com/reference/mround.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply a Number by 100 and Round It (By Default: 2) — mround","text":"","code":"mround(x, d = 2)"},{"path":"http://svmiller.com/reference/mround.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply a Number by 100 and Round It (By Default: 2) — mround","text":"x numeric vector d number decimal points user wants round. set, rounds two decimal points.","code":""},{"path":"http://svmiller.com/reference/mround.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply a Number by 100 and Round It (By Default: 2) — mround","text":"function takes numeric vector, multiplies 100, rounds (two digits default), returns user.","code":""},{"path":"http://svmiller.com/reference/mround.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiply a Number by 100 and Round It (By Default: 2) — mround","text":"sister function make_perclab() package. , however, add percentage sign.","code":""},{"path":"http://svmiller.com/reference/mround.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply a Number by 100 and Round It (By Default: 2) — mround","text":"","code":"x <- runif(100) mround(x) #>   [1] 77.17 86.70  8.91 30.97 62.94 93.54 49.49 18.95 32.14 32.52 58.12 84.82 #>  [13] 67.87 52.93 22.46 68.72 14.33 24.87 39.63 61.16  4.70 34.00 60.88  5.18 #>  [25] 29.85 34.66 87.61 41.54 76.29 22.50 66.38 40.79 41.30 67.60 95.44 27.72 #>  [37] 45.55 16.41 15.38  7.23 93.26 31.99 24.51 53.31 91.62 22.81 12.14 34.06 #>  [49] 61.89 85.55 65.54 60.79 49.81 65.56 88.59 26.24 72.44 22.17 31.03 15.95 #>  [61] 74.47 83.76 77.94 75.31 23.87 59.91 24.03 64.50 80.73 80.78 31.72 34.27 #>  [73] 47.95  3.81 51.50  3.64 47.21  2.44 31.31 72.60 24.25 95.20  4.47 57.24 #>  [85] 83.92 96.72 16.90 25.97 30.70 73.46 43.82 85.82 87.88 26.51 70.31 30.54 #>  [97] 90.63  6.73 60.41 15.60 mround(x, 2) # same as above #>   [1] 77.17 86.70  8.91 30.97 62.94 93.54 49.49 18.95 32.14 32.52 58.12 84.82 #>  [13] 67.87 52.93 22.46 68.72 14.33 24.87 39.63 61.16  4.70 34.00 60.88  5.18 #>  [25] 29.85 34.66 87.61 41.54 76.29 22.50 66.38 40.79 41.30 67.60 95.44 27.72 #>  [37] 45.55 16.41 15.38  7.23 93.26 31.99 24.51 53.31 91.62 22.81 12.14 34.06 #>  [49] 61.89 85.55 65.54 60.79 49.81 65.56 88.59 26.24 72.44 22.17 31.03 15.95 #>  [61] 74.47 83.76 77.94 75.31 23.87 59.91 24.03 64.50 80.73 80.78 31.72 34.27 #>  [73] 47.95  3.81 51.50  3.64 47.21  2.44 31.31 72.60 24.25 95.20  4.47 57.24 #>  [85] 83.92 96.72 16.90 25.97 30.70 73.46 43.82 85.82 87.88 26.51 70.31 30.54 #>  [97] 90.63  6.73 60.41 15.60 mround(x, 3) #>   [1] 77.172 86.698  8.905 30.967 62.935 93.542 49.492 18.947 32.144 32.524 #>  [11] 58.119 84.819 67.867 52.925 22.461 68.724 14.332 24.873 39.633 61.155 #>  [21]  4.699 33.996 60.877  5.179 29.851 34.662 87.609 41.538 76.293 22.500 #>  [31] 66.381 40.790 41.301 67.601 95.436 27.716 45.554 16.414 15.384  7.225 #>  [41] 93.260 31.993 24.513 53.315 91.617 22.808 12.136 34.064 61.887 85.549 #>  [51] 65.538 60.786 49.807 65.555 88.587 26.241 72.441 22.170 31.025 15.948 #>  [61] 74.472 83.756 77.942 75.306 23.872 59.912 24.030 64.500 80.728 80.779 #>  [71] 31.717 34.270 47.949  3.805 51.502  3.644 47.212  2.442 31.313 72.599 #>  [81] 24.251 95.197  4.468 57.236 83.924 96.723 16.904 25.972 30.699 73.460 #>  [91] 43.823 85.825 87.883 26.506 70.314 30.537 90.630  6.727 60.409 15.596"},{"path":"http://svmiller.com/reference/nin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Non-Matching Elements — %nin%","title":"Find Non-Matching Elements — %nin%","text":"%nin% finds non-matching elements given vector. negation %%.","code":""},{"path":"http://svmiller.com/reference/nin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Non-Matching Elements — %nin%","text":"","code":"a %nin% b"},{"path":"http://svmiller.com/reference/nin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Non-Matching Elements — %nin%","text":"vector (character, factor, numeric) b vector (character, factor, numeric)","code":""},{"path":"http://svmiller.com/reference/nin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Non-Matching Elements — %nin%","text":"%nin% finds non-matching elements returns one two things, depending use. two simple vectors, report matches . comparing vector within data frame, effect reporting rows data frame match supplied (second) vector.","code":""},{"path":"http://svmiller.com/reference/nin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Non-Matching Elements — %nin%","text":"simple negation %%. use mostly columns data frame.","code":""},{"path":"http://svmiller.com/reference/nin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Non-Matching Elements — %nin%","text":"","code":"library(tibble) library(dplyr)  # Watch this subset stuff  dat <- tibble(x = seq(1:10), d = rnorm(10)) filter(dat, x %nin% c(3, 6, 9)) #> # A tibble: 7 × 2 #>       x      d #>   <int>  <dbl> #> 1     1 -0.319 #> 2     2  0.915 #> 3     4 -1.10  #> 4     5 -0.605 #> 5     7 -2.09  #> 6     8 -0.934 #> 7    10 -0.398"},{"path":"http://svmiller.com/reference/normal_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Make and annotate a normal distribution with ggplot2 — normal_dist","title":"Make and annotate a normal distribution with ggplot2 — normal_dist","text":"normal_dist() convenience function making plot normal distribution annotated areas underneath normal curve.","code":""},{"path":"http://svmiller.com/reference/normal_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make and annotate a normal distribution with ggplot2 — normal_dist","text":"","code":"normal_dist(curvecolor, fillcolor, fontfamily)"},{"path":"http://svmiller.com/reference/normal_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make and annotate a normal distribution with ggplot2 — normal_dist","text":"curvecolor color curve . ggplot2-recognized format . fillcolor color area underneath curve . ggplot2-recognized format . fontfamily Font family labeling areas underneath curve. OPTIONAL. can omit like.","code":""},{"path":"http://svmiller.com/reference/normal_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make and annotate a normal distribution with ggplot2 — normal_dist","text":"function returns fancy plot normal distribution annotated areas underneath hood. Note whatever color supplied fillcolor automatically lightened areas center curve.","code":""},{"path":"http://svmiller.com/reference/normal_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make and annotate a normal distribution with ggplot2 — normal_dist","text":"normal distribution standard normal distribution mean 0 standard deviation 1.","code":""},{"path":"http://svmiller.com/reference/normal_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make and annotate a normal distribution with ggplot2 — normal_dist","text":"","code":"library(stevemisc) normal_dist(\"blue\",\"red\")  normal_dist(\"purple\",\"orange\")"},{"path":"http://svmiller.com/reference/p_z.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the p-value you want to the z-value it actually is — p_z","title":"Convert the p-value you want to the z-value it actually is — p_z","text":"loathe statistical instruction privileges obtaining magical p-value reference area underneath standard normal curve, botch actual z-value corresponding magical p-value. simple function converts p-value want (typically .05, thanks R.. Fisher) z-value actually kind claims typically make inferential statistics. going inference wrong way, least get z-value right.","code":""},{"path":"http://svmiller.com/reference/p_z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the p-value you want to the z-value it actually is — p_z","text":"","code":"p_z(x, ts = TRUE)"},{"path":"http://svmiller.com/reference/p_z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the p-value you want to the z-value it actually is — p_z","text":"x numeric vector (one multiple) 0 1 ts logical, defaults TRUE. TRUE, returns two-sided critical z-value. FALSE, function returns one-sided critical z-value.","code":""},{"path":"http://svmiller.com/reference/p_z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the p-value you want to the z-value it actually is — p_z","text":"function takes numeric vector, corresponding p-value want, returns numeric vector coinciding z-value want standard normal distribution. example, z-value corresponding magic number .05 (conventional cutoff assessing statistical significance) 1.96, something like 1.959964 (rounding default six decimal points).","code":""},{"path":"http://svmiller.com/reference/p_z.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert the p-value you want to the z-value it actually is — p_z","text":"p_z() takes p-value interest converts , precision, z-value actually . function takes vector returns vector. function assumes something akin calculating confidence interval testing regression coefficient null hypothesis zero. means default output two-sided critical z-value. taught use two-sided z-values agnostic direction effect statistic interest, , frank, hilarious given research typically done.","code":""},{"path":"http://svmiller.com/reference/p_z.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the p-value you want to the z-value it actually is — p_z","text":"","code":"library(stevemisc)  p_z(.05) #> [1] 1.959964 p_z(c(.001, .01, .05, .1)) #> [1] 3.290527 2.575829 1.959964 1.644854 p_z(.05, ts=FALSE) #> [1] 1.644854 p_z(c(.001, .01, .05, .1), ts=FALSE) #> [1] 3.090232 2.326348 1.644854 1.281552"},{"path":"http://svmiller.com/reference/prepare_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","title":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","text":"prepare_refs last-minute formatting data frame created bib2df can formatted nicely various outputs.","code":""},{"path":"http://svmiller.com/reference/prepare_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","text":"","code":"prepare_refs(bib2df_refs, toformat = \"plain\")"},{"path":"http://svmiller.com/reference/prepare_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","text":"bib2df_refs data frame created bib2df toformat type output ultimately going want print_refs() . Default \"plain\".","code":""},{"path":"http://svmiller.com/reference/prepare_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","text":"print_refs()  last-minute formatting data frame created bib2df rendering R Markdown little easier less code-heavy.","code":""},{"path":"http://svmiller.com/reference/prepare_refs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","text":"function designed work generally absence various fields. Assume, example, data frame BOOK field. function uses one_of() wrapper work around . \"warning\" returned function message. function may expanded think use cases.","code":""},{"path":[]},{"path":"http://svmiller.com/reference/prepare_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare bib2df Data Frame for Formatting to Various Outputs — prepare_refs","text":"","code":"prepare_refs(stevepubs) #> Warning: Unknown columns: `BOOK` #> Warning: Unknown columns: `MAINTITLE` #> # A tibble: 19 × 12 #>    CATEGORY     BIBTEXKEY  AUTHOR BOOKTITLE JOURNAL NUMBER PAGES PUBLISHER TITLE #>    <chr>        <chr>      <list> <chr>     <chr>   <chr>  <chr> <chr>     <chr> #>  1 ARTICLE      millergib… <chr>  NA        *Confl… 3      261-… NA        \"Dem… #>  2 ARTICLE      giblereta… <chr>  NA        *Compa… 12     1655… NA        \"Ind… #>  3 ARTICLE      giblermil… <chr>  NA        *Socia… 5      1202… NA        \"Com… #>  4 ARTICLE      giblermil… <chr>  NA        *Journ… 2      258-… NA        \"Qui… #>  5 ARTICLE      miller201… <chr>  NA        *Journ… 6      677-… NA        \"Ter… #>  6 ARTICLE      giblermil… <chr>  NA        *Journ… 5      634-… NA        \"Ext… #>  7 ARTICLE      giblereta… <chr>  NA        *Inter… 4      719-… NA        \"An … #>  8 ARTICLE      miller201… <chr>  NA        *Polit… 2      457-… NA        \"Eco… #>  9 ARTICLE      miller201… <chr>  NA        *Confl… 5      526-… NA        \"Ind… #> 10 ARTICLE      miller201… <chr>  NA        *Polit… 4      790-… NA        \"The… #> 11 ARTICLE      miller201… <chr>  NA        *Peace… 1      NA    NA        \"Ext… #> 12 ARTICLE      miller201… <chr>  NA        *Socia… 1      272-… NA        \"Wha… #> 13 ARTICLE      giblereta… <chr>  NA        *Inter… 2      476-… NA        \"The… #> 14 INCOLLECTION millereta… <chr>  *Oxford … NA      NA     NA    Oxford U… \"Geo… #> 15 ARTICLE      millerdav… <chr>  NA        *Journ… 2      334-… NA        \"The… #> 16 ARTICLE      curtismil… <chr>  NA        *Europ… 2      202-… NA        \"A (… #> 17 ARTICLE      miller202… <chr>  NA        *The S… NA     NA    NA        \"Eco… #> 18 ARTICLE      peacescie… <chr>  NA        *Confl… NA     NA    NA        \"~{ … #> 19 ARTICLE      miller202… <chr>  NA        *Journ… NA     NA    NA        \"A R… #> # ℹ 3 more variables: VOLUME <chr>, YEAR <chr>, DOI <chr>"},{"path":"http://svmiller.com/reference/print_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print and Format .bib Entries as References — print_refs","title":"Print and Format .bib Entries as References — print_refs","text":"print_refs() convenience function found edited allow user print format .bib entries references. function useful want load .bib entry set entries print middle document R Markdown.","code":""},{"path":"http://svmiller.com/reference/print_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print and Format .bib Entries as References — print_refs","text":"","code":"print_refs(   bib,   csl = \"american-political-science-association.csl\",   toformat = \"markdown_strict\",   cslrepo = \"https://raw.githubusercontent.com/citation-style-language/styles/master\",   spit_out = TRUE,   delete_after = TRUE )"},{"path":"http://svmiller.com/reference/print_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print and Format .bib Entries as References — print_refs","text":"bib valid .bib entry csl CSL file, matching one available Github repository, user wants format references. Default \"american-political-science-association.csl\". toformat output wanted user. Default \"markdown_strict\". cslrepo directory CSL files. Defaults one Github. spit_out logical, defaults TRUE. TRUE, wraps (\"spits \") formatted citations writeLines() output console. FALSE, returns character vector. delete_after logical, defaults TRUE. TRUE, deletes CSL file done. FALSE, retains CSL (potential) future use.","code":""},{"path":"http://svmiller.com/reference/print_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print and Format .bib Entries as References — print_refs","text":"print_refs() takes .bib entry returns requested formatted reference references .","code":""},{"path":"http://svmiller.com/reference/print_refs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print and Format .bib Entries as References — print_refs","text":"print_refs() assumes active internet connection absence appropriate CSL file working directory. citation style language (CSL) file supplied user must match file massive Github repository CSL files. Users interested potential outputs read Pandoc (https://pandoc.org/MANUAL.html). Github repository CSL files available : https://github.com/citation-style-language/styles.","code":""},{"path":"http://svmiller.com/reference/print_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print and Format .bib Entries as References — print_refs","text":"","code":"# \\donttest{ example <- \"@Book{vasquez2009twp, Title = {The War Puzzle Revisited}, Author = {Vasquez, John A}, Publisher = {New York, NY: Cambridge University Press}, Year = {2009}}\"  print_refs(example) #> I'm going to assume this is a .bib entry... #> Downloading CSL from https://raw.githubusercontent.com/citation-style-language/styles/master/american-political-science-association.csl #> Vasquez, John A. 2009. *The War Puzzle Revisited*. New York, NY: #> Cambridge University Press. # }"},{"path":"http://svmiller.com/reference/ps_btscs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ","title":"Create ","text":"ps_btscs() allows create spells (\"peace years\" international conflict context) observations event. allow researcher better model temporal dependence binary time-series cross-section (\"BTSCS\") models. improvement sbtscs() (included package) ability flexibly work data lots NAs bracket observed event data. used peacesciencer package.","code":""},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ","text":"","code":"ps_btscs(data, event, tvar, csunit, pad_ts = FALSE)"},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ","text":"data data set working event event (0, 1) want spells peace years tvar time variable (e.g. year) csunit cross-sectional unit (likely dyad boilerplate international conflict stuff) pad_ts time-series filled panels unbalanced/gaps? Defaults FALSE.","code":""},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ","text":"ps_btscs() takes data frame returns data frame new variable named spell.","code":""},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create ","text":"function derived sbtscs(). See documentation information.","code":""},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create ","text":"Armstrong, Dave. 2016. ``DAMisc: Dave Armstrong's Miscellaneous Functions.'' R package version 1.4-3. Miller, Steven V. 2017. ``Quickly Create Peace Years BTSCS Models sbtscs stevemisc.'' http://svmiller.com/blog/2017/06/quickly-create-peace-years--btscs-models--stevemisc/","code":""},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create ","text":"David . Armstrong, Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/ps_btscs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ","text":"","code":"# \\donttest{ library(dplyr) library(stevemisc) data(usa_mids)  # notice: no quotes ps_btscs(usa_mids, midongoing, year, dyad) #> Joining with `by = join_by(dyad, year)` #> # A tibble: 14,586 × 7 #>       dyad ccode1 ccode2  year midongoing midonset spell #>      <dbl>  <dbl>  <dbl> <dbl>      <dbl>    <dbl> <dbl> #>  1 1002020      2     20  1920          0        0     0 #>  2 1002020      2     20  1921          0        0     1 #>  3 1002020      2     20  1922          0        0     2 #>  4 1002020      2     20  1923          0        0     3 #>  5 1002020      2     20  1924          0        0     4 #>  6 1002020      2     20  1925          0        0     5 #>  7 1002020      2     20  1926          0        0     6 #>  8 1002020      2     20  1927          0        0     7 #>  9 1002020      2     20  1928          0        0     8 #> 10 1002020      2     20  1929          0        0     9 #> # ℹ 14,576 more rows # }"},{"path":"http://svmiller.com/reference/ps_spells.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ","title":"Create ","text":"ps_spells() allows create spells (\"peace years\" international conflict context) observations event. allow researcher better model temporal dependence binary time-series cross-section (\"BTSCS\") models. function one three package, contents function partly ported add_duration() function spduration package. function, unlike two offer , works much better panels decidedly imbalanced.","code":""},{"path":"http://svmiller.com/reference/ps_spells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ","text":"","code":"ps_spells(data, event, tvar, csunit, time_type = \"year\", ongoing = FALSE)"},{"path":"http://svmiller.com/reference/ps_spells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ","text":"data data set working event event (0, 1) want spells tvar time variable (e.g. year) csunit cross-sectional unit (e.g. dyad leader) time_type type time-unit data? Right now, work years support months days forthcoming. anything argument just yet. ongoing TRUE, successive 1s considered ongoing events treated NA first 1. FALSE, successive 1s treated failures. Defaults FALSE.","code":""},{"path":"http://svmiller.com/reference/ps_spells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ","text":"ps_spells() takes data frame returns data frame new variable named spell.","code":""},{"path":"http://svmiller.com/reference/ps_spells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create ","text":"function derived add_duration()  spduration package. See documentation information. thank Andreas Beger blessing port parts .","code":""},{"path":"http://svmiller.com/reference/ps_spells.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create ","text":"Beger, Andreas, Daina Chiba, Daniel W. Hill, Jr, Nils W. Metternich, Shahryar Minhas Michael D. Ward. 2018. ``spduration: Split-Population Duration (Cure) Regression.'' R package version 0.17.1.","code":""},{"path":"http://svmiller.com/reference/ps_spells.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create ","text":"Andreas Beger, Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/ps_spells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ","text":"","code":"One <- ps_btscs(usa_mids, midongoing, year, dyad) #> Joining with `by = join_by(dyad, year)` Two <- ps_spells(usa_mids, midongoing, year, dyad) #> Joining with `by = join_by(orig_order)` identical(One, Two) #> [1] TRUE"},{"path":"http://svmiller.com/reference/r1sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale a vector by one standard deviation — r1sd","title":"Scale a vector by one standard deviation — r1sd","text":"r1sd allows rescale numeric vector ensuing output mean 0 standard deviation 1.","code":""},{"path":"http://svmiller.com/reference/r1sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale a vector by one standard deviation — r1sd","text":"","code":"r1sd(x, na = TRUE)"},{"path":"http://svmiller.com/reference/r1sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale a vector by one standard deviation — r1sd","text":"x numeric vector na NAs vector. Defaults TRUE (.e. passes missing observations)","code":""},{"path":"http://svmiller.com/reference/r1sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale a vector by one standard deviation — r1sd","text":"function returns numeric vector rescaled mean 0 standard deviation 1.","code":""},{"path":"http://svmiller.com/reference/r1sd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale a vector by one standard deviation — r1sd","text":"convenience function since default rescale() function additional weirdness welcome use cases. default, na.rm set TRUE.","code":""},{"path":"http://svmiller.com/reference/r1sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale a vector by one standard deviation — r1sd","text":"","code":"x <- rnorm(100) r1sd(x) #>   [1]  0.8589857352  0.6882792081 -0.3820161132 -0.2185607108 -2.3581866933 #>   [6] -1.1186076412 -0.9259636957  0.3993068214 -0.9705208235  0.9448918531 #>  [11] -1.9134339921  0.5798526209  0.6713547170  0.2153457412  1.3869096436 #>  [16]  0.3956947758 -0.4787230015  0.4141902533 -0.8131107521 -0.9124984890 #>  [21]  1.7734287396  1.3392256447  0.1729591211 -1.4489497087 -0.0413043116 #>  [26]  0.0220676683 -2.2579591760 -0.7365099747 -1.7214374886  0.9269118133 #>  [31]  0.2402823685 -1.5983065925  0.1540897909  0.4292600416  0.5623382525 #>  [36]  0.9417246305  0.7862868975  0.4378974028  0.5348330059  1.3801393606 #>  [41] -0.0601846493  0.0949865211  1.2914664780 -0.0007232612  0.9247860528 #>  [46] -0.1117526441 -0.5317138969 -0.1530381957  0.8195438764 -1.0799893600 #>  [51]  0.2095907871 -0.2415049796  2.6475450451 -1.0827106024 -0.3501653160 #>  [56]  0.2515200939  1.9588504804 -0.2365637631  0.6123825135 -1.9958963302 #>  [61]  0.3751642922  0.9637732620  0.4935186982  0.1102981212 -0.0458281813 #>  [66]  0.0081144400 -2.4718601906  0.3977882087  1.1481818390  1.4765321954 #>  [71] -0.4463775814  1.2445406548 -0.7944924161 -1.4013223523  1.2760452552 #>  [76] -0.5366643254  0.0709421095 -1.0050927198  1.3207408527  1.0405286073 #>  [81]  0.4652549313 -0.0473292065 -0.6480720990  0.9625997253 -1.4998238910 #>  [86] -0.8196351690 -1.2349042335  0.8690667709 -0.6636137487 -0.9215064628 #>  [91] -0.2838803156 -0.1382895314 -0.1508800263  1.0792471933 -0.8381494592 #>  [96]  0.5004442955 -0.0965475607 -1.6511651186  0.5083293670  0.0577279770"},{"path":"http://svmiller.com/reference/r2sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale a vector (or vectors) by two standard deviations — r2sd","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"r2sd allows rescale numeric vector ensuing output mean 0 standard deviation .5. r2sd_at wrapper mutate_at rename_at dplyr. rescales supplied vectors new vectors renames vectors prefix z_.","code":""},{"path":"http://svmiller.com/reference/r2sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"","code":"r2sd(x, na = TRUE)"},{"path":"http://svmiller.com/reference/r2sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"x vector, likely data frame na NAs vector. Defaults TRUE (.e. passes missing observations)","code":""},{"path":"http://svmiller.com/reference/r2sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"function returns numeric vector rescaled mean 0 standard deviation .5.","code":""},{"path":"http://svmiller.com/reference/r2sd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"default, na.rm set TRUE. missing data, function just pass . Gelman (2008) argues rescaling two standard deviations puts regression inputs roughly scale matter original scale. allows honest, preliminary, assessment relative effect sizes regression output. , without requiring rescale function arm. trying reduce packages workflow relies. Importantly, tend rescale ordinal interval inputs leave binary inputs 0/1. , r2sd function fancier -else statements Gelman's rescale function .","code":""},{"path":"http://svmiller.com/reference/r2sd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"Gelman, Andrew. 2008. \"Scaling Regression Inputs Dividing Two Standard Deviations.\" Statistics Medicine 27: 2865--2873.","code":""},{"path":"http://svmiller.com/reference/r2sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale a vector (or vectors) by two standard deviations — r2sd","text":"","code":"x <- rnorm(100) r2sd(x) #>   [1]  0.58938435  0.18197583  0.58039130  0.91074730  0.01668217 -0.18478770 #>   [7] -0.01962033 -0.42179684  0.36908293  0.06542483 -0.88627356  0.28892837 #>  [13] -0.98614536  0.50553860 -0.51143024 -0.23288148  0.31638425 -0.16144326 #>  [19] -0.07254027  1.07923937  1.02523837  0.21173516  0.01595284  0.21346861 #>  [25] -0.36107322 -0.05857578 -1.27614690 -0.35787795 -0.22397223  0.15244818 #>  [31] -0.23264380  0.95027701 -0.03677793 -0.54346030  0.43066237 -0.39212414 #>  [37] -0.58999446  0.58785329 -0.08272961 -0.05357957  0.17797965  0.60034952 #>  [43] -0.25598906  0.04699418  0.15419367  0.58142698  0.74035987  0.56813722 #>  [49] -0.09961741  0.03155173  0.36507027  0.24989286  0.13771068 -0.08150362 #>  [55]  0.40591857 -0.22073909  1.06251295 -0.14558226 -0.53391304 -0.61590666 #>  [61]  0.03739685  0.00918478 -0.24785673 -0.34481666  0.39803186 -1.28439892 #>  [67]  0.42355915 -0.14919976  0.53538693  0.43795067  0.25980651  0.23653250 #>  [73] -0.31081525 -0.53525793 -0.02476267  0.27148311 -1.27299036 -0.55505474 #>  [79] -0.67254477 -0.12399040 -1.14078240 -0.22691123 -0.64409311  0.43743081 #>  [85]  0.15814365 -0.09573691 -0.19889374 -0.21807596  0.06221853  0.08736401 #>  [91]  0.59476649 -0.18209050  0.70475613  0.33387888  0.25281224 -0.22382176 #>  [97]  0.29469543  0.21196985 -0.64322852 -0.62643329  r2sd_at(mtcars, c(\"mpg\", \"hp\", \"disp\")) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 #>                           z_mpg        z_hp      z_disp #> Mazda RX4            0.07544241 -0.26754642 -0.28530991 #> Mazda RX4 Wag        0.07544241 -0.26754642 -0.28530991 #> Datsun 710           0.22477172 -0.39152023 -0.49509105 #> Hornet 4 Drive       0.10862670 -0.26754642  0.11004685 #> Hornet Sportabout   -0.11536726  0.20647109  0.52154061 #> Valiant             -0.16514370 -0.30400931 -0.02308349 #> Duster 360          -0.48039447  0.71695148  0.52154061 #> Merc 240D            0.35750889 -0.61759012 -0.33896547 #> Merc 230             0.22477172 -0.37693508 -0.36276756 #> Merc 280            -0.07388690 -0.17274292 -0.25464959 #> Merc 280C           -0.19003192 -0.17274292 -0.25464959 #> Merc 450SE          -0.30617694  0.24293397  0.18185654 #> Merc 450SL          -0.23151228  0.24293397  0.18185654 #> Merc 450SLC         -0.40572981  0.24293397  0.18185654 #> Cadillac Fleetwood  -0.80394131  0.42524840  0.97337691 #> Lincoln Continental -0.80394131  0.49817417  0.92496588 #> Chrysler Imperial   -0.44721018  0.60756282  0.84428082 #> Fiat 128             1.02119472 -0.58841981 -0.61329465 #> Honda Civic          0.85527326 -0.69051589 -0.62539740 #> Toyota Corolla       1.14563581 -0.59571239 -0.64395497 #> Toyota Corona        0.11692278 -0.36234992 -0.44627659 #> Dodge Challenger    -0.38084159  0.02415666  0.35210200 #> AMC Javelin         -0.40572981  0.02415666  0.29562247 #> Camaro Z28          -0.56335520  0.71695148  0.48119809 #> Pontiac Firebird    -0.07388690  0.20647109  0.68291072 #> Fiat X1-9            0.59809500 -0.58841981 -0.61208437 #> Porsche 914-2        0.49024605 -0.40610538 -0.44546974 #> Lotus Europa         0.85527326 -0.24566869 -0.54713290 #> Ford Pantera L      -0.35595337  0.85551044  0.48523234 #> Ferrari Dino        -0.03240653  0.20647109 -0.34582370 #> Maserati Bora       -0.42232196  1.37328341  0.28351971 #> Volvo 142E           0.10862670 -0.27483900 -0.44264576"},{"path":"http://svmiller.com/reference/rbnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","title":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","text":"rbnorm() function randomly generate values bounded normal (really: scaled beta) distribution specified mean, standard deviation, upper/lower bounds. use function randomly generate data treat interval sake getting means standard  deviations, discernible bounds (even skew) teach students things like random sampling central limit theorem.","code":""},{"path":"http://svmiller.com/reference/rbnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","text":"","code":"rbnorm(n, mean, sd, lowerbound, upperbound, round = FALSE, seed)"},{"path":"http://svmiller.com/reference/rbnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","text":"n number observations simulate mean mean approximate sd standard deviation approximate lowerbound lower bound data generated upperbound upper bound data generated round whether round values whole integers. Defaults FALSE seed set optional seed","code":""},{"path":"http://svmiller.com/reference/rbnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","text":"function returns vector simulated data approximating user-specified conditions.","code":""},{"path":"http://svmiller.com/reference/rbnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","text":"call \"bounded normal\" really beta distribution. aware . took much code somewhere. forget .","code":""},{"path":"http://svmiller.com/reference/rbnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bounded Normal (Really: Scaled Beta) Distribution — rbnorm","text":"","code":"library(tibble)  tibble(x = rbnorm(10000, 57, 14, 0, 100)) #> # A tibble: 10,000 × 1 #>        x #>    <dbl> #>  1  51.3 #>  2  75.9 #>  3  57.1 #>  4  66.4 #>  5  34.2 #>  6  71.4 #>  7  29.8 #>  8  42.5 #>  9  66.2 #> 10  56.2 #> # ℹ 9,990 more rows tibble(x = rbnorm(10000, 57, 14, 0, 100, round = TRUE)) #> # A tibble: 10,000 × 1 #>        x #>    <dbl> #>  1    58 #>  2    27 #>  3    56 #>  4    53 #>  5    49 #>  6    80 #>  7    47 #>  8    74 #>  9    61 #> 10    76 #> # ℹ 9,990 more rows tibble(x = rbnorm(10000, 57, 14, 0, 100, seed = 8675309)) #> # A tibble: 10,000 × 1 #>        x #>    <dbl> #>  1  72.8 #>  2  44.6 #>  3  66.9 #>  4  38.4 #>  5  39.8 #>  6  56.5 #>  7  45.5 #>  8  47.3 #>  9  41.4 #> 10  39.2 #> # ℹ 9,990 more rows"},{"path":"http://svmiller.com/reference/rd_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Residual Density Plot for Linear Models — rd_plot","title":"Residual Density Plot for Linear Models — rd_plot","text":"rd_plot() provides visual diagnostic normality assumption linear model. Provided OLS model fit lm() base R, function extracts residuals model creates density plot residuals (solid black line) standard normal distribution mean 0 standard deviation matching standard deviation residuals model. function may used diagnostic purposes.","code":""},{"path":"http://svmiller.com/reference/rd_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residual Density Plot for Linear Models — rd_plot","text":"","code":"rd_plot(mod)"},{"path":"http://svmiller.com/reference/rd_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residual Density Plot for Linear Models — rd_plot","text":"mod fitted linear model","code":""},{"path":"http://svmiller.com/reference/rd_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residual Density Plot for Linear Models — rd_plot","text":"rd_plot() returns density plot ggplot2 object. density plot actual residuals solid black line. stylized normal distribution matching description residuals blue dashed line.","code":""},{"path":"http://svmiller.com/reference/rd_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Residual Density Plot for Linear Models — rd_plot","text":"user can always add ggplot2 elements top greater legibility/clarity. example, density plots can finicky making observations appear . Perhaps adjusting scale x ad hoc, fact, may warranted. goal function emphasize many real world applications, normality assumption residuals never held can often reasonably approximated upon visual inspection.","code":""},{"path":"http://svmiller.com/reference/rd_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Residual Density Plot for Linear Models — rd_plot","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/rd_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Residual Density Plot for Linear Models — rd_plot","text":"","code":"M1 <- lm(mpg ~ ., data=mtcars)  rd_plot(M1)"},{"path":"http://svmiller.com/reference/revcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse code a numeric variable — revcode","title":"Reverse code a numeric variable — revcode","text":"revcode allows reverse code numeric variable. , say, Likert item values 1, 2, 3, 4, 5, function inverts scale 1 = 5, 2 = 4, 3 = 3, 4 = 2, 5 = 1.","code":""},{"path":"http://svmiller.com/reference/revcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse code a numeric variable — revcode","text":"","code":"revcode(x)"},{"path":"http://svmiller.com/reference/revcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse code a numeric variable — revcode","text":"x numeric vector","code":""},{"path":"http://svmiller.com/reference/revcode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse code a numeric variable — revcode","text":"function returns numeric vector reverse codes numeric vector supplied .","code":""},{"path":"http://svmiller.com/reference/revcode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reverse code a numeric variable — revcode","text":"function passes NAs may variable. assume, reasonably might add, observed values include minimum maximum. usually case discrete ordered-categorical variable (like Likert item). also assumes numeric vector supplied contains possible values minimum observed value 1. usually safe assumption survey data variable interest ordinal (either 1:4 scale, 1:5 scale, 1:10 scale). matter, use function mind.","code":""},{"path":"http://svmiller.com/reference/revcode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse code a numeric variable — revcode","text":"","code":"data.frame(x1 = rep(c(1:7, NA), 2),       x2 = c(1:10, 1:4, NA, NA),      x3 = rep(c(1:4), 4)) -> example_data  library(dplyr) library(magrittr)  example_data %>% mutate_at(vars(\"x1\", \"x2\", \"x3\"), ~revcode(.)) #>    x1 x2 x3 #> 1   7 10  4 #> 2   6  9  3 #> 3   5  8  2 #> 4   4  7  1 #> 5   3  6  4 #> 6   2  5  3 #> 7   1  4  2 #> 8  NA  3  1 #> 9   7  2  4 #> 10  6  1  3 #> 11  5 10  2 #> 12  4  9  1 #> 13  3  8  4 #> 14  2  7  3 #> 15  1 NA  2 #> 16 NA NA  1"},{"path":"http://svmiller.com/reference/sbayesboot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"sbayesboot() performs Bayesian bootstrap regression model.","code":""},{"path":"http://svmiller.com/reference/sbayesboot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"","code":"sbayesboot(object, reps = 1000L, seed, cluster = NULL, ...)"},{"path":"http://svmiller.com/reference/sbayesboot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"object regression model object reps many bootstrap replicates user wants. Defaults 1000 seed set optional seed reproducibility cluster optional cluster calibrating weights ... optional arguments","code":""},{"path":"http://svmiller.com/reference/sbayesboot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"sbayesboot() takes fitted regression model returns matrix bootstrapped coefficients (intercept). easily converted data frame ease summary.","code":""},{"path":"http://svmiller.com/reference/sbayesboot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"code underpinning sbayesboot() largely derived code provided Grant McDermott Vincent Arel-Bundock. approach takes flexibility McDermott's model-agnostic code (along ease specifying clusters) combines Arel-Bundock's update() approach actual bootstrapping. may screwed something , feel free point cases screw .","code":""},{"path":"http://svmiller.com/reference/sbayesboot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"Grant McDermott, Vincent Arel-Bundock","code":""},{"path":"http://svmiller.com/reference/sbayesboot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap a Regression Model, the Bayesian Way — sbayesboot","text":"","code":"# \\donttest{ M1 <- lm(mpg ~ disp + wt + hp, mtcars)  # Default options  BB1 <- sbayesboot(M1)  # Cluster bootstrap on cylinder variable  BB2 <- sbayesboot(M1, cluster=~cyl) # }"},{"path":"http://svmiller.com/reference/sbtscs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ","title":"Create ","text":"sbtscs() allows create spells (\"peace years\" international conflict context) observations event. allow researcher better model temporal dependence binary time-series cross-section (\"BTSCS\") models.","code":""},{"path":"http://svmiller.com/reference/sbtscs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ","text":"","code":"sbtscs(data, event, tvar, csunit, pad_ts = FALSE)"},{"path":"http://svmiller.com/reference/sbtscs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ","text":"data data set working event event (0, 1) want spells peace years tvar time variable (e.g. year) csunit cross-sectional unit (likely dyad boilerplate international conflict stuff) pad_ts time-series filled panels unbalanced/gaps? Defaults FALSE.","code":""},{"path":"http://svmiller.com/reference/sbtscs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ","text":"sbtscs() takes data frame returns data frame new variable named spell.","code":""},{"path":"http://svmiller.com/reference/sbtscs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create ","text":"confess outright, obvious anyone looks code, liberally copy Dave Armstrong's btscs() function DAMisc package. offer two improvements. One, btscs() function chokes large number cross-sectional units recorded \"event.\" know happens . , \"tidying\" code leaning dplyr substantially speeds computation. Incidentally, concerns cross-sectional units recorded events can choke btscs() function large numbers.","code":""},{"path":"http://svmiller.com/reference/sbtscs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create ","text":"Armstrong, Dave. 2016. ``DAMisc: Dave Armstrong's Miscellaneous Functions.'' R package version 1.4-3. Miller, Steven V. 2017. ``Quickly Create Peace Years BTSCS Models sbtscs stevemisc.'' http://svmiller.com/blog/2017/06/quickly-create-peace-years--btscs-models--stevemisc/","code":""},{"path":"http://svmiller.com/reference/sbtscs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create ","text":"David . Armstrong, Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/sbtscs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ","text":"","code":"if (FALSE) { library(dplyr) library(stevemisc) data(usa_mids)  # notice: no quotes sbtscs(usa_mids, midongoing, year, dyad) }"},{"path":"http://svmiller.com/reference/show_ranef.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a caterpillar plot of random effects from a mixed model — show_ranef","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"show_ranef() allows user estimating mixed model quickly plot random intercepts (conditional variances) given random effect mixed model. cases random slope intercept, function plots random slope another caterpillar plot (another facet)","code":""},{"path":"http://svmiller.com/reference/show_ranef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"","code":"show_ranef(model, group, reorder = TRUE)"},{"path":"http://svmiller.com/reference/show_ranef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"model fitted mixed model random intercepts group random intercept/slopes want see caterpillar plot? Declare character reorder optional argument. DEFAULT TRUE, ``re-orders'' intercepts original value data. FALSE, ensuing caterpillar plot defaults default method ordering levels random effect estimated conditional mode.","code":""},{"path":"http://svmiller.com/reference/show_ranef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"show_ranef() returns caterpillar plot random intercepts given mixed model. broom.mixed::augment() can process , function work just fine.","code":""},{"path":"http://svmiller.com/reference/show_ranef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"function simple wrapper broom.mixed , obviously ggplot2 heavy lifting.","code":""},{"path":"http://svmiller.com/reference/show_ranef.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/show_ranef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a caterpillar plot of random effects from a mixed model — show_ranef","text":"","code":"library(lme4) #> Loading required package: Matrix library(stevemisc) data(sleepstudy)  M1 <- lmer(Reaction ~ Days + (Days | Subject), data=sleepstudy) show_ranef(M1, \"Subject\")  show_ranef(M1, \"Subject\", reorder=FALSE)"},{"path":"http://svmiller.com/reference/smvrnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from a Multivariate Normal Distribution — smvrnorm","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"smvrnorm() simulates data multivariate normal distribution.","code":""},{"path":"http://svmiller.com/reference/smvrnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"","code":"smvrnorm(   n = 1,   mu,   sigma,   tol = 1e-06,   empirical = FALSE,   eispack = FALSE,   seed )"},{"path":"http://svmiller.com/reference/smvrnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"n number observations simulate mu vector means sigma positive-definite symmetric matrix specifying covariance matrix variables. tol tolerance (relative largest variance) numerical lack positive-definiteness sigma. empirical logical. true, mu sigma specify empirical population mean covariance matrix. eispack logical. values FALSE result error seed set optional seed","code":""},{"path":"http://svmiller.com/reference/smvrnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"function returns simulated data multivariate normal distribution.","code":""},{"path":"http://svmiller.com/reference/smvrnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"simple port rename mvrnorm() MASS package. elect plagiarize/port MASS package conflicts lot things workflow, especially select(). useful \"informal Bayes\" approaches generating quantities interest regression model.","code":""},{"path":"http://svmiller.com/reference/smvrnorm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"B. D. Ripley (1987) Stochastic Simulation. Wiley. Page 98.","code":""},{"path":"http://svmiller.com/reference/smvrnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from a Multivariate Normal Distribution — smvrnorm","text":"","code":"M1 <- lm(mpg ~ disp + cyl, mtcars)  smvrnorm(100, coef(M1), vcov(M1)) #>        (Intercept)         disp        cyl #>   [1,]    34.44180 -0.016093590 -1.6668364 #>   [2,]    32.03398 -0.018701730 -1.2757296 #>   [3,]    37.36271 -0.020331480 -2.0825009 #>   [4,]    36.71988 -0.012678111 -2.3042494 #>   [5,]    34.98588 -0.030837751 -1.2148439 #>   [6,]    35.75183 -0.031857450 -1.3338967 #>   [7,]    36.17367 -0.006791696 -2.3472860 #>   [8,]    32.91489 -0.026496439 -1.0494384 #>   [9,]    36.29545 -0.026003203 -1.5875640 #>  [10,]    34.96627 -0.016327081 -1.7916997 #>  [11,]    30.70833 -0.034137268 -0.4632021 #>  [12,]    35.25495 -0.024852183 -1.5871001 #>  [13,]    29.67764 -0.045307263  0.1279449 #>  [14,]    33.27457 -0.024805958 -1.2678062 #>  [15,]    35.90700 -0.028802646 -1.3244104 #>  [16,]    32.70040 -0.028711966 -0.8978397 #>  [17,]    35.64675 -0.007246586 -2.2356900 #>  [18,]    35.50407 -0.023854934 -1.6782045 #>  [19,]    33.96691 -0.030668985 -1.2353990 #>  [20,]    37.86235 -0.004940957 -2.7436385 #>  [21,]    33.28914 -0.012421275 -1.7446521 #>  [22,]    34.30010 -0.028712418 -1.3577551 #>  [23,]    36.06222 -0.021116329 -1.8633183 #>  [24,]    37.46621 -0.023343183 -1.8936744 #>  [25,]    36.07328 -0.021921595 -1.8317841 #>  [26,]    36.56082 -0.019457823 -1.8880890 #>  [27,]    31.39368 -0.040165534 -0.4286164 #>  [28,]    29.33698 -0.032083182 -0.4472746 #>  [29,]    34.28392 -0.013035185 -1.8310718 #>  [30,]    33.58597 -0.023962357 -1.3969869 #>  [31,]    28.97209 -0.030077306 -0.3020914 #>  [32,]    34.96147 -0.001392552 -2.3925628 #>  [33,]    34.29185 -0.027030451 -1.3731181 #>  [34,]    30.42862 -0.020690303 -0.8481803 #>  [35,]    36.42266 -0.017422488 -1.9164967 #>  [36,]    33.56155 -0.043038754 -0.5721694 #>  [37,]    31.87355 -0.019477538 -1.2724780 #>  [38,]    36.74445 -0.016871084 -1.9450795 #>  [39,]    32.78354 -0.016504146 -1.5442419 #>  [40,]    35.39997 -0.019395674 -1.8751268 #>  [41,]    35.60957 -0.020148263 -1.6666933 #>  [42,]    37.99107  0.007172362 -3.3032306 #>  [43,]    40.85089 -0.010726402 -2.9515661 #>  [44,]    37.95101 -0.028593076 -1.7685981 #>  [45,]    33.67591 -0.022775762 -1.3301353 #>  [46,]    37.97592 -0.015515732 -2.4204318 #>  [47,]    33.96554 -0.019441511 -1.6081523 #>  [48,]    34.18454 -0.019333806 -1.4407924 #>  [49,]    34.55656 -0.025640883 -1.3469341 #>  [50,]    33.92344 -0.014969830 -1.6643016 #>  [51,]    34.34051 -0.020552987 -1.5917340 #>  [52,]    34.10286 -0.032555955 -1.0019450 #>  [53,]    35.99606 -0.016518191 -1.8187662 #>  [54,]    31.72513 -0.029475953 -0.7907692 #>  [55,]    32.81959 -0.022554931 -1.2138406 #>  [56,]    35.99504 -0.028737140 -1.5838799 #>  [57,]    33.62026 -0.012538926 -1.6514403 #>  [58,]    37.26592 -0.022992995 -1.8182772 #>  [59,]    36.14499 -0.017645647 -1.9345679 #>  [60,]    35.23342 -0.004586844 -2.2137780 #>  [61,]    31.81256 -0.043409009 -0.2694654 #>  [62,]    36.43215 -0.022729756 -1.8196314 #>  [63,]    39.28006 -0.004245869 -2.9370557 #>  [64,]    34.91233 -0.032243438 -1.1931419 #>  [65,]    31.46309 -0.015660756 -1.1197044 #>  [66,]    34.22477 -0.025875124 -1.3415898 #>  [67,]    37.68134 -0.027979933 -1.7807292 #>  [68,]    33.35864 -0.017707105 -1.4843595 #>  [69,]    33.76621 -0.021178795 -1.5660815 #>  [70,]    38.65470 -0.020472447 -2.1995093 #>  [71,]    30.48207 -0.028090660 -0.6645297 #>  [72,]    32.25134 -0.034734893 -0.6216782 #>  [73,]    30.90073 -0.028385834 -0.7434711 #>  [74,]    33.09523 -0.033242923 -0.8108385 #>  [75,]    35.14176 -0.019699942 -1.5724585 #>  [76,]    37.28685 -0.012467155 -2.4016195 #>  [77,]    36.72132 -0.008554207 -2.4195983 #>  [78,]    36.02494 -0.024415962 -1.8528437 #>  [79,]    34.11541 -0.031099366 -1.2083065 #>  [80,]    34.19654 -0.020677674 -1.4154843 #>  [81,]    30.07842 -0.025284376 -0.6767066 #>  [82,]    37.29116 -0.018444192 -2.3045275 #>  [83,]    38.45071 -0.010092197 -2.5877892 #>  [84,]    33.82277 -0.023651190 -1.3520588 #>  [85,]    34.66278 -0.014667477 -1.7998157 #>  [86,]    31.40191 -0.032412551 -0.7281680 #>  [87,]    42.25891 -0.009559488 -3.1434194 #>  [88,]    34.35595 -0.006480486 -2.1190544 #>  [89,]    36.11058 -0.010001272 -2.2122046 #>  [90,]    33.28499 -0.012173669 -1.6930537 #>  [91,]    34.92931 -0.018505094 -1.5643630 #>  [92,]    35.37642 -0.025342419 -1.5472113 #>  [93,]    35.41801 -0.013244018 -1.9558777 #>  [94,]    36.00575 -0.022021632 -1.7105708 #>  [95,]    33.56557 -0.031543846 -0.9619895 #>  [96,]    34.27518 -0.026714387 -1.2335824 #>  [97,]    36.98794 -0.003431031 -2.5075174 #>  [98,]    38.92558 -0.018050955 -2.3751259 #>  [99,]    37.27147 -0.015998570 -2.1360520 #> [100,]    30.62294 -0.033973310 -0.4645830"},{"path":"http://svmiller.com/reference/stevepubs.html","id":null,"dir":"Reference","previous_headings":"","what":"An Incomplete List of My Publications, All of Which You Should Cite — stevepubs","title":"An Incomplete List of My Publications, All of Which You Should Cite — stevepubs","text":"data publications, barring things like book reviews forthcoming pieces. use data illustrate print_refs() function. cite publications .","code":""},{"path":"http://svmiller.com/reference/stevepubs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An Incomplete List of My Publications, All of Which You Should Cite — stevepubs","text":"","code":"stevepubs"},{"path":"http://svmiller.com/reference/stevepubs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An Incomplete List of My Publications, All of Which You Should Cite — stevepubs","text":"data frame following 14 variables. CATEGORY entry type BIBTEXKEY unique entry key AUTHOR list authors entry BOOKTITLE book title, appropriate JOURNAL journal title, appropriate NUMBER journal volume number, appropriate PAGES range page numbers, appropriate PUBLISHER book publisher, appropriate TITLE title publication VOLUME journal volume number, appropriate YEAR year publication, character. Publications year assumed forthcoming DOI DOI, entered one","code":""},{"path":"http://svmiller.com/reference/stevepubs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An Incomplete List of My Publications, All of Which You Should Cite — stevepubs","text":"Cite publications , goons. Extremely Smokey Bear voice can jack h-index infinity.","code":""},{"path":"http://svmiller.com/reference/strategic_rivalries.html","id":null,"dir":"Reference","previous_headings":"","what":"Strategic Rivalries, 1494-2010 — strategic_rivalries","title":"Strategic Rivalries, 1494-2010 — strategic_rivalries","text":"simple summary strategic (inter-state) rivalries Thompson Dreyer (2012).","code":""},{"path":"http://svmiller.com/reference/strategic_rivalries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strategic Rivalries, 1494-2010 — strategic_rivalries","text":"","code":"data(\"strategic_rivalries\")"},{"path":"http://svmiller.com/reference/strategic_rivalries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Strategic Rivalries, 1494-2010 — strategic_rivalries","text":"data frame 197 observations following 10 variables. rivalryno numeric vector rivalry number rivalryname character vector rivalry name sidea character vector first country rivalry sideb character vector second country rivalry styear numeric vector start year rivalry endyear numeric vector end year rivalry region character vector region rivalry, per Thompson Dreyer (2012) type1 character vector primary type rivalry (spatial, positional, ideological, interventionary) type2 character vector secondary type rivalry, applicable (spatial, positional, ideological, interventionary) type3 character vector tertiary type rivalry, applicable (spatial, positional, ideological, interventionary)","code":""},{"path":"http://svmiller.com/reference/strategic_rivalries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strategic Rivalries, 1494-2010 — strategic_rivalries","text":"Information gathered appendix Thompson Dreyer (2012). Ongoing rivalries right-bound 2010, date publication Thompson Dreyer's handbook. Users free change like.","code":""},{"path":"http://svmiller.com/reference/strategic_rivalries.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Strategic Rivalries, 1494-2010 — strategic_rivalries","text":"Thompson, William R. David Dreyer. 2012. Handbook International Rivalries. CQ Press.","code":""},{"path":"http://svmiller.com/reference/strategic_rivalries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strategic Rivalries, 1494-2010 — strategic_rivalries","text":"","code":"data(strategic_rivalries)"},{"path":"http://svmiller.com/reference/studentt.html","id":null,"dir":"Reference","previous_headings":"","what":"The Student-t Distribution (Location-Scale) — studentt","title":"The Student-t Distribution (Location-Scale) — studentt","text":"density, distribution function, quantile function random generation Student-t distribution location mu, scale sigma, degrees freedom df. Base R gives -called \"standard\" Student-t distribution, just varying degrees freedom. generalizes standard Student-t three-parameter version.","code":""},{"path":"http://svmiller.com/reference/studentt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Student-t Distribution (Location-Scale) — studentt","text":"","code":"dst(x, df, mu, sigma)  pst(q, df, mu, sigma)  qst(p, df, mu, sigma)  rst(n, df, mu, sigma)"},{"path":"http://svmiller.com/reference/studentt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Student-t Distribution (Location-Scale) — studentt","text":"x, q vector quantiles df vector degrees freedom mu vector location value sigma vector scale values p Vector probabilities. n Number samples draw distribution.","code":""},{"path":"http://svmiller.com/reference/studentt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Student-t Distribution (Location-Scale) — studentt","text":"dst() returns density. pst() returns distribution function. qst() returns quantile function. rst() returns random numbers.","code":""},{"path":"http://svmiller.com/reference/studentt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Student-t Distribution (Location-Scale) — studentt","text":"simple hack taken Wikipedia. itch wanting scratch . can probably generalize outward allow tail log stuff, wrote mostly random number generation. Right now, written account fact sigma non-negative, user know (now).","code":""},{"path":[]},{"path":"http://svmiller.com/reference/tbl_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data frame to an object of class ","title":"Convert data frame to an object of class ","text":"tbl_df() ensures legacy compatibility scripts since function deprecated dplyr. to_tbl() also added fun.","code":""},{"path":"http://svmiller.com/reference/tbl_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data frame to an object of class ","text":"","code":"tbl_df(...)  to_tbl(...)"},{"path":"http://svmiller.com/reference/tbl_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data frame to an object of class ","text":"... optional parameters, put anything . just quell CRAN checks.","code":""},{"path":"http://svmiller.com/reference/tbl_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data frame to an object of class ","text":"function takes data frame turns tibble.","code":""},{"path":"http://svmiller.com/reference/tbl_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data frame to an object of class ","text":"","code":"tbl_df(mtcars) #> Warning: `tbl_df()` was deprecated in dplyr 1.0.0. #> ℹ Please use `tibble::as_tibble()` instead. #> # A tibble: 32 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # ℹ 22 more rows tbl_df(iris) #> Warning: `tbl_df()` was deprecated in dplyr 1.0.0. #> ℹ Please use `tibble::as_tibble()` instead. #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>   #>  1          5.1         3.5          1.4         0.2 setosa  #>  2          4.9         3            1.4         0.2 setosa  #>  3          4.7         3.2          1.3         0.2 setosa  #>  4          4.6         3.1          1.5         0.2 setosa  #>  5          5           3.6          1.4         0.2 setosa  #>  6          5.4         3.9          1.7         0.4 setosa  #>  7          4.6         3.4          1.4         0.3 setosa  #>  8          5           3.4          1.5         0.2 setosa  #>  9          4.4         2.9          1.4         0.2 setosa  #> 10          4.9         3.1          1.5         0.1 setosa  #> # ℹ 140 more rows"},{"path":"http://svmiller.com/reference/usa_mids.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Militarized Interstate Disputes (MIDs) — usa_mids","title":"United States Militarized Interstate Disputes (MIDs) — usa_mids","text":"non-directed dyad-year data set militarized interstate disputes involving United States. created illustrate sbtscs() function.","code":""},{"path":"http://svmiller.com/reference/usa_mids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Militarized Interstate Disputes (MIDs) — usa_mids","text":"","code":"usa_mids"},{"path":"http://svmiller.com/reference/usa_mids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States Militarized Interstate Disputes (MIDs) — usa_mids","text":"data frame 14586 observations following 6 variables. dyad unique identifier dyad ccode1 Correlates War state code United States (2) ccode2 Correlates War state code state dyad year observation year dyad midongoing ongoing inter-state dispute dyad-year? midonset new inter-state dispute onset dyad-year","code":""},{"path":"http://svmiller.com/reference/usa_mids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"United States Militarized Interstate Disputes (MIDs) — usa_mids","text":"Data generated time ago. Rare cases multiple disputes ongoing given dyad-year first whittled isolating 1) unique dispute onsets. Thereafter, data select 2) highest fatality, 3) highest hostility level, 4) longer dispute, 5) just picking whichever one came first. duplicate non-directed dyad-year observations.","code":""},{"path":"http://svmiller.com/reference/usa_mids.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"United States Militarized Interstate Disputes (MIDs) — usa_mids","text":"Gibler, Douglas M., Steven V. Miller, Erin K. Little. 2016. “Analysis Militarized Interstate Dispute (MID) Dataset, 1816-2001.” International Studies Quarterly 60(4): 719-730.","code":""},{"path":"http://svmiller.com/reference/wls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Weighted Least Squares of Your OLS Model — wls","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"wls() takes OLS model re-estimates using weighted least squares approach. Weighted least squares often \"textbook\" approach dealing presence heteroskedastic standard errors, weighted least squares estimates compared OLS estimates uncertainty check consistency potential inferential implications.","code":""},{"path":"http://svmiller.com/reference/wls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"","code":"wls(mod)"},{"path":"http://svmiller.com/reference/wls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"mod fitted OLS model","code":""},{"path":"http://svmiller.com/reference/wls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"wls() returns new model object weighted least squares re-estimation OLS model supplied .","code":""},{"path":"http://svmiller.com/reference/wls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"function robust potential model specification oddities (e.g. polynomials fixed effects). also perform nicely presence missing data, na.action = na.exclude supplied first offending OLS model supplied function weighted least squares re-estimation.","code":""},{"path":"http://svmiller.com/reference/wls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"Steven V. Miller","code":""},{"path":"http://svmiller.com/reference/wls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Weighted Least Squares of Your OLS Model — wls","text":"","code":"M1 <- lm(mpg ~ ., data=mtcars) M2 <- wls(M1)  summary(M2) #>  #> Call: #> lm(formula = mpg ~ cyl + disp + hp + drat + wt + qsec + vs +  #>     am + gear + carb, data = A, weights = wts) #>  #> Weighted Residuals: #>     Min      1Q  Median      3Q     Max  #> -1.7522 -0.8385 -0.2326  0.9062  2.7257  #>  #> Coefficients: #>              Estimate Std. Error t value Pr(>|t|) #> (Intercept) 16.798050  19.371537   0.867    0.396 #> cyl         -0.394419   1.021128  -0.386    0.703 #> disp         0.002299   0.015834   0.145    0.886 #> hp          -0.009795   0.020927  -0.468    0.645 #> drat         0.934691   1.646690   0.568    0.576 #> wt          -2.383075   1.748083  -1.363    0.187 #> qsec         0.552577   0.760879   0.726    0.476 #> vs          -0.124255   2.231573  -0.056    0.956 #> am           2.236543   2.158780   1.036    0.312 #> gear         0.484887   1.520711   0.319    0.753 #> carb        -0.564120   0.802962  -0.703    0.490 #>  #> Residual standard error: 1.518 on 21 degrees of freedom #> Multiple R-squared:  0.8621,\tAdjusted R-squared:  0.7965  #> F-statistic: 13.13 on 10 and 21 DF,  p-value: 6.318e-07 #>"},{"path":"http://svmiller.com/reference/wom.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Week of the Month from a Date — wom","title":"Generate Week of the Month from a Date — wom","text":"wom() convenience function use constructing calendars ggplot2. takes date returns, numeric vector, week month date given .","code":""},{"path":"http://svmiller.com/reference/wom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Week of the Month from a Date — wom","text":"","code":"wom(x)"},{"path":"http://svmiller.com/reference/wom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Week of the Month from a Date — wom","text":"x date","code":""},{"path":"http://svmiller.com/reference/wom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Week of the Month from a Date — wom","text":"wom() convenience function use constructing calendars ggplot2. takes date returns, numeric vector, week month date given .","code":""},{"path":"http://svmiller.com/reference/wom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Week of the Month from a Date — wom","text":"wom() assumes Sunday start week. can assuredly customized later function, right now assumption Sunday start week (Monday, might contexts).","code":""},{"path":"http://svmiller.com/reference/wom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Week of the Month from a Date — wom","text":"","code":"wom(as.Date(\"2022-01-01\")) #> [1] 1  wom(Sys.Date()) #> [1] 2"},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-180","dir":"Changelog","previous_headings":"","what":"stevemisc 1.8.0","title":"stevemisc 1.8.0","text":"rd_plot() now na.rm = TRUE argument quietly passed extraction standard deviation residuals. ensures missing values data don’t result missing residuals, result standard deviation residuals. linloess_plot() now resid argument allows comparison model’s residuals y-axis rather default (raw values y y-axis). Assorted documentation fixes.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-170","dir":"Changelog","previous_headings":"","what":"stevemisc 1.7.0","title":"stevemisc 1.7.0","text":"CRAN release: 2023-11-06 Add charitable_contributions. Add rd_plot() Scoped helper verbs (“” functions) gradually getting .support , , breaking link superseded _at() functions dplyr. linloess_plot() now se argument optionally disabling standard error bands. particularly ill-fitting linear models, may advisable.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-160","dir":"Changelog","previous_headings":"","what":"stevemisc 1.6.0","title":"stevemisc 1.6.0","text":"CRAN release: 2023-03-22 theme_steve() removed package. function now stevethemes, house ggplot2 themes going forward. Fix warning/error/bug ps_spells() brought attention CRAN. don’t know came just now, ’s apparently issue lurking around R development time now ’s always wrong call order() data frame. underlying order() calls replaced arrange(). fix concerns related issue also affects peacesciencer.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-150","dir":"Changelog","previous_headings":"","what":"stevemisc 1.5.0","title":"stevemisc 1.5.0","text":"CRAN release: 2023-02-01 Package now contains scoped helper verbs—-called “” functions. functions—like center_at(), diff_at(), —self-contained one R Documentation file. theme_steve_ms() now actually uses “Crimson Pro”, “Crimson Text”. theme_steve() deprecated removed later release. function effectively moved stevethemes, also expanded improved. remaining ggplot2 functions package becoming legacy functions mind. wls() weighted least squares re-estimations OLS model. HT @hadley information class issue. fct_reorg() completely re-written (@hadley ) light new forcats release.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-141","dir":"Changelog","previous_headings":"","what":"stevemisc 1.4.1","title":"stevemisc 1.4.1","text":"CRAN release: 2022-04-12 Adjust filter_refs() print_refs() longer require bib2df. , bib2df also removed package dependency.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-140","dir":"Changelog","previous_headings":"","what":"stevemisc 1.4.0","title":"stevemisc 1.4.0","text":"CRAN release: 2022-03-23 Add filter_refs() , , bib2df package dependency. print_refs() now work (implied) bib2df data frame .bib entries. Add wom(). Add sbayesboot(). Add map_quiz. Update stevepubs. Update show_ranef(), longer requires broom.mixed underneath hood. Remove broom.mixed package dependency.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-130","dir":"Changelog","previous_headings":"","what":"stevemisc 1.3.0","title":"stevemisc 1.3.0","text":"CRAN release: 2021-10-22 Add data set French leaders (fra_leaderyears). data set stress-testing peace spell calculations cross-sectional units decidedly imbalanced. Add data set German dyad-years (gmy_dyadyears). data set stress-testing peace spell calculations huge gap data. Add ps_spells(), general spell calculations going forward. Add linloess_plot(). , add tidyr dependency.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-120","dir":"Changelog","previous_headings":"","what":"stevemisc 1.2.0","title":"stevemisc 1.2.0","text":"CRAN release: 2021-07-27 Add prepare_refs() print_refs() Add r2sd_at(). Add revcode(). Add stevepubs. Add theme_steve_ms() theme_steve_font().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-110","dir":"Changelog","previous_headings":"","what":"stevemisc 1.1.0","title":"stevemisc 1.1.0","text":"CRAN release: 2021-06-14 Add ps_btscs() future use peacesciencer. Moved Imports: entries Suggests: CRAN compliance. import packages (DBI, RSQLite, dbplyr) concern db_lselect() function.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-100","dir":"Changelog","previous_headings":"","what":"stevemisc 1.0.0","title":"stevemisc 1.0.0","text":"CRAN release: 2021-04-19 slated first professional/public release CRAN. Package features major updates functions, mostly CRAN compliance. New features include fct_reorg(), gvi() shortcut get_var_info(), ess9_labelled data illustration, scale-location t-distribution functions, .","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-031","dir":"Changelog","previous_headings":"","what":"stevemisc 0.3.1","title":"stevemisc 0.3.1","text":"Move almost data stevedata. Add p_z().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-030","dir":"Changelog","previous_headings":"","what":"stevemisc 0.3.0","title":"stevemisc 0.3.0","text":"Mostly cosmetic fixes functionality things. CRAN compliant.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-022","dir":"Changelog","previous_headings":"","what":"stevemisc 0.2.2","title":"stevemisc 0.2.2","text":"Add usa_mids. Update sbtscs(). Add vignette.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-02","dir":"Changelog","previous_headings":"","what":"stevemisc 0.2","title":"stevemisc 0.2","text":"Update carrec(), cor2data(), corvectors(), get_sims(), get_var_info(), make_perclab(), make_scale(), jenny(), %nin%, normal_dist(), rbnorm(), sbtscs(), show_ranef(), smvrnorm(), theme_steve(), theme_steve_web(). Remove multiplot().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0117","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.17","title":"stevemisc 0.1.17","text":"Update fakeAPI.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0116","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.16","title":"stevemisc 0.1.16","text":"Add seed corvectors(). Add fakeAPI.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0114","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.14","title":"stevemisc 0.1.14","text":"Add corvectors() jenny().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0113","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.13","title":"stevemisc 0.1.13","text":"Add tbl_df() to_tbl(). Update theme_steve_web(). Thanks @mewdewitt suggestions.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0111","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.11","title":"stevemisc 0.1.11","text":"Add %nin%.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0110","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.10","title":"stevemisc 0.1.10","text":"Add smvrnorm().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-018","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.8","title":"stevemisc 0.1.8","text":"Generalize get_sims() handle non-mixed models.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0173","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.7.3","title":"stevemisc 0.1.7.3","text":"Update States.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0172","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.7.2","title":"stevemisc 0.1.7.2","text":"Update DJIA.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0171","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.7.1","title":"stevemisc 0.1.7.1","text":"Add seed rbnorm().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-017","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.7","title":"stevemisc 0.1.7","text":"Add normal_dist(), States, update Presidents.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0169","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.9","title":"stevemisc 0.1.6.9","text":"Remove Presidents.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0168","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.8","title":"stevemisc 0.1.6.8","text":"Add ESS9GB Presidents.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0166","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.6","title":"stevemisc 0.1.6.6","text":"Add Arca.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0165","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.5","title":"stevemisc 0.1.6.5","text":"Update aluminum_premiums DJIA.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0164","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.4","title":"stevemisc 0.1.6.4","text":"Add asn_stats DST.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0162","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.2","title":"stevemisc 0.1.6.2","text":"Add cor2data().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0161","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.1","title":"stevemisc 0.1.6.1","text":"Add select z-values vectors.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01601","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.6.01","title":"stevemisc 0.1.6.01","text":"Add rbnorm().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0159","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.9","title":"stevemisc 0.1.5.9","text":"Update aluminum_premiums.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0158","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.8","title":"stevemisc 0.1.5.8","text":"Add strategic_rivalries.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0157","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.7","title":"stevemisc 0.1.5.7","text":"Add sugar_prices.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0156","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.6","title":"stevemisc 0.1.5.6","text":"Add post_bg().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0155","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.5","title":"stevemisc 0.1.5.5","text":"Add ghp100k.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0154","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.4","title":"stevemisc 0.1.5.4","text":"Add eustates multiplot().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0152","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.2","title":"stevemisc 0.1.5.2","text":"Add get_sims(). Update theme_steve_web().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0151","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5.1","title":"stevemisc 0.1.5.1","text":"Add r2sd().","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-015","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.5","title":"stevemisc 0.1.5","text":"Add carrec() cardkrieger1994mwe.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01496","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.9.6","title":"stevemisc 0.1.4.9.6","text":"Add clemsontemps, gss_abortion, map_quiz.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01495","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.9.5","title":"stevemisc 0.1.4.9.5","text":"Add nesarc_drinkspd.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01493","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.9.3","title":"stevemisc 0.1.4.9.3","text":"Add usa_chn_gdp_forecasts.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01492","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.9.2","title":"stevemisc 0.1.4.9.2","text":"Add imf_coffee_data.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01491","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.9.1","title":"stevemisc 0.1.4.9.1","text":"Add recessions.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0149","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.9","title":"stevemisc 0.1.4.9","text":"Add ukg_eeri.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01489","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.9","title":"stevemisc 0.1.4.8.9","text":"Rename edq_passengercars eq_passengercars.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01488","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.8","title":"stevemisc 0.1.4.8.8","text":"Add edq_passengercars.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01487","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.7","title":"stevemisc 0.1.4.8.7","text":"Update documentation migrants_usa mvprod.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01486","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.6","title":"stevemisc 0.1.4.8.6","text":"Add mvprod.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01485","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.5","title":"stevemisc 0.1.4.8.5","text":"Update documentation migrants_usa.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01484","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.4","title":"stevemisc 0.1.4.8.4","text":"Update documentation migrants_usa.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01483","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.3","title":"stevemisc 0.1.4.8.3","text":"Add migrants_usa.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01482","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.2","title":"stevemisc 0.1.4.8.2","text":"Update steve_clothes.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-01481","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8.1","title":"stevemisc 0.1.4.8.1","text":"Update DJIA.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0148","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.8","title":"stevemisc 0.1.4.8","text":"Add DJIA.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0147","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.7","title":"stevemisc 0.1.4.7","text":"Add aluminum_premiums.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0146","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.6","title":"stevemisc 0.1.4.6","text":"Update theme_steve(), theme_steve_web(), ustradegdp.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0144","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.4","title":"stevemisc 0.1.4.4","text":"Add ustradegdp.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0143","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.3","title":"stevemisc 0.1.4.3","text":"Add steves_clothes.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0142","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.2","title":"stevemisc 0.1.4.2","text":"Add several data sets: articseaice, co2data, osu_results, sealevels.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-0141","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4.1","title":"stevemisc 0.1.4.1","text":"Fix dplyr NAMESPACE issue,thanks David Armstrong recommending .","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-014","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.4","title":"stevemisc 0.1.4","text":"Add get_var_info(), theme_steve_web2(), fonts. inst/fonts directory.","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-013","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.3","title":"stevemisc 0.1.3","text":"Add theme_steve_web()","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-012","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.2","title":"stevemisc 0.1.2","text":"Changed title theme_steve(). Add mround2()","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-011","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.1","title":"stevemisc 0.1.1","text":"Changed title theme_steve()","code":""},{"path":"http://svmiller.com/news/index.html","id":"stevemisc-010","dir":"Changelog","previous_headings":"","what":"stevemisc 0.1.0","title":"stevemisc 0.1.0","text":"Initial developmental release. Features included: sbtscs() show_ranef() theme_steve()","code":""}]
